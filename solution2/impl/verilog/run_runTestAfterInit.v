// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_runTestAfterInit (
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        inputAOV,
        outcomeInRam_address0,
        outcomeInRam_ce0,
        outcomeInRam_d0,
        outcomeInRam_q0,
        outcomeInRam_we0,
        errorInTask_address0,
        errorInTask_ce0,
        errorInTask_d0,
        errorInTask_q0,
        errorInTask_we0,
        n_regions_V_address0,
        n_regions_V_ce0,
        n_regions_V_d0,
        n_regions_V_q0,
        n_regions_V_we0,
        n_regions_V_address1,
        n_regions_V_ce1,
        n_regions_V_d1,
        n_regions_V_q1,
        n_regions_V_we1,
        regions_address0,
        regions_ce0,
        regions_d0,
        regions_q0,
        regions_we0,
        regions_address1,
        regions_ce1,
        regions_d1,
        regions_q1,
        regions_we1,
        regions_1_address0,
        regions_1_ce0,
        regions_1_d0,
        regions_1_q0,
        regions_1_we0,
        regions_1_address1,
        regions_1_ce1,
        regions_1_d1,
        regions_1_q1,
        regions_1_we1,
        regions_2_address0,
        regions_2_ce0,
        regions_2_d0,
        regions_2_q0,
        regions_2_we0,
        regions_2_address1,
        regions_2_ce1,
        regions_2_d1,
        regions_2_q1,
        regions_2_we1,
        regions_3_address0,
        regions_3_ce0,
        regions_3_d0,
        regions_3_q0,
        regions_3_we0,
        regions_3_address1,
        regions_3_ce1,
        regions_3_d1,
        regions_3_q1,
        regions_3_we1,
        ap_clk,
        ap_rst,
        inputAOV_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] inputAOV;
output  [3:0] outcomeInRam_address0;
output   outcomeInRam_ce0;
output  [287:0] outcomeInRam_d0;
input  [287:0] outcomeInRam_q0;
output  [35:0] outcomeInRam_we0;
output  [3:0] errorInTask_address0;
output   errorInTask_ce0;
output  [0:0] errorInTask_d0;
input  [0:0] errorInTask_q0;
output   errorInTask_we0;
output  [5:0] n_regions_V_address0;
output   n_regions_V_ce0;
output  [7:0] n_regions_V_d0;
input  [7:0] n_regions_V_q0;
output   n_regions_V_we0;
output  [5:0] n_regions_V_address1;
output   n_regions_V_ce1;
output  [7:0] n_regions_V_d1;
input  [7:0] n_regions_V_q1;
output   n_regions_V_we1;
output  [11:0] regions_address0;
output   regions_ce0;
output  [31:0] regions_d0;
input  [31:0] regions_q0;
output   regions_we0;
output  [11:0] regions_address1;
output   regions_ce1;
output  [31:0] regions_d1;
input  [31:0] regions_q1;
output   regions_we1;
output  [11:0] regions_1_address0;
output   regions_1_ce0;
output  [31:0] regions_1_d0;
input  [31:0] regions_1_q0;
output   regions_1_we0;
output  [11:0] regions_1_address1;
output   regions_1_ce1;
output  [31:0] regions_1_d1;
input  [31:0] regions_1_q1;
output   regions_1_we1;
output  [11:0] regions_2_address0;
output   regions_2_ce0;
output  [31:0] regions_2_d0;
input  [31:0] regions_2_q0;
output   regions_2_we0;
output  [11:0] regions_2_address1;
output   regions_2_ce1;
output  [31:0] regions_2_d1;
input  [31:0] regions_2_q1;
output   regions_2_we1;
output  [11:0] regions_3_address0;
output   regions_3_ce0;
output  [31:0] regions_3_d0;
input  [31:0] regions_3_q0;
output   regions_3_we0;
output  [11:0] regions_3_address1;
output   regions_3_ce1;
output  [31:0] regions_3_d1;
input  [31:0] regions_3_q1;
output   regions_3_we1;
input   ap_clk;
input   ap_rst;
input   inputAOV_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    read_train_U0_ap_start;
wire    read_train_U0_ap_done;
wire    read_train_U0_ap_continue;
wire    read_train_U0_ap_idle;
wire    read_train_U0_ap_ready;
wire    read_train_U0_m_axi_gmem_AWVALID;
wire   [63:0] read_train_U0_m_axi_gmem_AWADDR;
wire   [0:0] read_train_U0_m_axi_gmem_AWID;
wire   [31:0] read_train_U0_m_axi_gmem_AWLEN;
wire   [2:0] read_train_U0_m_axi_gmem_AWSIZE;
wire   [1:0] read_train_U0_m_axi_gmem_AWBURST;
wire   [1:0] read_train_U0_m_axi_gmem_AWLOCK;
wire   [3:0] read_train_U0_m_axi_gmem_AWCACHE;
wire   [2:0] read_train_U0_m_axi_gmem_AWPROT;
wire   [3:0] read_train_U0_m_axi_gmem_AWQOS;
wire   [3:0] read_train_U0_m_axi_gmem_AWREGION;
wire   [0:0] read_train_U0_m_axi_gmem_AWUSER;
wire    read_train_U0_m_axi_gmem_WVALID;
wire   [511:0] read_train_U0_m_axi_gmem_WDATA;
wire   [63:0] read_train_U0_m_axi_gmem_WSTRB;
wire    read_train_U0_m_axi_gmem_WLAST;
wire   [0:0] read_train_U0_m_axi_gmem_WID;
wire   [0:0] read_train_U0_m_axi_gmem_WUSER;
wire    read_train_U0_m_axi_gmem_ARVALID;
wire   [63:0] read_train_U0_m_axi_gmem_ARADDR;
wire   [0:0] read_train_U0_m_axi_gmem_ARID;
wire   [31:0] read_train_U0_m_axi_gmem_ARLEN;
wire   [2:0] read_train_U0_m_axi_gmem_ARSIZE;
wire   [1:0] read_train_U0_m_axi_gmem_ARBURST;
wire   [1:0] read_train_U0_m_axi_gmem_ARLOCK;
wire   [3:0] read_train_U0_m_axi_gmem_ARCACHE;
wire   [2:0] read_train_U0_m_axi_gmem_ARPROT;
wire   [3:0] read_train_U0_m_axi_gmem_ARQOS;
wire   [3:0] read_train_U0_m_axi_gmem_ARREGION;
wire   [0:0] read_train_U0_m_axi_gmem_ARUSER;
wire    read_train_U0_m_axi_gmem_RREADY;
wire    read_train_U0_m_axi_gmem_BREADY;
wire   [7:0] read_train_U0_ap_return_0;
wire   [3:0] read_train_U0_ap_return_1;
wire   [15:0] read_train_U0_ap_return_2;
wire   [31:0] read_train_U0_ap_return_3;
wire   [31:0] read_train_U0_ap_return_4;
wire   [31:0] read_train_U0_ap_return_5;
wire   [31:0] read_train_U0_ap_return_6;
wire   [31:0] read_train_U0_ap_return_7;
wire   [31:0] read_train_U0_ap_return_8;
wire   [31:0] read_train_U0_ap_return_9;
wire   [31:0] read_train_U0_ap_return_10;
wire    ap_channel_done_contr_AOV_7_c25_channel;
wire    contr_AOV_7_c25_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_7_c25_channel;
wire    ap_sync_channel_write_contr_AOV_7_c25_channel;
wire    ap_channel_done_contr_AOV_6_c24_channel;
wire    contr_AOV_6_c24_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_6_c24_channel;
wire    ap_sync_channel_write_contr_AOV_6_c24_channel;
wire    ap_channel_done_contr_AOV_5_c23_channel;
wire    contr_AOV_5_c23_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_5_c23_channel;
wire    ap_sync_channel_write_contr_AOV_5_c23_channel;
wire    ap_channel_done_contr_AOV_4_c22_channel;
wire    contr_AOV_4_c22_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_4_c22_channel;
wire    ap_sync_channel_write_contr_AOV_4_c22_channel;
wire    ap_channel_done_contr_AOV_3_c21_channel;
wire    contr_AOV_3_c21_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_3_c21_channel;
wire    ap_sync_channel_write_contr_AOV_3_c21_channel;
wire    ap_channel_done_contr_AOV_2_c20_channel;
wire    contr_AOV_2_c20_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_2_c20_channel;
wire    ap_sync_channel_write_contr_AOV_2_c20_channel;
wire    ap_channel_done_contr_AOV_1_c19_channel;
wire    contr_AOV_1_c19_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_1_c19_channel;
wire    ap_sync_channel_write_contr_AOV_1_c19_channel;
wire    ap_channel_done_contr_AOV_c18_channel;
wire    contr_AOV_c18_channel_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_c18_channel;
wire    ap_sync_channel_write_contr_AOV_c18_channel;
wire    ap_channel_done_contr_uniId_V;
wire    contr_uniId_V_full_n;
reg    ap_sync_reg_channel_write_contr_uniId_V;
wire    ap_sync_channel_write_contr_uniId_V;
wire    ap_channel_done_contr_taskId_V;
wire    contr_taskId_V_full_n;
reg    ap_sync_reg_channel_write_contr_taskId_V;
wire    ap_sync_channel_write_contr_taskId_V;
wire    ap_channel_done_contr_checkId_V;
wire    contr_checkId_V_full_n;
reg    ap_sync_reg_channel_write_contr_checkId_V;
wire    ap_sync_channel_write_contr_checkId_V;
wire    runTestAfterInit_Block_entry79_proc_U0_ap_start;
wire    runTestAfterInit_Block_entry79_proc_U0_ap_done;
wire    runTestAfterInit_Block_entry79_proc_U0_ap_continue;
wire    runTestAfterInit_Block_entry79_proc_U0_ap_idle;
wire    runTestAfterInit_Block_entry79_proc_U0_ap_ready;
wire   [5:0] runTestAfterInit_Block_entry79_proc_U0_n_regions_V_address0;
wire    runTestAfterInit_Block_entry79_proc_U0_n_regions_V_ce0;
wire   [7:0] runTestAfterInit_Block_entry79_proc_U0_ap_return_0;
wire   [5:0] runTestAfterInit_Block_entry79_proc_U0_ap_return_1;
wire   [7:0] runTestAfterInit_Block_entry79_proc_U0_ap_return_2;
wire    ap_channel_done_n_regions_V_load_loc_channel;
wire    n_regions_V_load_loc_channel_full_n;
reg    ap_sync_reg_channel_write_n_regions_V_load_loc_channel;
wire    ap_sync_channel_write_n_regions_V_load_loc_channel;
wire    ap_channel_done_contr_checkId_V_load_cast_loc_channel;
wire    contr_checkId_V_load_cast_loc_channel_full_n;
reg    ap_sync_reg_channel_write_contr_checkId_V_load_cast_loc_channel;
wire    ap_sync_channel_write_contr_checkId_V_load_cast_loc_channel;
wire    ap_channel_done_contr_checkId_V_load_loc_channel;
wire    contr_checkId_V_load_loc_channel_full_n;
reg    ap_sync_reg_channel_write_contr_checkId_V_load_loc_channel;
wire    ap_sync_channel_write_contr_checkId_V_load_loc_channel;
wire    run_test_U0_ap_start;
wire    run_test_U0_ap_done;
wire    run_test_U0_ap_continue;
wire    run_test_U0_ap_idle;
wire    run_test_U0_ap_ready;
wire   [11:0] run_test_U0_regions_address0;
wire    run_test_U0_regions_ce0;
wire   [11:0] run_test_U0_regions_1_address0;
wire    run_test_U0_regions_1_ce0;
wire   [11:0] run_test_U0_regions_2_address0;
wire    run_test_U0_regions_2_ce0;
wire   [11:0] run_test_U0_regions_3_address0;
wire    run_test_U0_regions_3_ce0;
wire   [31:0] run_test_U0_contr_AOV_c_din;
wire    run_test_U0_contr_AOV_c_write;
wire   [31:0] run_test_U0_contr_AOV_1_c_din;
wire    run_test_U0_contr_AOV_1_c_write;
wire   [31:0] run_test_U0_contr_AOV_2_c_din;
wire    run_test_U0_contr_AOV_2_c_write;
wire   [31:0] run_test_U0_contr_AOV_3_c_din;
wire    run_test_U0_contr_AOV_3_c_write;
wire   [31:0] run_test_U0_contr_AOV_4_c_din;
wire    run_test_U0_contr_AOV_4_c_write;
wire   [31:0] run_test_U0_contr_AOV_5_c_din;
wire    run_test_U0_contr_AOV_5_c_write;
wire   [31:0] run_test_U0_contr_AOV_6_c_din;
wire    run_test_U0_contr_AOV_6_c_write;
wire   [31:0] run_test_U0_contr_AOV_7_c_din;
wire    run_test_U0_contr_AOV_7_c_write;
wire   [0:0] run_test_U0_ap_return;
wire    error_full_n;
wire    writeOutcome_U0_ap_start;
wire    writeOutcome_U0_ap_done;
wire    writeOutcome_U0_ap_continue;
wire    writeOutcome_U0_ap_idle;
wire    writeOutcome_U0_ap_ready;
wire   [3:0] writeOutcome_U0_errorInTask_address0;
wire    writeOutcome_U0_errorInTask_ce0;
wire    writeOutcome_U0_errorInTask_we0;
wire   [0:0] writeOutcome_U0_errorInTask_d0;
wire   [3:0] writeOutcome_U0_outcomeInRam_address0;
wire    writeOutcome_U0_outcomeInRam_ce0;
wire   [35:0] writeOutcome_U0_outcomeInRam_we0;
wire   [287:0] writeOutcome_U0_outcomeInRam_d0;
wire    writeOutcome_U0_contr_AOV_read;
wire    writeOutcome_U0_contr_AOV_1_read;
wire    writeOutcome_U0_contr_AOV_2_read;
wire    writeOutcome_U0_contr_AOV_3_read;
wire    writeOutcome_U0_contr_AOV_4_read;
wire    writeOutcome_U0_contr_AOV_5_read;
wire    writeOutcome_U0_contr_AOV_6_read;
wire    writeOutcome_U0_contr_AOV_7_read;
wire   [7:0] contr_checkId_V_dout;
wire   [1:0] contr_checkId_V_num_data_valid;
wire   [1:0] contr_checkId_V_fifo_cap;
wire    contr_checkId_V_empty_n;
wire   [3:0] contr_taskId_V_dout;
wire   [2:0] contr_taskId_V_num_data_valid;
wire   [2:0] contr_taskId_V_fifo_cap;
wire    contr_taskId_V_empty_n;
wire   [15:0] contr_uniId_V_dout;
wire   [2:0] contr_uniId_V_num_data_valid;
wire   [2:0] contr_uniId_V_fifo_cap;
wire    contr_uniId_V_empty_n;
wire   [31:0] contr_AOV_c18_channel_dout;
wire   [2:0] contr_AOV_c18_channel_num_data_valid;
wire   [2:0] contr_AOV_c18_channel_fifo_cap;
wire    contr_AOV_c18_channel_empty_n;
wire   [31:0] contr_AOV_1_c19_channel_dout;
wire   [2:0] contr_AOV_1_c19_channel_num_data_valid;
wire   [2:0] contr_AOV_1_c19_channel_fifo_cap;
wire    contr_AOV_1_c19_channel_empty_n;
wire   [31:0] contr_AOV_2_c20_channel_dout;
wire   [2:0] contr_AOV_2_c20_channel_num_data_valid;
wire   [2:0] contr_AOV_2_c20_channel_fifo_cap;
wire    contr_AOV_2_c20_channel_empty_n;
wire   [31:0] contr_AOV_3_c21_channel_dout;
wire   [2:0] contr_AOV_3_c21_channel_num_data_valid;
wire   [2:0] contr_AOV_3_c21_channel_fifo_cap;
wire    contr_AOV_3_c21_channel_empty_n;
wire   [31:0] contr_AOV_4_c22_channel_dout;
wire   [2:0] contr_AOV_4_c22_channel_num_data_valid;
wire   [2:0] contr_AOV_4_c22_channel_fifo_cap;
wire    contr_AOV_4_c22_channel_empty_n;
wire   [31:0] contr_AOV_5_c23_channel_dout;
wire   [2:0] contr_AOV_5_c23_channel_num_data_valid;
wire   [2:0] contr_AOV_5_c23_channel_fifo_cap;
wire    contr_AOV_5_c23_channel_empty_n;
wire   [31:0] contr_AOV_6_c24_channel_dout;
wire   [2:0] contr_AOV_6_c24_channel_num_data_valid;
wire   [2:0] contr_AOV_6_c24_channel_fifo_cap;
wire    contr_AOV_6_c24_channel_empty_n;
wire   [31:0] contr_AOV_7_c25_channel_dout;
wire   [2:0] contr_AOV_7_c25_channel_num_data_valid;
wire   [2:0] contr_AOV_7_c25_channel_fifo_cap;
wire    contr_AOV_7_c25_channel_empty_n;
wire   [7:0] contr_checkId_V_load_loc_channel_dout;
wire   [2:0] contr_checkId_V_load_loc_channel_num_data_valid;
wire   [2:0] contr_checkId_V_load_loc_channel_fifo_cap;
wire    contr_checkId_V_load_loc_channel_empty_n;
wire   [5:0] contr_checkId_V_load_cast_loc_channel_dout;
wire   [1:0] contr_checkId_V_load_cast_loc_channel_num_data_valid;
wire   [1:0] contr_checkId_V_load_cast_loc_channel_fifo_cap;
wire    contr_checkId_V_load_cast_loc_channel_empty_n;
wire   [7:0] n_regions_V_load_loc_channel_dout;
wire   [1:0] n_regions_V_load_loc_channel_num_data_valid;
wire   [1:0] n_regions_V_load_loc_channel_fifo_cap;
wire    n_regions_V_load_loc_channel_empty_n;
wire    contr_AOV_c_full_n;
wire   [31:0] contr_AOV_c_dout;
wire   [1:0] contr_AOV_c_num_data_valid;
wire   [1:0] contr_AOV_c_fifo_cap;
wire    contr_AOV_c_empty_n;
wire    contr_AOV_1_c_full_n;
wire   [31:0] contr_AOV_1_c_dout;
wire   [1:0] contr_AOV_1_c_num_data_valid;
wire   [1:0] contr_AOV_1_c_fifo_cap;
wire    contr_AOV_1_c_empty_n;
wire    contr_AOV_2_c_full_n;
wire   [31:0] contr_AOV_2_c_dout;
wire   [1:0] contr_AOV_2_c_num_data_valid;
wire   [1:0] contr_AOV_2_c_fifo_cap;
wire    contr_AOV_2_c_empty_n;
wire    contr_AOV_3_c_full_n;
wire   [31:0] contr_AOV_3_c_dout;
wire   [1:0] contr_AOV_3_c_num_data_valid;
wire   [1:0] contr_AOV_3_c_fifo_cap;
wire    contr_AOV_3_c_empty_n;
wire    contr_AOV_4_c_full_n;
wire   [31:0] contr_AOV_4_c_dout;
wire   [1:0] contr_AOV_4_c_num_data_valid;
wire   [1:0] contr_AOV_4_c_fifo_cap;
wire    contr_AOV_4_c_empty_n;
wire    contr_AOV_5_c_full_n;
wire   [31:0] contr_AOV_5_c_dout;
wire   [1:0] contr_AOV_5_c_num_data_valid;
wire   [1:0] contr_AOV_5_c_fifo_cap;
wire    contr_AOV_5_c_empty_n;
wire    contr_AOV_6_c_full_n;
wire   [31:0] contr_AOV_6_c_dout;
wire   [1:0] contr_AOV_6_c_num_data_valid;
wire   [1:0] contr_AOV_6_c_fifo_cap;
wire    contr_AOV_6_c_empty_n;
wire    contr_AOV_7_c_full_n;
wire   [31:0] contr_AOV_7_c_dout;
wire   [1:0] contr_AOV_7_c_num_data_valid;
wire   [1:0] contr_AOV_7_c_fifo_cap;
wire    contr_AOV_7_c_empty_n;
wire   [0:0] error_dout;
wire   [1:0] error_num_data_valid;
wire   [1:0] error_fifo_cap;
wire    error_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_read_train_U0_ap_ready;
wire    ap_sync_read_train_U0_ap_ready;
reg    ap_sync_reg_runTestAfterInit_Block_entry79_proc_U0_ap_ready;
wire    ap_sync_runTestAfterInit_Block_entry79_proc_U0_ap_ready;
reg    ap_sync_reg_run_test_U0_ap_ready;
wire    ap_sync_run_test_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_contr_AOV_7_c25_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_6_c24_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_5_c23_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_4_c22_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_3_c21_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_2_c20_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_1_c19_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_c18_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_uniId_V = 1'b0;
#0 ap_sync_reg_channel_write_contr_taskId_V = 1'b0;
#0 ap_sync_reg_channel_write_contr_checkId_V = 1'b0;
#0 ap_sync_reg_channel_write_n_regions_V_load_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_checkId_V_load_cast_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_contr_checkId_V_load_loc_channel = 1'b0;
#0 ap_sync_reg_read_train_U0_ap_ready = 1'b0;
#0 ap_sync_reg_runTestAfterInit_Block_entry79_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_run_test_U0_ap_ready = 1'b0;
end

run_read_train read_train_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(read_train_U0_ap_start),
    .ap_done(read_train_U0_ap_done),
    .ap_continue(read_train_U0_ap_continue),
    .ap_idle(read_train_U0_ap_idle),
    .ap_ready(read_train_U0_ap_ready),
    .m_axi_gmem_AWVALID(read_train_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(read_train_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(read_train_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(read_train_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(read_train_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(read_train_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(read_train_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(read_train_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(read_train_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(read_train_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(read_train_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(read_train_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(read_train_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(read_train_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(read_train_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(read_train_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(read_train_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(read_train_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(read_train_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(read_train_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(read_train_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(read_train_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(read_train_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(read_train_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(read_train_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(read_train_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(read_train_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(read_train_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(read_train_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(read_train_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(read_train_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RFIFONUM(m_axi_gmem_RFIFONUM),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(read_train_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .inputAOV(inputAOV),
    .ap_return_0(read_train_U0_ap_return_0),
    .ap_return_1(read_train_U0_ap_return_1),
    .ap_return_2(read_train_U0_ap_return_2),
    .ap_return_3(read_train_U0_ap_return_3),
    .ap_return_4(read_train_U0_ap_return_4),
    .ap_return_5(read_train_U0_ap_return_5),
    .ap_return_6(read_train_U0_ap_return_6),
    .ap_return_7(read_train_U0_ap_return_7),
    .ap_return_8(read_train_U0_ap_return_8),
    .ap_return_9(read_train_U0_ap_return_9),
    .ap_return_10(read_train_U0_ap_return_10)
);

run_runTestAfterInit_Block_entry79_proc runTestAfterInit_Block_entry79_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(runTestAfterInit_Block_entry79_proc_U0_ap_start),
    .ap_done(runTestAfterInit_Block_entry79_proc_U0_ap_done),
    .ap_continue(runTestAfterInit_Block_entry79_proc_U0_ap_continue),
    .ap_idle(runTestAfterInit_Block_entry79_proc_U0_ap_idle),
    .ap_ready(runTestAfterInit_Block_entry79_proc_U0_ap_ready),
    .p_read(contr_checkId_V_dout),
    .n_regions_V_address0(runTestAfterInit_Block_entry79_proc_U0_n_regions_V_address0),
    .n_regions_V_ce0(runTestAfterInit_Block_entry79_proc_U0_n_regions_V_ce0),
    .n_regions_V_q0(n_regions_V_q0),
    .ap_return_0(runTestAfterInit_Block_entry79_proc_U0_ap_return_0),
    .ap_return_1(runTestAfterInit_Block_entry79_proc_U0_ap_return_1),
    .ap_return_2(runTestAfterInit_Block_entry79_proc_U0_ap_return_2)
);

run_run_test run_test_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(run_test_U0_ap_start),
    .ap_done(run_test_U0_ap_done),
    .ap_continue(run_test_U0_ap_continue),
    .ap_idle(run_test_U0_ap_idle),
    .ap_ready(run_test_U0_ap_ready),
    .regions_address0(run_test_U0_regions_address0),
    .regions_ce0(run_test_U0_regions_ce0),
    .regions_q0(regions_q0),
    .p_read1(contr_checkId_V_load_cast_loc_channel_dout),
    .regions_1_address0(run_test_U0_regions_1_address0),
    .regions_1_ce0(run_test_U0_regions_1_ce0),
    .regions_1_q0(regions_1_q0),
    .regions_2_address0(run_test_U0_regions_2_address0),
    .regions_2_ce0(run_test_U0_regions_2_ce0),
    .regions_2_q0(regions_2_q0),
    .regions_3_address0(run_test_U0_regions_3_address0),
    .regions_3_ce0(run_test_U0_regions_3_ce0),
    .regions_3_q0(regions_3_q0),
    .p_read2(n_regions_V_load_loc_channel_dout),
    .p_read3(contr_AOV_c18_channel_dout),
    .p_read4(contr_AOV_1_c19_channel_dout),
    .p_read5(contr_AOV_2_c20_channel_dout),
    .p_read6(contr_AOV_3_c21_channel_dout),
    .p_read7(contr_AOV_4_c22_channel_dout),
    .p_read8(contr_AOV_5_c23_channel_dout),
    .p_read9(contr_AOV_6_c24_channel_dout),
    .p_read10(contr_AOV_7_c25_channel_dout),
    .contr_AOV_c_din(run_test_U0_contr_AOV_c_din),
    .contr_AOV_c_num_data_valid(contr_AOV_c_num_data_valid),
    .contr_AOV_c_fifo_cap(contr_AOV_c_fifo_cap),
    .contr_AOV_c_full_n(contr_AOV_c_full_n),
    .contr_AOV_c_write(run_test_U0_contr_AOV_c_write),
    .contr_AOV_1_c_din(run_test_U0_contr_AOV_1_c_din),
    .contr_AOV_1_c_num_data_valid(contr_AOV_1_c_num_data_valid),
    .contr_AOV_1_c_fifo_cap(contr_AOV_1_c_fifo_cap),
    .contr_AOV_1_c_full_n(contr_AOV_1_c_full_n),
    .contr_AOV_1_c_write(run_test_U0_contr_AOV_1_c_write),
    .contr_AOV_2_c_din(run_test_U0_contr_AOV_2_c_din),
    .contr_AOV_2_c_num_data_valid(contr_AOV_2_c_num_data_valid),
    .contr_AOV_2_c_fifo_cap(contr_AOV_2_c_fifo_cap),
    .contr_AOV_2_c_full_n(contr_AOV_2_c_full_n),
    .contr_AOV_2_c_write(run_test_U0_contr_AOV_2_c_write),
    .contr_AOV_3_c_din(run_test_U0_contr_AOV_3_c_din),
    .contr_AOV_3_c_num_data_valid(contr_AOV_3_c_num_data_valid),
    .contr_AOV_3_c_fifo_cap(contr_AOV_3_c_fifo_cap),
    .contr_AOV_3_c_full_n(contr_AOV_3_c_full_n),
    .contr_AOV_3_c_write(run_test_U0_contr_AOV_3_c_write),
    .contr_AOV_4_c_din(run_test_U0_contr_AOV_4_c_din),
    .contr_AOV_4_c_num_data_valid(contr_AOV_4_c_num_data_valid),
    .contr_AOV_4_c_fifo_cap(contr_AOV_4_c_fifo_cap),
    .contr_AOV_4_c_full_n(contr_AOV_4_c_full_n),
    .contr_AOV_4_c_write(run_test_U0_contr_AOV_4_c_write),
    .contr_AOV_5_c_din(run_test_U0_contr_AOV_5_c_din),
    .contr_AOV_5_c_num_data_valid(contr_AOV_5_c_num_data_valid),
    .contr_AOV_5_c_fifo_cap(contr_AOV_5_c_fifo_cap),
    .contr_AOV_5_c_full_n(contr_AOV_5_c_full_n),
    .contr_AOV_5_c_write(run_test_U0_contr_AOV_5_c_write),
    .contr_AOV_6_c_din(run_test_U0_contr_AOV_6_c_din),
    .contr_AOV_6_c_num_data_valid(contr_AOV_6_c_num_data_valid),
    .contr_AOV_6_c_fifo_cap(contr_AOV_6_c_fifo_cap),
    .contr_AOV_6_c_full_n(contr_AOV_6_c_full_n),
    .contr_AOV_6_c_write(run_test_U0_contr_AOV_6_c_write),
    .contr_AOV_7_c_din(run_test_U0_contr_AOV_7_c_din),
    .contr_AOV_7_c_num_data_valid(contr_AOV_7_c_num_data_valid),
    .contr_AOV_7_c_fifo_cap(contr_AOV_7_c_fifo_cap),
    .contr_AOV_7_c_full_n(contr_AOV_7_c_full_n),
    .contr_AOV_7_c_write(run_test_U0_contr_AOV_7_c_write),
    .ap_return(run_test_U0_ap_return)
);

run_writeOutcome writeOutcome_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(writeOutcome_U0_ap_start),
    .ap_done(writeOutcome_U0_ap_done),
    .ap_continue(writeOutcome_U0_ap_continue),
    .ap_idle(writeOutcome_U0_ap_idle),
    .ap_ready(writeOutcome_U0_ap_ready),
    .errorInTask_address0(writeOutcome_U0_errorInTask_address0),
    .errorInTask_ce0(writeOutcome_U0_errorInTask_ce0),
    .errorInTask_we0(writeOutcome_U0_errorInTask_we0),
    .errorInTask_d0(writeOutcome_U0_errorInTask_d0),
    .p_read(contr_taskId_V_dout),
    .p_read1(contr_checkId_V_load_loc_channel_dout),
    .p_read2(contr_uniId_V_dout),
    .p_read3(error_dout),
    .outcomeInRam_address0(writeOutcome_U0_outcomeInRam_address0),
    .outcomeInRam_ce0(writeOutcome_U0_outcomeInRam_ce0),
    .outcomeInRam_we0(writeOutcome_U0_outcomeInRam_we0),
    .outcomeInRam_d0(writeOutcome_U0_outcomeInRam_d0),
    .contr_AOV_dout(contr_AOV_c_dout),
    .contr_AOV_num_data_valid(contr_AOV_c_num_data_valid),
    .contr_AOV_fifo_cap(contr_AOV_c_fifo_cap),
    .contr_AOV_empty_n(contr_AOV_c_empty_n),
    .contr_AOV_read(writeOutcome_U0_contr_AOV_read),
    .contr_AOV_1_dout(contr_AOV_1_c_dout),
    .contr_AOV_1_num_data_valid(contr_AOV_1_c_num_data_valid),
    .contr_AOV_1_fifo_cap(contr_AOV_1_c_fifo_cap),
    .contr_AOV_1_empty_n(contr_AOV_1_c_empty_n),
    .contr_AOV_1_read(writeOutcome_U0_contr_AOV_1_read),
    .contr_AOV_2_dout(contr_AOV_2_c_dout),
    .contr_AOV_2_num_data_valid(contr_AOV_2_c_num_data_valid),
    .contr_AOV_2_fifo_cap(contr_AOV_2_c_fifo_cap),
    .contr_AOV_2_empty_n(contr_AOV_2_c_empty_n),
    .contr_AOV_2_read(writeOutcome_U0_contr_AOV_2_read),
    .contr_AOV_3_dout(contr_AOV_3_c_dout),
    .contr_AOV_3_num_data_valid(contr_AOV_3_c_num_data_valid),
    .contr_AOV_3_fifo_cap(contr_AOV_3_c_fifo_cap),
    .contr_AOV_3_empty_n(contr_AOV_3_c_empty_n),
    .contr_AOV_3_read(writeOutcome_U0_contr_AOV_3_read),
    .contr_AOV_4_dout(contr_AOV_4_c_dout),
    .contr_AOV_4_num_data_valid(contr_AOV_4_c_num_data_valid),
    .contr_AOV_4_fifo_cap(contr_AOV_4_c_fifo_cap),
    .contr_AOV_4_empty_n(contr_AOV_4_c_empty_n),
    .contr_AOV_4_read(writeOutcome_U0_contr_AOV_4_read),
    .contr_AOV_5_dout(contr_AOV_5_c_dout),
    .contr_AOV_5_num_data_valid(contr_AOV_5_c_num_data_valid),
    .contr_AOV_5_fifo_cap(contr_AOV_5_c_fifo_cap),
    .contr_AOV_5_empty_n(contr_AOV_5_c_empty_n),
    .contr_AOV_5_read(writeOutcome_U0_contr_AOV_5_read),
    .contr_AOV_6_dout(contr_AOV_6_c_dout),
    .contr_AOV_6_num_data_valid(contr_AOV_6_c_num_data_valid),
    .contr_AOV_6_fifo_cap(contr_AOV_6_c_fifo_cap),
    .contr_AOV_6_empty_n(contr_AOV_6_c_empty_n),
    .contr_AOV_6_read(writeOutcome_U0_contr_AOV_6_read),
    .contr_AOV_7_dout(contr_AOV_7_c_dout),
    .contr_AOV_7_num_data_valid(contr_AOV_7_c_num_data_valid),
    .contr_AOV_7_fifo_cap(contr_AOV_7_c_fifo_cap),
    .contr_AOV_7_empty_n(contr_AOV_7_c_empty_n),
    .contr_AOV_7_read(writeOutcome_U0_contr_AOV_7_read)
);

run_fifo_w8_d2_S contr_checkId_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_0),
    .if_full_n(contr_checkId_V_full_n),
    .if_write(ap_channel_done_contr_checkId_V),
    .if_dout(contr_checkId_V_dout),
    .if_num_data_valid(contr_checkId_V_num_data_valid),
    .if_fifo_cap(contr_checkId_V_fifo_cap),
    .if_empty_n(contr_checkId_V_empty_n),
    .if_read(runTestAfterInit_Block_entry79_proc_U0_ap_ready)
);

run_fifo_w4_d4_S contr_taskId_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_1),
    .if_full_n(contr_taskId_V_full_n),
    .if_write(ap_channel_done_contr_taskId_V),
    .if_dout(contr_taskId_V_dout),
    .if_num_data_valid(contr_taskId_V_num_data_valid),
    .if_fifo_cap(contr_taskId_V_fifo_cap),
    .if_empty_n(contr_taskId_V_empty_n),
    .if_read(writeOutcome_U0_ap_ready)
);

run_fifo_w16_d4_S contr_uniId_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_2),
    .if_full_n(contr_uniId_V_full_n),
    .if_write(ap_channel_done_contr_uniId_V),
    .if_dout(contr_uniId_V_dout),
    .if_num_data_valid(contr_uniId_V_num_data_valid),
    .if_fifo_cap(contr_uniId_V_fifo_cap),
    .if_empty_n(contr_uniId_V_empty_n),
    .if_read(writeOutcome_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_c18_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_3),
    .if_full_n(contr_AOV_c18_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_c18_channel),
    .if_dout(contr_AOV_c18_channel_dout),
    .if_num_data_valid(contr_AOV_c18_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_c18_channel_fifo_cap),
    .if_empty_n(contr_AOV_c18_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_1_c19_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_4),
    .if_full_n(contr_AOV_1_c19_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_1_c19_channel),
    .if_dout(contr_AOV_1_c19_channel_dout),
    .if_num_data_valid(contr_AOV_1_c19_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_1_c19_channel_fifo_cap),
    .if_empty_n(contr_AOV_1_c19_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_2_c20_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_5),
    .if_full_n(contr_AOV_2_c20_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_2_c20_channel),
    .if_dout(contr_AOV_2_c20_channel_dout),
    .if_num_data_valid(contr_AOV_2_c20_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_2_c20_channel_fifo_cap),
    .if_empty_n(contr_AOV_2_c20_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_3_c21_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_6),
    .if_full_n(contr_AOV_3_c21_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_3_c21_channel),
    .if_dout(contr_AOV_3_c21_channel_dout),
    .if_num_data_valid(contr_AOV_3_c21_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_3_c21_channel_fifo_cap),
    .if_empty_n(contr_AOV_3_c21_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_4_c22_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_7),
    .if_full_n(contr_AOV_4_c22_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_4_c22_channel),
    .if_dout(contr_AOV_4_c22_channel_dout),
    .if_num_data_valid(contr_AOV_4_c22_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_4_c22_channel_fifo_cap),
    .if_empty_n(contr_AOV_4_c22_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_5_c23_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_8),
    .if_full_n(contr_AOV_5_c23_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_5_c23_channel),
    .if_dout(contr_AOV_5_c23_channel_dout),
    .if_num_data_valid(contr_AOV_5_c23_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_5_c23_channel_fifo_cap),
    .if_empty_n(contr_AOV_5_c23_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_6_c24_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_9),
    .if_full_n(contr_AOV_6_c24_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_6_c24_channel),
    .if_dout(contr_AOV_6_c24_channel_dout),
    .if_num_data_valid(contr_AOV_6_c24_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_6_c24_channel_fifo_cap),
    .if_empty_n(contr_AOV_6_c24_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d3_S contr_AOV_7_c25_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_10),
    .if_full_n(contr_AOV_7_c25_channel_full_n),
    .if_write(ap_channel_done_contr_AOV_7_c25_channel),
    .if_dout(contr_AOV_7_c25_channel_dout),
    .if_num_data_valid(contr_AOV_7_c25_channel_num_data_valid),
    .if_fifo_cap(contr_AOV_7_c25_channel_fifo_cap),
    .if_empty_n(contr_AOV_7_c25_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w8_d3_S contr_checkId_V_load_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(runTestAfterInit_Block_entry79_proc_U0_ap_return_0),
    .if_full_n(contr_checkId_V_load_loc_channel_full_n),
    .if_write(ap_channel_done_contr_checkId_V_load_loc_channel),
    .if_dout(contr_checkId_V_load_loc_channel_dout),
    .if_num_data_valid(contr_checkId_V_load_loc_channel_num_data_valid),
    .if_fifo_cap(contr_checkId_V_load_loc_channel_fifo_cap),
    .if_empty_n(contr_checkId_V_load_loc_channel_empty_n),
    .if_read(writeOutcome_U0_ap_ready)
);

run_fifo_w6_d2_S contr_checkId_V_load_cast_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(runTestAfterInit_Block_entry79_proc_U0_ap_return_1),
    .if_full_n(contr_checkId_V_load_cast_loc_channel_full_n),
    .if_write(ap_channel_done_contr_checkId_V_load_cast_loc_channel),
    .if_dout(contr_checkId_V_load_cast_loc_channel_dout),
    .if_num_data_valid(contr_checkId_V_load_cast_loc_channel_num_data_valid),
    .if_fifo_cap(contr_checkId_V_load_cast_loc_channel_fifo_cap),
    .if_empty_n(contr_checkId_V_load_cast_loc_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w8_d2_S n_regions_V_load_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(runTestAfterInit_Block_entry79_proc_U0_ap_return_2),
    .if_full_n(n_regions_V_load_loc_channel_full_n),
    .if_write(ap_channel_done_n_regions_V_load_loc_channel),
    .if_dout(n_regions_V_load_loc_channel_dout),
    .if_num_data_valid(n_regions_V_load_loc_channel_num_data_valid),
    .if_fifo_cap(n_regions_V_load_loc_channel_fifo_cap),
    .if_empty_n(n_regions_V_load_loc_channel_empty_n),
    .if_read(run_test_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_c_din),
    .if_full_n(contr_AOV_c_full_n),
    .if_write(run_test_U0_contr_AOV_c_write),
    .if_dout(contr_AOV_c_dout),
    .if_num_data_valid(contr_AOV_c_num_data_valid),
    .if_fifo_cap(contr_AOV_c_fifo_cap),
    .if_empty_n(contr_AOV_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_read)
);

run_fifo_w32_d2_S contr_AOV_1_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_1_c_din),
    .if_full_n(contr_AOV_1_c_full_n),
    .if_write(run_test_U0_contr_AOV_1_c_write),
    .if_dout(contr_AOV_1_c_dout),
    .if_num_data_valid(contr_AOV_1_c_num_data_valid),
    .if_fifo_cap(contr_AOV_1_c_fifo_cap),
    .if_empty_n(contr_AOV_1_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_1_read)
);

run_fifo_w32_d2_S contr_AOV_2_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_2_c_din),
    .if_full_n(contr_AOV_2_c_full_n),
    .if_write(run_test_U0_contr_AOV_2_c_write),
    .if_dout(contr_AOV_2_c_dout),
    .if_num_data_valid(contr_AOV_2_c_num_data_valid),
    .if_fifo_cap(contr_AOV_2_c_fifo_cap),
    .if_empty_n(contr_AOV_2_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_2_read)
);

run_fifo_w32_d2_S contr_AOV_3_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_3_c_din),
    .if_full_n(contr_AOV_3_c_full_n),
    .if_write(run_test_U0_contr_AOV_3_c_write),
    .if_dout(contr_AOV_3_c_dout),
    .if_num_data_valid(contr_AOV_3_c_num_data_valid),
    .if_fifo_cap(contr_AOV_3_c_fifo_cap),
    .if_empty_n(contr_AOV_3_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_3_read)
);

run_fifo_w32_d2_S contr_AOV_4_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_4_c_din),
    .if_full_n(contr_AOV_4_c_full_n),
    .if_write(run_test_U0_contr_AOV_4_c_write),
    .if_dout(contr_AOV_4_c_dout),
    .if_num_data_valid(contr_AOV_4_c_num_data_valid),
    .if_fifo_cap(contr_AOV_4_c_fifo_cap),
    .if_empty_n(contr_AOV_4_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_4_read)
);

run_fifo_w32_d2_S contr_AOV_5_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_5_c_din),
    .if_full_n(contr_AOV_5_c_full_n),
    .if_write(run_test_U0_contr_AOV_5_c_write),
    .if_dout(contr_AOV_5_c_dout),
    .if_num_data_valid(contr_AOV_5_c_num_data_valid),
    .if_fifo_cap(contr_AOV_5_c_fifo_cap),
    .if_empty_n(contr_AOV_5_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_5_read)
);

run_fifo_w32_d2_S contr_AOV_6_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_6_c_din),
    .if_full_n(contr_AOV_6_c_full_n),
    .if_write(run_test_U0_contr_AOV_6_c_write),
    .if_dout(contr_AOV_6_c_dout),
    .if_num_data_valid(contr_AOV_6_c_num_data_valid),
    .if_fifo_cap(contr_AOV_6_c_fifo_cap),
    .if_empty_n(contr_AOV_6_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_6_read)
);

run_fifo_w32_d2_S contr_AOV_7_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_contr_AOV_7_c_din),
    .if_full_n(contr_AOV_7_c_full_n),
    .if_write(run_test_U0_contr_AOV_7_c_write),
    .if_dout(contr_AOV_7_c_dout),
    .if_num_data_valid(contr_AOV_7_c_num_data_valid),
    .if_fifo_cap(contr_AOV_7_c_fifo_cap),
    .if_empty_n(contr_AOV_7_c_empty_n),
    .if_read(writeOutcome_U0_contr_AOV_7_read)
);

run_fifo_w1_d2_S error_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(run_test_U0_ap_return),
    .if_full_n(error_full_n),
    .if_write(run_test_U0_ap_done),
    .if_dout(error_dout),
    .if_num_data_valid(error_num_data_valid),
    .if_fifo_cap(error_fifo_cap),
    .if_empty_n(error_empty_n),
    .if_read(writeOutcome_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_1_c19_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_1_c19_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_1_c19_channel <= ap_sync_channel_write_contr_AOV_1_c19_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_2_c20_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_2_c20_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_2_c20_channel <= ap_sync_channel_write_contr_AOV_2_c20_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_3_c21_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_3_c21_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_3_c21_channel <= ap_sync_channel_write_contr_AOV_3_c21_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_4_c22_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_4_c22_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_4_c22_channel <= ap_sync_channel_write_contr_AOV_4_c22_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_5_c23_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_5_c23_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_5_c23_channel <= ap_sync_channel_write_contr_AOV_5_c23_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_6_c24_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_6_c24_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_6_c24_channel <= ap_sync_channel_write_contr_AOV_6_c24_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_7_c25_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_7_c25_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_7_c25_channel <= ap_sync_channel_write_contr_AOV_7_c25_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_c18_channel <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_c18_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_c18_channel <= ap_sync_channel_write_contr_AOV_c18_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_checkId_V <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_checkId_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_checkId_V <= ap_sync_channel_write_contr_checkId_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_checkId_V_load_cast_loc_channel <= 1'b0;
    end else begin
        if (((runTestAfterInit_Block_entry79_proc_U0_ap_done & runTestAfterInit_Block_entry79_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_checkId_V_load_cast_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_checkId_V_load_cast_loc_channel <= ap_sync_channel_write_contr_checkId_V_load_cast_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_checkId_V_load_loc_channel <= 1'b0;
    end else begin
        if (((runTestAfterInit_Block_entry79_proc_U0_ap_done & runTestAfterInit_Block_entry79_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_checkId_V_load_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_checkId_V_load_loc_channel <= ap_sync_channel_write_contr_checkId_V_load_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_taskId_V <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_taskId_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_taskId_V <= ap_sync_channel_write_contr_taskId_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_uniId_V <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_uniId_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_uniId_V <= ap_sync_channel_write_contr_uniId_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_n_regions_V_load_loc_channel <= 1'b0;
    end else begin
        if (((runTestAfterInit_Block_entry79_proc_U0_ap_done & runTestAfterInit_Block_entry79_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_n_regions_V_load_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_n_regions_V_load_loc_channel <= ap_sync_channel_write_n_regions_V_load_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_read_train_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_train_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_train_U0_ap_ready <= ap_sync_read_train_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_runTestAfterInit_Block_entry79_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_runTestAfterInit_Block_entry79_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_runTestAfterInit_Block_entry79_proc_U0_ap_ready <= ap_sync_runTestAfterInit_Block_entry79_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_run_test_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_run_test_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_run_test_U0_ap_ready <= ap_sync_run_test_U0_ap_ready;
        end
    end
end

assign ap_channel_done_contr_AOV_1_c19_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_1_c19_channel ^ 1'b1));

assign ap_channel_done_contr_AOV_2_c20_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_2_c20_channel ^ 1'b1));

assign ap_channel_done_contr_AOV_3_c21_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_3_c21_channel ^ 1'b1));

assign ap_channel_done_contr_AOV_4_c22_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_4_c22_channel ^ 1'b1));

assign ap_channel_done_contr_AOV_5_c23_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_5_c23_channel ^ 1'b1));

assign ap_channel_done_contr_AOV_6_c24_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_6_c24_channel ^ 1'b1));

assign ap_channel_done_contr_AOV_7_c25_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_7_c25_channel ^ 1'b1));

assign ap_channel_done_contr_AOV_c18_channel = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_c18_channel ^ 1'b1));

assign ap_channel_done_contr_checkId_V = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_checkId_V ^ 1'b1));

assign ap_channel_done_contr_checkId_V_load_cast_loc_channel = (runTestAfterInit_Block_entry79_proc_U0_ap_done & (ap_sync_reg_channel_write_contr_checkId_V_load_cast_loc_channel ^ 1'b1));

assign ap_channel_done_contr_checkId_V_load_loc_channel = (runTestAfterInit_Block_entry79_proc_U0_ap_done & (ap_sync_reg_channel_write_contr_checkId_V_load_loc_channel ^ 1'b1));

assign ap_channel_done_contr_taskId_V = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_taskId_V ^ 1'b1));

assign ap_channel_done_contr_uniId_V = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_uniId_V ^ 1'b1));

assign ap_channel_done_n_regions_V_load_loc_channel = (runTestAfterInit_Block_entry79_proc_U0_ap_done & (ap_sync_reg_channel_write_n_regions_V_load_loc_channel ^ 1'b1));

assign ap_done = writeOutcome_U0_ap_done;

assign ap_idle = (writeOutcome_U0_ap_idle & run_test_U0_ap_idle & runTestAfterInit_Block_entry79_proc_U0_ap_idle & read_train_U0_ap_idle & (error_empty_n ^ 1'b1) & (n_regions_V_load_loc_channel_empty_n ^ 1'b1) & (contr_checkId_V_load_cast_loc_channel_empty_n ^ 1'b1) & (contr_checkId_V_load_loc_channel_empty_n ^ 1'b1) & (contr_AOV_7_c25_channel_empty_n ^ 1'b1) & (contr_AOV_6_c24_channel_empty_n ^ 1'b1) & (contr_AOV_5_c23_channel_empty_n ^ 1'b1) & (contr_AOV_4_c22_channel_empty_n ^ 1'b1) & (contr_AOV_3_c21_channel_empty_n ^ 1'b1) & (contr_AOV_2_c20_channel_empty_n ^ 1'b1) & (contr_AOV_1_c19_channel_empty_n ^ 1'b1) & (contr_AOV_c18_channel_empty_n ^ 1'b1) & (contr_uniId_V_empty_n ^ 1'b1) & (contr_taskId_V_empty_n ^ 1'b1) & (contr_checkId_V_empty_n ^ 1'b1));

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_contr_AOV_1_c19_channel = ((contr_AOV_1_c19_channel_full_n & ap_channel_done_contr_AOV_1_c19_channel) | ap_sync_reg_channel_write_contr_AOV_1_c19_channel);

assign ap_sync_channel_write_contr_AOV_2_c20_channel = ((contr_AOV_2_c20_channel_full_n & ap_channel_done_contr_AOV_2_c20_channel) | ap_sync_reg_channel_write_contr_AOV_2_c20_channel);

assign ap_sync_channel_write_contr_AOV_3_c21_channel = ((contr_AOV_3_c21_channel_full_n & ap_channel_done_contr_AOV_3_c21_channel) | ap_sync_reg_channel_write_contr_AOV_3_c21_channel);

assign ap_sync_channel_write_contr_AOV_4_c22_channel = ((contr_AOV_4_c22_channel_full_n & ap_channel_done_contr_AOV_4_c22_channel) | ap_sync_reg_channel_write_contr_AOV_4_c22_channel);

assign ap_sync_channel_write_contr_AOV_5_c23_channel = ((contr_AOV_5_c23_channel_full_n & ap_channel_done_contr_AOV_5_c23_channel) | ap_sync_reg_channel_write_contr_AOV_5_c23_channel);

assign ap_sync_channel_write_contr_AOV_6_c24_channel = ((contr_AOV_6_c24_channel_full_n & ap_channel_done_contr_AOV_6_c24_channel) | ap_sync_reg_channel_write_contr_AOV_6_c24_channel);

assign ap_sync_channel_write_contr_AOV_7_c25_channel = ((contr_AOV_7_c25_channel_full_n & ap_channel_done_contr_AOV_7_c25_channel) | ap_sync_reg_channel_write_contr_AOV_7_c25_channel);

assign ap_sync_channel_write_contr_AOV_c18_channel = ((contr_AOV_c18_channel_full_n & ap_channel_done_contr_AOV_c18_channel) | ap_sync_reg_channel_write_contr_AOV_c18_channel);

assign ap_sync_channel_write_contr_checkId_V = ((contr_checkId_V_full_n & ap_channel_done_contr_checkId_V) | ap_sync_reg_channel_write_contr_checkId_V);

assign ap_sync_channel_write_contr_checkId_V_load_cast_loc_channel = ((contr_checkId_V_load_cast_loc_channel_full_n & ap_channel_done_contr_checkId_V_load_cast_loc_channel) | ap_sync_reg_channel_write_contr_checkId_V_load_cast_loc_channel);

assign ap_sync_channel_write_contr_checkId_V_load_loc_channel = ((contr_checkId_V_load_loc_channel_full_n & ap_channel_done_contr_checkId_V_load_loc_channel) | ap_sync_reg_channel_write_contr_checkId_V_load_loc_channel);

assign ap_sync_channel_write_contr_taskId_V = ((contr_taskId_V_full_n & ap_channel_done_contr_taskId_V) | ap_sync_reg_channel_write_contr_taskId_V);

assign ap_sync_channel_write_contr_uniId_V = ((contr_uniId_V_full_n & ap_channel_done_contr_uniId_V) | ap_sync_reg_channel_write_contr_uniId_V);

assign ap_sync_channel_write_n_regions_V_load_loc_channel = ((n_regions_V_load_loc_channel_full_n & ap_channel_done_n_regions_V_load_loc_channel) | ap_sync_reg_channel_write_n_regions_V_load_loc_channel);

assign ap_sync_read_train_U0_ap_ready = (read_train_U0_ap_ready | ap_sync_reg_read_train_U0_ap_ready);

assign ap_sync_ready = (ap_sync_run_test_U0_ap_ready & ap_sync_runTestAfterInit_Block_entry79_proc_U0_ap_ready & ap_sync_read_train_U0_ap_ready);

assign ap_sync_runTestAfterInit_Block_entry79_proc_U0_ap_ready = (runTestAfterInit_Block_entry79_proc_U0_ap_ready | ap_sync_reg_runTestAfterInit_Block_entry79_proc_U0_ap_ready);

assign ap_sync_run_test_U0_ap_ready = (run_test_U0_ap_ready | ap_sync_reg_run_test_U0_ap_ready);

assign errorInTask_address0 = writeOutcome_U0_errorInTask_address0;

assign errorInTask_ce0 = writeOutcome_U0_errorInTask_ce0;

assign errorInTask_d0 = writeOutcome_U0_errorInTask_d0;

assign errorInTask_we0 = writeOutcome_U0_errorInTask_we0;

assign m_axi_gmem_ARADDR = read_train_U0_m_axi_gmem_ARADDR;

assign m_axi_gmem_ARBURST = read_train_U0_m_axi_gmem_ARBURST;

assign m_axi_gmem_ARCACHE = read_train_U0_m_axi_gmem_ARCACHE;

assign m_axi_gmem_ARID = read_train_U0_m_axi_gmem_ARID;

assign m_axi_gmem_ARLEN = read_train_U0_m_axi_gmem_ARLEN;

assign m_axi_gmem_ARLOCK = read_train_U0_m_axi_gmem_ARLOCK;

assign m_axi_gmem_ARPROT = read_train_U0_m_axi_gmem_ARPROT;

assign m_axi_gmem_ARQOS = read_train_U0_m_axi_gmem_ARQOS;

assign m_axi_gmem_ARREGION = read_train_U0_m_axi_gmem_ARREGION;

assign m_axi_gmem_ARSIZE = read_train_U0_m_axi_gmem_ARSIZE;

assign m_axi_gmem_ARUSER = read_train_U0_m_axi_gmem_ARUSER;

assign m_axi_gmem_ARVALID = read_train_U0_m_axi_gmem_ARVALID;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_RREADY = read_train_U0_m_axi_gmem_RREADY;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign n_regions_V_address0 = runTestAfterInit_Block_entry79_proc_U0_n_regions_V_address0;

assign n_regions_V_address1 = 6'd0;

assign n_regions_V_ce0 = runTestAfterInit_Block_entry79_proc_U0_n_regions_V_ce0;

assign n_regions_V_ce1 = 1'b0;

assign n_regions_V_d0 = 8'd0;

assign n_regions_V_d1 = 8'd0;

assign n_regions_V_we0 = 1'b0;

assign n_regions_V_we1 = 1'b0;

assign outcomeInRam_address0 = writeOutcome_U0_outcomeInRam_address0;

assign outcomeInRam_ce0 = writeOutcome_U0_outcomeInRam_ce0;

assign outcomeInRam_d0 = writeOutcome_U0_outcomeInRam_d0;

assign outcomeInRam_we0 = writeOutcome_U0_outcomeInRam_we0;

assign read_train_U0_ap_continue = (ap_sync_channel_write_contr_uniId_V & ap_sync_channel_write_contr_taskId_V & ap_sync_channel_write_contr_checkId_V & ap_sync_channel_write_contr_AOV_c18_channel & ap_sync_channel_write_contr_AOV_7_c25_channel & ap_sync_channel_write_contr_AOV_6_c24_channel & ap_sync_channel_write_contr_AOV_5_c23_channel & ap_sync_channel_write_contr_AOV_4_c22_channel & ap_sync_channel_write_contr_AOV_3_c21_channel & ap_sync_channel_write_contr_AOV_2_c20_channel & ap_sync_channel_write_contr_AOV_1_c19_channel);

assign read_train_U0_ap_start = ((ap_sync_reg_read_train_U0_ap_ready ^ 1'b1) & ap_start);

assign regions_1_address0 = run_test_U0_regions_1_address0;

assign regions_1_address1 = 12'd0;

assign regions_1_ce0 = run_test_U0_regions_1_ce0;

assign regions_1_ce1 = 1'b0;

assign regions_1_d0 = 32'd0;

assign regions_1_d1 = 32'd0;

assign regions_1_we0 = 1'b0;

assign regions_1_we1 = 1'b0;

assign regions_2_address0 = run_test_U0_regions_2_address0;

assign regions_2_address1 = 12'd0;

assign regions_2_ce0 = run_test_U0_regions_2_ce0;

assign regions_2_ce1 = 1'b0;

assign regions_2_d0 = 32'd0;

assign regions_2_d1 = 32'd0;

assign regions_2_we0 = 1'b0;

assign regions_2_we1 = 1'b0;

assign regions_3_address0 = run_test_U0_regions_3_address0;

assign regions_3_address1 = 12'd0;

assign regions_3_ce0 = run_test_U0_regions_3_ce0;

assign regions_3_ce1 = 1'b0;

assign regions_3_d0 = 32'd0;

assign regions_3_d1 = 32'd0;

assign regions_3_we0 = 1'b0;

assign regions_3_we1 = 1'b0;

assign regions_address0 = run_test_U0_regions_address0;

assign regions_address1 = 12'd0;

assign regions_ce0 = run_test_U0_regions_ce0;

assign regions_ce1 = 1'b0;

assign regions_d0 = 32'd0;

assign regions_d1 = 32'd0;

assign regions_we0 = 1'b0;

assign regions_we1 = 1'b0;

assign runTestAfterInit_Block_entry79_proc_U0_ap_continue = (ap_sync_channel_write_n_regions_V_load_loc_channel & ap_sync_channel_write_contr_checkId_V_load_loc_channel & ap_sync_channel_write_contr_checkId_V_load_cast_loc_channel);

assign runTestAfterInit_Block_entry79_proc_U0_ap_start = ((ap_sync_reg_runTestAfterInit_Block_entry79_proc_U0_ap_ready ^ 1'b1) & contr_checkId_V_empty_n & ap_start);

assign run_test_U0_ap_continue = error_full_n;

assign run_test_U0_ap_start = (n_regions_V_load_loc_channel_empty_n & (ap_sync_reg_run_test_U0_ap_ready ^ 1'b1) & contr_checkId_V_load_cast_loc_channel_empty_n & contr_AOV_c18_channel_empty_n & contr_AOV_7_c25_channel_empty_n & contr_AOV_6_c24_channel_empty_n & contr_AOV_5_c23_channel_empty_n & contr_AOV_4_c22_channel_empty_n & contr_AOV_3_c21_channel_empty_n & contr_AOV_2_c20_channel_empty_n & contr_AOV_1_c19_channel_empty_n & ap_start);

assign writeOutcome_U0_ap_continue = ap_continue;

assign writeOutcome_U0_ap_start = (error_empty_n & contr_uniId_V_empty_n & contr_taskId_V_empty_n & contr_checkId_V_load_loc_channel_empty_n);

endmodule //run_runTestAfterInit
