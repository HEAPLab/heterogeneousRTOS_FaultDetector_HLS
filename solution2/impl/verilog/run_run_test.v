// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_run_test (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        regions_address0,
        regions_ce0,
        regions_q0,
        p_read1,
        regions_2_address0,
        regions_2_ce0,
        regions_2_q0,
        regions_3_address0,
        regions_3_ce0,
        regions_3_q0,
        regions_4_address0,
        regions_4_ce0,
        regions_4_q0,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        AOV_c_din,
        AOV_c_num_data_valid,
        AOV_c_fifo_cap,
        AOV_c_full_n,
        AOV_c_write,
        AOV_1_c_din,
        AOV_1_c_num_data_valid,
        AOV_1_c_fifo_cap,
        AOV_1_c_full_n,
        AOV_1_c_write,
        AOV_2_c_din,
        AOV_2_c_num_data_valid,
        AOV_2_c_fifo_cap,
        AOV_2_c_full_n,
        AOV_2_c_write,
        AOV_3_c_din,
        AOV_3_c_num_data_valid,
        AOV_3_c_fifo_cap,
        AOV_3_c_full_n,
        AOV_3_c_write,
        AOV_4_c_din,
        AOV_4_c_num_data_valid,
        AOV_4_c_fifo_cap,
        AOV_4_c_full_n,
        AOV_4_c_write,
        AOV_5_c_din,
        AOV_5_c_num_data_valid,
        AOV_5_c_fifo_cap,
        AOV_5_c_full_n,
        AOV_5_c_write,
        AOV_6_c_din,
        AOV_6_c_num_data_valid,
        AOV_6_c_fifo_cap,
        AOV_6_c_full_n,
        AOV_6_c_write,
        AOV_7_c_din,
        AOV_7_c_num_data_valid,
        AOV_7_c_fifo_cap,
        AOV_7_c_full_n,
        AOV_7_c_write,
        ap_return
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [11:0] regions_address0;
output   regions_ce0;
input  [31:0] regions_q0;
input  [5:0] p_read1;
output  [11:0] regions_2_address0;
output   regions_2_ce0;
input  [31:0] regions_2_q0;
output  [11:0] regions_3_address0;
output   regions_3_ce0;
input  [31:0] regions_3_q0;
output  [11:0] regions_4_address0;
output   regions_4_ce0;
input  [31:0] regions_4_q0;
input  [7:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
output  [31:0] AOV_c_din;
input  [1:0] AOV_c_num_data_valid;
input  [1:0] AOV_c_fifo_cap;
input   AOV_c_full_n;
output   AOV_c_write;
output  [31:0] AOV_1_c_din;
input  [1:0] AOV_1_c_num_data_valid;
input  [1:0] AOV_1_c_fifo_cap;
input   AOV_1_c_full_n;
output   AOV_1_c_write;
output  [31:0] AOV_2_c_din;
input  [1:0] AOV_2_c_num_data_valid;
input  [1:0] AOV_2_c_fifo_cap;
input   AOV_2_c_full_n;
output   AOV_2_c_write;
output  [31:0] AOV_3_c_din;
input  [1:0] AOV_3_c_num_data_valid;
input  [1:0] AOV_3_c_fifo_cap;
input   AOV_3_c_full_n;
output   AOV_3_c_write;
output  [31:0] AOV_4_c_din;
input  [1:0] AOV_4_c_num_data_valid;
input  [1:0] AOV_4_c_fifo_cap;
input   AOV_4_c_full_n;
output   AOV_4_c_write;
output  [31:0] AOV_5_c_din;
input  [1:0] AOV_5_c_num_data_valid;
input  [1:0] AOV_5_c_fifo_cap;
input   AOV_5_c_full_n;
output   AOV_5_c_write;
output  [31:0] AOV_6_c_din;
input  [1:0] AOV_6_c_num_data_valid;
input  [1:0] AOV_6_c_fifo_cap;
input   AOV_6_c_full_n;
output   AOV_6_c_write;
output  [31:0] AOV_7_c_din;
input  [1:0] AOV_7_c_num_data_valid;
input  [1:0] AOV_7_c_fifo_cap;
input   AOV_7_c_full_n;
output   AOV_7_c_write;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg AOV_c_write;
reg AOV_1_c_write;
reg AOV_2_c_write;
reg AOV_3_c_write;
reg AOV_4_c_write;
reg AOV_5_c_write;
reg AOV_6_c_write;
reg AOV_7_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    AOV_c_blk_n;
reg    AOV_1_c_blk_n;
reg    AOV_2_c_blk_n;
reg    AOV_3_c_blk_n;
reg    AOV_4_c_blk_n;
reg    AOV_5_c_blk_n;
reg    AOV_6_c_blk_n;
reg    AOV_7_c_blk_n;
wire    ap_CS_fsm_state2;
wire   [8:0] tmp_3_fu_291_p3;
reg   [8:0] tmp_3_reg_420;
wire   [0:0] grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return;
reg   [0:0] targetBlock_reg_425;
wire   [0:0] icmp_ln1073_fu_299_p2;
reg   [0:0] icmp_ln1073_reg_429;
wire   [0:0] icmp_ln1073_1_fu_313_p2;
reg   [0:0] icmp_ln1073_1_reg_440;
wire    ap_CS_fsm_state3;
wire   [7:0] add_ln49_fu_318_p2;
reg   [7:0] add_ln49_reg_444;
wire   [0:0] trunc_ln1073_fu_324_p1;
reg   [0:0] trunc_ln1073_reg_449;
wire   [11:0] tmp_s_fu_348_p3;
reg   [11:0] tmp_s_reg_454;
wire    grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start;
wire    grp_run_test_Pipeline_is_valid_label2_fu_249_ap_done;
wire    grp_run_test_Pipeline_is_valid_label2_fu_249_ap_idle;
wire    grp_run_test_Pipeline_is_valid_label2_fu_249_ap_ready;
wire   [31:0] grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_din0;
wire   [31:0] grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_din1;
wire   [4:0] grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_opcode;
wire    grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_ce;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_done;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_idle;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_ready;
wire   [11:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_address0;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_ce0;
wire   [11:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_2_address0;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_2_ce0;
wire   [11:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_3_address0;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_3_ce0;
wire   [11:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_4_address0;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_4_ce0;
wire   [1:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_return;
wire   [31:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_din0;
wire   [31:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_din1;
wire   [4:0] grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_opcode;
wire    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_ce;
reg   [0:0] ap_phi_mux_phi_ln451_phi_fu_238_p6;
reg   [0:0] phi_ln451_reg_234;
wire    ap_CS_fsm_state4;
reg    ap_predicate_op54_call_state4;
reg    ap_block_state4_on_subcall_done;
wire   [0:0] cond_fu_357_p2;
reg    grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start_reg;
reg    ap_block_state1_ignore_call27;
reg    grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start_reg;
reg   [7:0] i_1_fu_106;
reg    ap_block_state1;
wire   [6:0] tmp_8_fu_329_p4;
wire   [8:0] zext_ln59_fu_339_p1;
wire   [8:0] add_ln59_fu_343_p2;
wire   [0:0] grp_fu_462_p2;
reg   [31:0] grp_fu_462_p0;
reg   [31:0] grp_fu_462_p1;
reg    grp_fu_462_ce;
reg   [4:0] grp_fu_462_opcode;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start_reg = 1'b0;
#0 grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start_reg = 1'b0;
end

run_run_test_Pipeline_is_valid_label2 grp_run_test_Pipeline_is_valid_label2_fu_249(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start),
    .ap_done(grp_run_test_Pipeline_is_valid_label2_fu_249_ap_done),
    .ap_idle(grp_run_test_Pipeline_is_valid_label2_fu_249_ap_idle),
    .ap_ready(grp_run_test_Pipeline_is_valid_label2_fu_249_ap_ready),
    .p_read3(p_read3),
    .p_read4(p_read4),
    .p_read5(p_read5),
    .p_read6(p_read6),
    .p_read7(p_read7),
    .p_read8(p_read8),
    .p_read9(p_read9),
    .p_read10(p_read10),
    .ap_return(grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return),
    .grp_fu_462_p_din0(grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_din0),
    .grp_fu_462_p_din1(grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_din1),
    .grp_fu_462_p_opcode(grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_opcode),
    .grp_fu_462_p_dout0(grp_fu_462_p2),
    .grp_fu_462_p_ce(grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_ce)
);

run_run_test_Pipeline_VITIS_LOOP_55_2 grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start),
    .ap_done(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_done),
    .ap_idle(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_idle),
    .ap_ready(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_ready),
    .tmp_11(tmp_s_reg_454),
    .regions_address0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_address0),
    .regions_ce0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_ce0),
    .regions_q0(regions_q0),
    .regions_2_address0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_2_address0),
    .regions_2_ce0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_2_ce0),
    .regions_2_q0(regions_2_q0),
    .regions_3_address0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_3_address0),
    .regions_3_ce0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_3_ce0),
    .regions_3_q0(regions_3_q0),
    .regions_4_address0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_4_address0),
    .regions_4_ce0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_4_ce0),
    .regions_4_q0(regions_4_q0),
    .trunc_ln1(trunc_ln1073_reg_449),
    .p_read3(p_read3),
    .p_read4(p_read4),
    .p_read5(p_read5),
    .p_read6(p_read6),
    .p_read7(p_read7),
    .p_read8(p_read8),
    .p_read9(p_read9),
    .p_read10(p_read10),
    .ap_return(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_return),
    .grp_fu_462_p_din0(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_din0),
    .grp_fu_462_p_din1(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_din1),
    .grp_fu_462_p_opcode(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_opcode),
    .grp_fu_462_p_dout0(grp_fu_462_p2),
    .grp_fu_462_p_ce(grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_ce)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U863(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_462_p0),
    .din1(grp_fu_462_p1),
    .ce(grp_fu_462_ce),
    .opcode(grp_fu_462_opcode),
    .dout(grp_fu_462_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4) & ((targetBlock_reg_425 == 1'd0) | ((icmp_ln1073_reg_429 == 1'd1) | ((cond_fu_357_p2 == 1'd1) | (icmp_ln1073_1_reg_440 == 1'd0)))))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1073_1_fu_313_p2 == 1'd1) & (icmp_ln1073_reg_429 == 1'd0))) begin
            grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start_reg <= 1'b1;
        end else if ((grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_ready == 1'b1)) begin
            grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start_reg <= 1'b1;
        end else if ((grp_run_test_Pipeline_is_valid_label2_fu_249_ap_ready == 1'b1)) begin
            grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_done == 1'b1) & (icmp_ln1073_fu_299_p2 == 1'd0) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return == 1'd1))) begin
        i_1_fu_106 <= 8'd0;
    end else if (((cond_fu_357_p2 == 1'd0) & (1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln1073_1_reg_440 == 1'd1) & (icmp_ln1073_reg_429 == 1'd0) & (targetBlock_reg_425 == 1'd1))) begin
        i_1_fu_106 <= add_ln49_reg_444;
    end
end

always @ (posedge ap_clk) begin
    if (((cond_fu_357_p2 == 1'd1) & (1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln1073_1_reg_440 == 1'd1) & (icmp_ln1073_reg_429 == 1'd0) & (targetBlock_reg_425 == 1'd1))) begin
        phi_ln451_reg_234 <= 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_state3) & ((icmp_ln1073_1_fu_313_p2 == 1'd0) | (icmp_ln1073_reg_429 == 1'd1))) | ((1'b1 == ap_CS_fsm_state2) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_done == 1'b1) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return == 1'd0)))) begin
        phi_ln451_reg_234 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1073_reg_429 == 1'd0))) begin
        add_ln49_reg_444 <= add_ln49_fu_318_p2;
        icmp_ln1073_1_reg_440 <= icmp_ln1073_1_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return == 1'd1))) begin
        icmp_ln1073_reg_429 <= icmp_ln1073_fu_299_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        targetBlock_reg_425 <= grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return;
        tmp_3_reg_420[8 : 3] <= tmp_3_fu_291_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1073_1_fu_313_p2 == 1'd1) & (icmp_ln1073_reg_429 == 1'd0))) begin
        tmp_s_reg_454[11 : 3] <= tmp_s_fu_348_p3[11 : 3];
        trunc_ln1073_reg_449 <= trunc_ln1073_fu_324_p1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_1_c_blk_n = AOV_1_c_full_n;
    end else begin
        AOV_1_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_1_c_write = 1'b1;
    end else begin
        AOV_1_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_2_c_blk_n = AOV_2_c_full_n;
    end else begin
        AOV_2_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_2_c_write = 1'b1;
    end else begin
        AOV_2_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_3_c_blk_n = AOV_3_c_full_n;
    end else begin
        AOV_3_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_3_c_write = 1'b1;
    end else begin
        AOV_3_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_4_c_blk_n = AOV_4_c_full_n;
    end else begin
        AOV_4_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_4_c_write = 1'b1;
    end else begin
        AOV_4_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_5_c_blk_n = AOV_5_c_full_n;
    end else begin
        AOV_5_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_5_c_write = 1'b1;
    end else begin
        AOV_5_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_6_c_blk_n = AOV_6_c_full_n;
    end else begin
        AOV_6_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_6_c_write = 1'b1;
    end else begin
        AOV_6_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_7_c_blk_n = AOV_7_c_full_n;
    end else begin
        AOV_7_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_7_c_write = 1'b1;
    end else begin
        AOV_7_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_c_blk_n = AOV_c_full_n;
    end else begin
        AOV_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        AOV_c_write = 1'b1;
    end else begin
        AOV_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_run_test_Pipeline_is_valid_label2_fu_249_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4) & ((targetBlock_reg_425 == 1'd0) | ((icmp_ln1073_reg_429 == 1'd1) | ((cond_fu_357_p2 == 1'd1) | (icmp_ln1073_1_reg_440 == 1'd0)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((cond_fu_357_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln1073_1_reg_440 == 1'd1) & (icmp_ln1073_reg_429 == 1'd0) & (targetBlock_reg_425 == 1'd1))) begin
        ap_phi_mux_phi_ln451_phi_fu_238_p6 = 1'd0;
    end else begin
        ap_phi_mux_phi_ln451_phi_fu_238_p6 = phi_ln451_reg_234;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4) & ((targetBlock_reg_425 == 1'd0) | ((icmp_ln1073_reg_429 == 1'd1) | ((cond_fu_357_p2 == 1'd1) | (icmp_ln1073_1_reg_440 == 1'd0)))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_462_ce = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_462_ce = grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_ce;
    end else begin
        grp_fu_462_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_462_opcode = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_462_opcode = grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_opcode;
    end else begin
        grp_fu_462_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_462_p0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_462_p0 = grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_din0;
    end else begin
        grp_fu_462_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_462_p1 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_grp_fu_462_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_462_p1 = grp_run_test_Pipeline_is_valid_label2_fu_249_grp_fu_462_p_din1;
    end else begin
        grp_fu_462_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_done == 1'b1) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state2) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_done == 1'b1) & (grp_run_test_Pipeline_is_valid_label2_fu_249_ap_return == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4) & ((targetBlock_reg_425 == 1'd0) | ((icmp_ln1073_reg_429 == 1'd1) | ((cond_fu_357_p2 == 1'd1) | (icmp_ln1073_1_reg_440 == 1'd0)))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((cond_fu_357_p2 == 1'd0) & (1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln1073_1_reg_440 == 1'd1) & (icmp_ln1073_reg_429 == 1'd0) & (targetBlock_reg_425 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AOV_1_c_din = p_read4;

assign AOV_2_c_din = p_read5;

assign AOV_3_c_din = p_read6;

assign AOV_4_c_din = p_read7;

assign AOV_5_c_din = p_read8;

assign AOV_6_c_din = p_read9;

assign AOV_7_c_din = p_read10;

assign AOV_c_din = p_read3;

assign add_ln49_fu_318_p2 = (i_1_fu_106 + 8'd1);

assign add_ln59_fu_343_p2 = (tmp_3_reg_420 + zext_ln59_fu_339_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call27 = ((ap_start == 1'b0) | (1'b0 == AOV_5_c_full_n) | (1'b0 == AOV_4_c_full_n) | (1'b0 == AOV_3_c_full_n) | (1'b0 == AOV_2_c_full_n) | (1'b0 == AOV_1_c_full_n) | (1'b0 == AOV_c_full_n) | (1'b0 == AOV_7_c_full_n) | (1'b0 == AOV_6_c_full_n) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((ap_predicate_op54_call_state4 == 1'b1) & (grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op54_call_state4 = ((icmp_ln1073_1_reg_440 == 1'd1) & (icmp_ln1073_reg_429 == 1'd0) & (targetBlock_reg_425 == 1'd1));
end

assign ap_return = ap_phi_mux_phi_ln451_phi_fu_238_p6;

assign cond_fu_357_p2 = ((grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_return == 2'd1) ? 1'b1 : 1'b0);

assign grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_ap_start_reg;

assign grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start = grp_run_test_Pipeline_is_valid_label2_fu_249_ap_start_reg;

assign icmp_ln1073_1_fu_313_p2 = ((i_1_fu_106 < p_read2) ? 1'b1 : 1'b0);

assign icmp_ln1073_fu_299_p2 = ((p_read2 == 8'd0) ? 1'b1 : 1'b0);

assign regions_2_address0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_2_address0;

assign regions_2_ce0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_2_ce0;

assign regions_3_address0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_3_address0;

assign regions_3_ce0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_3_ce0;

assign regions_4_address0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_4_address0;

assign regions_4_ce0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_4_ce0;

assign regions_address0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_address0;

assign regions_ce0 = grp_run_test_Pipeline_VITIS_LOOP_55_2_fu_269_regions_ce0;

assign tmp_3_fu_291_p3 = {{p_read1}, {3'd0}};

assign tmp_8_fu_329_p4 = {{i_1_fu_106[7:1]}};

assign tmp_s_fu_348_p3 = {{add_ln59_fu_343_p2}, {3'd0}};

assign trunc_ln1073_fu_324_p1 = i_1_fu_106[0:0];

assign zext_ln59_fu_339_p1 = tmp_8_fu_329_p4;

always @ (posedge ap_clk) begin
    tmp_3_reg_420[2:0] <= 3'b000;
    tmp_s_reg_454[2:0] <= 3'b000;
end

endmodule //run_run_test
