-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity run_runTest_Block_entry6990_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (3 downto 0);
    errorInTask_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    errorInTask_ce0 : OUT STD_LOGIC;
    errorInTask_we0 : OUT STD_LOGIC;
    errorInTask_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    errorInTask_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    outcomeInRam_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outcomeInRam_ce0 : OUT STD_LOGIC;
    outcomeInRam_we0 : OUT STD_LOGIC_VECTOR (35 downto 0);
    outcomeInRam_d0 : OUT STD_LOGIC_VECTOR (287 downto 0);
    AOV_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_empty_n : IN STD_LOGIC;
    AOV_read : OUT STD_LOGIC;
    AOV_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_1_empty_n : IN STD_LOGIC;
    AOV_1_read : OUT STD_LOGIC;
    AOV_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_2_empty_n : IN STD_LOGIC;
    AOV_2_read : OUT STD_LOGIC;
    AOV_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_3_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_3_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_3_empty_n : IN STD_LOGIC;
    AOV_3_read : OUT STD_LOGIC;
    AOV_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_4_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_4_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_4_empty_n : IN STD_LOGIC;
    AOV_4_read : OUT STD_LOGIC;
    AOV_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_5_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_5_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_5_empty_n : IN STD_LOGIC;
    AOV_5_read : OUT STD_LOGIC;
    AOV_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_6_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_6_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_6_empty_n : IN STD_LOGIC;
    AOV_6_read : OUT STD_LOGIC;
    AOV_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AOV_7_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_7_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    AOV_7_empty_n : IN STD_LOGIC;
    AOV_7_read : OUT STD_LOGIC;
    failedTask : OUT STD_LOGIC_VECTOR (15 downto 0);
    failedTask_ap_vld : OUT STD_LOGIC;
    failedTask_ap_ack : IN STD_LOGIC );
end;


architecture behav of run_runTest_Block_entry6990_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_ZL22failedTaskExecutionIds_15 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_9 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_10 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_11 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_12 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_13 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_ZL22failedTaskExecutionIds_14 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal AOV_blk_n : STD_LOGIC;
    signal AOV_1_blk_n : STD_LOGIC;
    signal AOV_2_blk_n : STD_LOGIC;
    signal AOV_3_blk_n : STD_LOGIC;
    signal AOV_4_blk_n : STD_LOGIC;
    signal AOV_5_blk_n : STD_LOGIC;
    signal AOV_6_blk_n : STD_LOGIC;
    signal AOV_7_blk_n : STD_LOGIC;
    signal AOV_7_read_reg_503 : STD_LOGIC_VECTOR (31 downto 0);
    signal AOV_6_read_reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal AOV_5_read_reg_513 : STD_LOGIC_VECTOR (31 downto 0);
    signal AOV_4_read_reg_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal AOV_3_read_reg_523 : STD_LOGIC_VECTOR (31 downto 0);
    signal AOV_2_read_reg_528 : STD_LOGIC_VECTOR (31 downto 0);
    signal AOV_1_read_reg_533 : STD_LOGIC_VECTOR (31 downto 0);
    signal AOV_read_reg_538 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_writeOutcome_fu_226_ap_start : STD_LOGIC;
    signal grp_writeOutcome_fu_226_ap_done : STD_LOGIC;
    signal grp_writeOutcome_fu_226_ap_idle : STD_LOGIC;
    signal grp_writeOutcome_fu_226_ap_ready : STD_LOGIC;
    signal grp_writeOutcome_fu_226_errorInTask_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_writeOutcome_fu_226_errorInTask_ce0 : STD_LOGIC;
    signal grp_writeOutcome_fu_226_errorInTask_we0 : STD_LOGIC;
    signal grp_writeOutcome_fu_226_errorInTask_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_writeOutcome_fu_226_errorInTask1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_writeOutcome_fu_226_p_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_writeOutcome_fu_226_failedTaskExecutionId_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_writeOutcome_fu_226_outcomeInRam_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_writeOutcome_fu_226_outcomeInRam_ce0 : STD_LOGIC;
    signal grp_writeOutcome_fu_226_outcomeInRam_we0 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_writeOutcome_fu_226_outcomeInRam_d0 : STD_LOGIC_VECTOR (287 downto 0);
    signal grp_writeOutcome_fu_226_failedTask : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_writeOutcome_fu_226_failedTask_ap_vld : STD_LOGIC;
    signal grp_writeOutcome_fu_226_failedTask_ap_ack : STD_LOGIC;
    signal grp_writeOutcome_fu_226_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_writeOutcome_fu_226_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call1 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal regslice_forward_failedTask_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal failedTask_ap_vld_int_regslice : STD_LOGIC;
    signal failedTask_ap_ack_int_regslice : STD_LOGIC;
    signal regslice_forward_failedTask_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component run_writeOutcome IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        errorInTask_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        errorInTask_ce0 : OUT STD_LOGIC;
        errorInTask_we0 : OUT STD_LOGIC;
        errorInTask_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        errorInTask_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        errorInTask1 : IN STD_LOGIC_VECTOR (3 downto 0);
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        failedTaskExecutionId_read : IN STD_LOGIC_VECTOR (7 downto 0);
        checkId : IN STD_LOGIC_VECTOR (7 downto 0);
        taskId : IN STD_LOGIC_VECTOR (7 downto 0);
        executionId : IN STD_LOGIC_VECTOR (7 downto 0);
        uniId : IN STD_LOGIC_VECTOR (15 downto 0);
        error : IN STD_LOGIC_VECTOR (0 downto 0);
        outcomeInRam_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outcomeInRam_ce0 : OUT STD_LOGIC;
        outcomeInRam_we0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        outcomeInRam_d0 : OUT STD_LOGIC_VECTOR (287 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
        failedTask : OUT STD_LOGIC_VECTOR (15 downto 0);
        failedTask_ap_vld : OUT STD_LOGIC;
        failedTask_ap_ack : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component run_regslice_forward IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_writeOutcome_fu_226 : component run_writeOutcome
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_writeOutcome_fu_226_ap_start,
        ap_done => grp_writeOutcome_fu_226_ap_done,
        ap_idle => grp_writeOutcome_fu_226_ap_idle,
        ap_ready => grp_writeOutcome_fu_226_ap_ready,
        errorInTask_address0 => grp_writeOutcome_fu_226_errorInTask_address0,
        errorInTask_ce0 => grp_writeOutcome_fu_226_errorInTask_ce0,
        errorInTask_we0 => grp_writeOutcome_fu_226_errorInTask_we0,
        errorInTask_d0 => grp_writeOutcome_fu_226_errorInTask_d0,
        errorInTask_q0 => errorInTask_q0,
        errorInTask1 => grp_writeOutcome_fu_226_errorInTask1,
        p_read => grp_writeOutcome_fu_226_p_read,
        failedTaskExecutionId_read => grp_writeOutcome_fu_226_failedTaskExecutionId_read,
        checkId => p_read2,
        taskId => p_read3,
        executionId => p_read4,
        uniId => p_read5,
        error => p_read,
        outcomeInRam_address0 => grp_writeOutcome_fu_226_outcomeInRam_address0,
        outcomeInRam_ce0 => grp_writeOutcome_fu_226_outcomeInRam_ce0,
        outcomeInRam_we0 => grp_writeOutcome_fu_226_outcomeInRam_we0,
        outcomeInRam_d0 => grp_writeOutcome_fu_226_outcomeInRam_d0,
        p_read1 => AOV_read_reg_538,
        p_read2 => AOV_1_read_reg_533,
        p_read3 => AOV_2_read_reg_528,
        p_read4 => AOV_3_read_reg_523,
        p_read5 => AOV_4_read_reg_518,
        p_read6 => AOV_5_read_reg_513,
        p_read7 => AOV_6_read_reg_508,
        p_read8 => AOV_7_read_reg_503,
        failedTask => grp_writeOutcome_fu_226_failedTask,
        failedTask_ap_vld => grp_writeOutcome_fu_226_failedTask_ap_vld,
        failedTask_ap_ack => grp_writeOutcome_fu_226_failedTask_ap_ack,
        ap_return => grp_writeOutcome_fu_226_ap_return);

    regslice_forward_failedTask_U : component run_regslice_forward
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_writeOutcome_fu_226_failedTask,
        vld_in => failedTask_ap_vld_int_regslice,
        ack_in => failedTask_ap_ack_int_regslice,
        data_out => failedTask,
        vld_out => regslice_forward_failedTask_U_vld_out,
        ack_out => failedTask_ap_ack,
        apdone_blk => regslice_forward_failedTask_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((regslice_forward_failedTask_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_writeOutcome_fu_226_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_writeOutcome_fu_226_ap_start_reg <= ap_const_logic_0;
            else
                if (((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_F)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_0)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_1)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_2)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_3)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_4)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_5)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_6)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_7)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_8)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_9)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_A)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_B)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_C)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_D)) or (not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (p_read1 = ap_const_lv4_E)))) then 
                    grp_writeOutcome_fu_226_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_writeOutcome_fu_226_ap_ready = ap_const_logic_1)) then 
                    grp_writeOutcome_fu_226_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_0 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_0))) then 
                    p_ZL22failedTaskExecutionIds_0 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_1 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_1))) then 
                    p_ZL22failedTaskExecutionIds_1 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_10 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_A))) then 
                    p_ZL22failedTaskExecutionIds_10 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_11 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_B))) then 
                    p_ZL22failedTaskExecutionIds_11 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_12 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_C))) then 
                    p_ZL22failedTaskExecutionIds_12 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_13 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_D))) then 
                    p_ZL22failedTaskExecutionIds_13 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_14 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_E))) then 
                    p_ZL22failedTaskExecutionIds_14 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_15 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_F))) then 
                    p_ZL22failedTaskExecutionIds_15 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_2 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_2))) then 
                    p_ZL22failedTaskExecutionIds_2 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_3 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_3))) then 
                    p_ZL22failedTaskExecutionIds_3 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_4 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_4))) then 
                    p_ZL22failedTaskExecutionIds_4 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_5 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_5))) then 
                    p_ZL22failedTaskExecutionIds_5 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_6 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_6))) then 
                    p_ZL22failedTaskExecutionIds_6 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_7 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_7))) then 
                    p_ZL22failedTaskExecutionIds_7 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_8 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_8))) then 
                    p_ZL22failedTaskExecutionIds_8 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_ZL22failedTaskExecutionIds_9 <= ap_const_lv8_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_9))) then 
                    p_ZL22failedTaskExecutionIds_9 <= grp_writeOutcome_fu_226_ap_return;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                AOV_1_read_reg_533 <= AOV_1_dout;
                AOV_2_read_reg_528 <= AOV_2_dout;
                AOV_3_read_reg_523 <= AOV_3_dout;
                AOV_4_read_reg_518 <= AOV_4_dout;
                AOV_5_read_reg_513 <= AOV_5_dout;
                AOV_6_read_reg_508 <= AOV_6_dout;
                AOV_7_read_reg_503 <= AOV_7_dout;
                AOV_read_reg_538 <= AOV_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_CS_fsm_state3, regslice_forward_failedTask_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((regslice_forward_failedTask_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    AOV_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_1_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_1_blk_n <= AOV_1_empty_n;
        else 
            AOV_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_1_read <= ap_const_logic_1;
        else 
            AOV_1_read <= ap_const_logic_0;
        end if; 
    end process;


    AOV_2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_2_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_2_blk_n <= AOV_2_empty_n;
        else 
            AOV_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_2_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_2_read <= ap_const_logic_1;
        else 
            AOV_2_read <= ap_const_logic_0;
        end if; 
    end process;


    AOV_3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_3_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_3_blk_n <= AOV_3_empty_n;
        else 
            AOV_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_3_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_3_read <= ap_const_logic_1;
        else 
            AOV_3_read <= ap_const_logic_0;
        end if; 
    end process;


    AOV_4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_4_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_4_blk_n <= AOV_4_empty_n;
        else 
            AOV_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_4_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_4_read <= ap_const_logic_1;
        else 
            AOV_4_read <= ap_const_logic_0;
        end if; 
    end process;


    AOV_5_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_5_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_5_blk_n <= AOV_5_empty_n;
        else 
            AOV_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_5_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_5_read <= ap_const_logic_1;
        else 
            AOV_5_read <= ap_const_logic_0;
        end if; 
    end process;


    AOV_6_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_6_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_6_blk_n <= AOV_6_empty_n;
        else 
            AOV_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_6_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_6_read <= ap_const_logic_1;
        else 
            AOV_6_read <= ap_const_logic_0;
        end if; 
    end process;


    AOV_7_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_7_blk_n <= AOV_7_empty_n;
        else 
            AOV_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_7_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_7_read <= ap_const_logic_1;
        else 
            AOV_7_read <= ap_const_logic_0;
        end if; 
    end process;


    AOV_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_blk_n <= AOV_empty_n;
        else 
            AOV_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    AOV_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            AOV_read <= ap_const_logic_1;
        else 
            AOV_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(regslice_forward_failedTask_U_apdone_blk)
    begin
        if ((regslice_forward_failedTask_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call1_assign_proc : process(ap_start, ap_done_reg, AOV_empty_n, AOV_1_empty_n, AOV_2_empty_n, AOV_3_empty_n, AOV_4_empty_n, AOV_5_empty_n, AOV_6_empty_n, AOV_7_empty_n)
    begin
                ap_block_state1_ignore_call1 <= ((ap_start = ap_const_logic_0) or (ap_const_logic_0 = AOV_7_empty_n) or (ap_const_logic_0 = AOV_6_empty_n) or (ap_const_logic_0 = AOV_5_empty_n) or (ap_const_logic_0 = AOV_4_empty_n) or (ap_const_logic_0 = AOV_3_empty_n) or (ap_const_logic_0 = AOV_2_empty_n) or (ap_const_logic_0 = AOV_1_empty_n) or (ap_const_logic_0 = AOV_empty_n) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(p_read1, grp_writeOutcome_fu_226_ap_done)
    begin
                ap_block_state2_on_subcall_done <= (((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_F)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_0)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_1)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_2)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_3)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_4)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_5)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_6)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_7)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_8)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_9)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_A)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_B)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_C)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_D)) or ((grp_writeOutcome_fu_226_ap_done = ap_const_logic_0) and (p_read1 = ap_const_lv4_E)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, regslice_forward_failedTask_U_apdone_blk)
    begin
        if (((regslice_forward_failedTask_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, regslice_forward_failedTask_U_apdone_blk)
    begin
        if (((regslice_forward_failedTask_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    errorInTask_address0 <= grp_writeOutcome_fu_226_errorInTask_address0;

    errorInTask_ce0_assign_proc : process(p_read1, grp_writeOutcome_fu_226_errorInTask_ce0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_F)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_5)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_6)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_7)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_8)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_9)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_A)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_B)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_C)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_D)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_E)))) then 
            errorInTask_ce0 <= grp_writeOutcome_fu_226_errorInTask_ce0;
        else 
            errorInTask_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    errorInTask_d0 <= grp_writeOutcome_fu_226_errorInTask_d0;

    errorInTask_we0_assign_proc : process(p_read1, grp_writeOutcome_fu_226_errorInTask_we0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_F)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_5)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_6)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_7)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_8)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_9)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_A)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_B)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_C)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_D)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_E)))) then 
            errorInTask_we0 <= grp_writeOutcome_fu_226_errorInTask_we0;
        else 
            errorInTask_we0 <= ap_const_logic_0;
        end if; 
    end process;

    failedTask_ap_vld <= regslice_forward_failedTask_U_vld_out;

    failedTask_ap_vld_int_regslice_assign_proc : process(p_read1, grp_writeOutcome_fu_226_failedTask_ap_vld, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_F)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_5)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_6)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_7)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_8)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_9)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_A)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_B)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_C)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_D)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_E)))) then 
            failedTask_ap_vld_int_regslice <= grp_writeOutcome_fu_226_failedTask_ap_vld;
        else 
            failedTask_ap_vld_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    grp_writeOutcome_fu_226_ap_start <= grp_writeOutcome_fu_226_ap_start_reg;

    grp_writeOutcome_fu_226_errorInTask1_assign_proc : process(p_read1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((p_read1 = ap_const_lv4_F)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= p_read1;
            elsif ((p_read1 = ap_const_lv4_0)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_0;
            elsif ((p_read1 = ap_const_lv4_1)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_1;
            elsif ((p_read1 = ap_const_lv4_2)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_2;
            elsif ((p_read1 = ap_const_lv4_3)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_3;
            elsif ((p_read1 = ap_const_lv4_4)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_4;
            elsif ((p_read1 = ap_const_lv4_5)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_5;
            elsif ((p_read1 = ap_const_lv4_6)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_6;
            elsif ((p_read1 = ap_const_lv4_7)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_7;
            elsif ((p_read1 = ap_const_lv4_8)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_8;
            elsif ((p_read1 = ap_const_lv4_9)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_9;
            elsif ((p_read1 = ap_const_lv4_A)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_A;
            elsif ((p_read1 = ap_const_lv4_B)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_B;
            elsif ((p_read1 = ap_const_lv4_C)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_C;
            elsif ((p_read1 = ap_const_lv4_D)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_D;
            elsif ((p_read1 = ap_const_lv4_E)) then 
                grp_writeOutcome_fu_226_errorInTask1 <= ap_const_lv4_E;
            else 
                grp_writeOutcome_fu_226_errorInTask1 <= "XXXX";
            end if;
        else 
            grp_writeOutcome_fu_226_errorInTask1 <= "XXXX";
        end if; 
    end process;


    grp_writeOutcome_fu_226_failedTaskExecutionId_read_assign_proc : process(p_read1, p_ZL22failedTaskExecutionIds_15, p_ZL22failedTaskExecutionIds_0, p_ZL22failedTaskExecutionIds_1, p_ZL22failedTaskExecutionIds_2, p_ZL22failedTaskExecutionIds_3, p_ZL22failedTaskExecutionIds_4, p_ZL22failedTaskExecutionIds_5, p_ZL22failedTaskExecutionIds_6, p_ZL22failedTaskExecutionIds_7, p_ZL22failedTaskExecutionIds_8, p_ZL22failedTaskExecutionIds_9, p_ZL22failedTaskExecutionIds_10, p_ZL22failedTaskExecutionIds_11, p_ZL22failedTaskExecutionIds_12, p_ZL22failedTaskExecutionIds_13, p_ZL22failedTaskExecutionIds_14, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((p_read1 = ap_const_lv4_F)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_15;
            elsif ((p_read1 = ap_const_lv4_0)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_0;
            elsif ((p_read1 = ap_const_lv4_1)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_1;
            elsif ((p_read1 = ap_const_lv4_2)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_2;
            elsif ((p_read1 = ap_const_lv4_3)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_3;
            elsif ((p_read1 = ap_const_lv4_4)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_4;
            elsif ((p_read1 = ap_const_lv4_5)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_5;
            elsif ((p_read1 = ap_const_lv4_6)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_6;
            elsif ((p_read1 = ap_const_lv4_7)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_7;
            elsif ((p_read1 = ap_const_lv4_8)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_8;
            elsif ((p_read1 = ap_const_lv4_9)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_9;
            elsif ((p_read1 = ap_const_lv4_A)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_10;
            elsif ((p_read1 = ap_const_lv4_B)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_11;
            elsif ((p_read1 = ap_const_lv4_C)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_12;
            elsif ((p_read1 = ap_const_lv4_D)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_13;
            elsif ((p_read1 = ap_const_lv4_E)) then 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= p_ZL22failedTaskExecutionIds_14;
            else 
                grp_writeOutcome_fu_226_failedTaskExecutionId_read <= "XXXXXXXX";
            end if;
        else 
            grp_writeOutcome_fu_226_failedTaskExecutionId_read <= "XXXXXXXX";
        end if; 
    end process;

    grp_writeOutcome_fu_226_failedTask_ap_ack <= (failedTask_ap_ack_int_regslice and ap_CS_fsm_state2);

    grp_writeOutcome_fu_226_p_read_assign_proc : process(p_read1, p_ZL22failedTaskExecutionIds_15, p_ZL22failedTaskExecutionIds_0, p_ZL22failedTaskExecutionIds_1, p_ZL22failedTaskExecutionIds_2, p_ZL22failedTaskExecutionIds_3, p_ZL22failedTaskExecutionIds_4, p_ZL22failedTaskExecutionIds_5, p_ZL22failedTaskExecutionIds_6, p_ZL22failedTaskExecutionIds_7, p_ZL22failedTaskExecutionIds_8, p_ZL22failedTaskExecutionIds_9, p_ZL22failedTaskExecutionIds_10, p_ZL22failedTaskExecutionIds_11, p_ZL22failedTaskExecutionIds_12, p_ZL22failedTaskExecutionIds_13, p_ZL22failedTaskExecutionIds_14, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((p_read1 = ap_const_lv4_F)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_15;
            elsif ((p_read1 = ap_const_lv4_0)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_0;
            elsif ((p_read1 = ap_const_lv4_1)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_1;
            elsif ((p_read1 = ap_const_lv4_2)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_2;
            elsif ((p_read1 = ap_const_lv4_3)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_3;
            elsif ((p_read1 = ap_const_lv4_4)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_4;
            elsif ((p_read1 = ap_const_lv4_5)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_5;
            elsif ((p_read1 = ap_const_lv4_6)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_6;
            elsif ((p_read1 = ap_const_lv4_7)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_7;
            elsif ((p_read1 = ap_const_lv4_8)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_8;
            elsif ((p_read1 = ap_const_lv4_9)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_9;
            elsif ((p_read1 = ap_const_lv4_A)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_10;
            elsif ((p_read1 = ap_const_lv4_B)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_11;
            elsif ((p_read1 = ap_const_lv4_C)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_12;
            elsif ((p_read1 = ap_const_lv4_D)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_13;
            elsif ((p_read1 = ap_const_lv4_E)) then 
                grp_writeOutcome_fu_226_p_read <= p_ZL22failedTaskExecutionIds_14;
            else 
                grp_writeOutcome_fu_226_p_read <= "XXXXXXXX";
            end if;
        else 
            grp_writeOutcome_fu_226_p_read <= "XXXXXXXX";
        end if; 
    end process;

    outcomeInRam_address0 <= grp_writeOutcome_fu_226_outcomeInRam_address0;

    outcomeInRam_ce0_assign_proc : process(p_read1, grp_writeOutcome_fu_226_outcomeInRam_ce0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_F)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_5)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_6)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_7)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_8)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_9)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_A)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_B)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_C)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_D)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_E)))) then 
            outcomeInRam_ce0 <= grp_writeOutcome_fu_226_outcomeInRam_ce0;
        else 
            outcomeInRam_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outcomeInRam_d0 <= grp_writeOutcome_fu_226_outcomeInRam_d0;

    outcomeInRam_we0_assign_proc : process(p_read1, grp_writeOutcome_fu_226_outcomeInRam_we0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_F)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_5)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_6)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_7)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_8)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_9)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_A)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_B)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_C)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_D)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (p_read1 = ap_const_lv4_E)))) then 
            outcomeInRam_we0 <= grp_writeOutcome_fu_226_outcomeInRam_we0;
        else 
            outcomeInRam_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

end behav;
