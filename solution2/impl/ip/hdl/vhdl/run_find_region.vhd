-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity run_find_region is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    regions_min_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_min_0_ce0 : OUT STD_LOGIC;
    regions_min_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_min_0_ce1 : OUT STD_LOGIC;
    regions_min_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_offset : IN STD_LOGIC_VECTOR (5 downto 0);
    regions_min_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_min_1_ce0 : OUT STD_LOGIC;
    regions_min_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_min_1_ce1 : OUT STD_LOGIC;
    regions_min_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_max_0_ce0 : OUT STD_LOGIC;
    regions_max_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_max_0_ce1 : OUT STD_LOGIC;
    regions_max_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_max_1_ce0 : OUT STD_LOGIC;
    regions_max_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_max_1_ce1 : OUT STD_LOGIC;
    regions_max_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_center_0_ce0 : OUT STD_LOGIC;
    regions_center_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_center_0_ce1 : OUT STD_LOGIC;
    regions_center_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_center_1_ce0 : OUT STD_LOGIC;
    regions_center_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_center_1_ce1 : OUT STD_LOGIC;
    regions_center_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    n_regions : IN STD_LOGIC_VECTOR (7 downto 0);
    d_read : IN STD_LOGIC_VECTOR (31 downto 0);
    d_read_60 : IN STD_LOGIC_VECTOR (31 downto 0);
    d_read_61 : IN STD_LOGIC_VECTOR (31 downto 0);
    d_read_62 : IN STD_LOGIC_VECTOR (31 downto 0);
    d_read_63 : IN STD_LOGIC_VECTOR (31 downto 0);
    d_read_64 : IN STD_LOGIC_VECTOR (31 downto 0);
    d_read_65 : IN STD_LOGIC_VECTOR (31 downto 0);
    d_read_66 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_685_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_685_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_685_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_685_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_685_p_ce : OUT STD_LOGIC;
    grp_fu_689_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_689_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_689_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_689_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_689_p_ce : OUT STD_LOGIC;
    grp_fu_693_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_693_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_693_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_693_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_693_p_ce : OUT STD_LOGIC;
    grp_fu_697_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_697_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_697_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_697_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_697_p_ce : OUT STD_LOGIC;
    grp_fu_701_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_701_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_701_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_701_p_ce : OUT STD_LOGIC;
    grp_fu_705_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_705_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_705_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_705_p_ce : OUT STD_LOGIC;
    grp_fu_673_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_673_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_673_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_673_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_673_p_ce : OUT STD_LOGIC;
    grp_fu_677_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_677_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_677_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_677_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_677_p_ce : OUT STD_LOGIC;
    grp_fu_681_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_681_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_681_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_681_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_681_p_ce : OUT STD_LOGIC );
end;


architecture behav of run_find_region is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_BF800000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111100000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state48_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter12 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln1073_reg_2279 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal grp_fu_691_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state46_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state54_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state47_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state55_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state53_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_720_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_740 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_746 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_reg_2273 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_2273_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1073_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1073_reg_2279_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_144_fu_928_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_144_reg_2283 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln58_1_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_1_reg_2353 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_5_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_5_reg_2359 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_9_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_9_reg_2365 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_13_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_13_reg_2371 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_17_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_17_reg_2377 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_21_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_21_reg_2383 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_21_reg_2383_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_25_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_25_reg_2389 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_25_reg_2389_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_29_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_29_reg_2395 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_29_reg_2395_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1073_2_fu_1143_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1073_2_reg_2401 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_672_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2471 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_682_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2478 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_reg_2483 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_1_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_1_reg_2488 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_701_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_reg_2493 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_711_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_reg_2500 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_8_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_8_reg_2505 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_9_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_9_reg_2510 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_3_fu_1327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_3_reg_2575 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_7_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_7_reg_2580 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_2585 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_2592 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_16_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_16_reg_2597 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_17_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_17_reg_2602 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_2607 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_2614 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_23_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_23_reg_2619 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_24_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_24_reg_2624 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_38_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_38_reg_2629 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_26_fu_1583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_26_reg_2694 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_27_fu_1589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_27_reg_2699 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_reg_2704 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_2709 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_2716 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_28_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_28_reg_2721 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_29_fu_1619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_29_reg_2726 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_2731 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_reg_2738 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_33_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_33_reg_2743 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_34_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_34_reg_2748 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_40_fu_1660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_40_reg_2753 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_41_fu_1665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_41_reg_2758 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_21_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_21_reg_2763 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_reg_2768 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_2773 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2780 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_38_fu_1779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_38_reg_2785 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_39_fu_1785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_39_reg_2790 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_2795 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_reg_2802 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln58_43_fu_1809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_43_reg_2807 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_44_fu_1815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_44_reg_2812 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_36_fu_1832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_36_reg_2817 : STD_LOGIC_VECTOR (0 downto 0);
    signal hdist_1_reg_2822 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln58_45_fu_2043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_45_reg_2828_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal scale_reg_2834 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_1_reg_2839 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_1_reg_2839_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_2_reg_2844 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_2_reg_2844_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_3_reg_2849 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_3_reg_2849_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_3_reg_2849_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_3_reg_2849_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_4_reg_2854 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_4_reg_2854_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_4_reg_2854_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_4_reg_2854_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal hdist_7_reg_2859 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_5_reg_2865 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_5_reg_2865_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_5_reg_2865_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_5_reg_2865_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_5_reg_2865_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_6_reg_2870 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_6_reg_2870_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_6_reg_2870_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_6_reg_2870_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_6_reg_2870_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_6_reg_2870_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_6_reg_2870_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal area_reg_2875 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_7_reg_2880 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_7_reg_2880_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_7_reg_2880_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_7_reg_2880_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_7_reg_2880_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_7_reg_2880_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_7_reg_2880_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal area_1_reg_2885 : STD_LOGIC_VECTOR (31 downto 0);
    signal area_2_reg_2890 : STD_LOGIC_VECTOR (31 downto 0);
    signal area_3_reg_2895 : STD_LOGIC_VECTOR (31 downto 0);
    signal area_4_reg_2900 : STD_LOGIC_VECTOR (31 downto 0);
    signal area_5_reg_2905 : STD_LOGIC_VECTOR (31 downto 0);
    signal area_6_reg_2910 : STD_LOGIC_VECTOR (31 downto 0);
    signal area_7_reg_2915 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_reg_2920 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_load_reg_2927 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal zext_ln58_1_fu_936_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln58_2_fu_952_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln58_3_fu_1157_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln58_4_fu_1172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln58_5_fu_1247_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln58_6_fu_1262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln58_7_fu_1465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln58_8_fu_1480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_4_fu_2177_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal idx_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_1_fu_2183_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_idx_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_120 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln37_fu_902_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_i_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_622_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_626_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_626_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_630_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_630_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_635_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_639_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_643_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_660_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_664_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_691_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_711_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_1_fu_766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_fu_770_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_3_fu_780_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_1_fu_784_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_5_fu_794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_2_fu_798_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_7_fu_808_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_3_fu_812_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_9_fu_822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_4_fu_826_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_11_fu_836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_5_fu_840_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_13_fu_850_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_6_fu_854_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_15_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_7_fu_868_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal lshr_ln_fu_908_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_138_fu_758_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln58_fu_918_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln58_fu_922_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln58_3_fu_946_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_110_fu_962_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_3_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_2_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_984_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_6_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_10_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_fu_1006_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_7_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_18_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_fu_1028_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_11_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_25_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_1050_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_14_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_30_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_fu_1072_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_15_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_35_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_fu_1094_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_19_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_40_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_fu_1116_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln58_22_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_45_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_7_fu_1152_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln58_11_fu_1167_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln58_fu_1182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_fu_1186_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_8_fu_1196_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_4_fu_1212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_fu_1216_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_10_fu_1226_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln58_15_fu_1242_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln58_19_fu_1257_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln58_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_2_fu_1287_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_fu_1290_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_9_fu_1300_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_5_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_4_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_2_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_2_fu_1322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_4_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_4_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_6_fu_1348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_1351_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_11_fu_1361_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_13_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_12_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_6_fu_1377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_6_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_8_fu_1394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_fu_1398_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_12_fu_1408_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_12_fu_1424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_124_fu_1428_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_14_fu_1438_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal and_ln58_5_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_1_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_23_fu_1460_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln58_27_fu_1475_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln58_8_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_8_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_10_fu_1505_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_fu_1508_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_13_fu_1518_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_21_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_20_fu_1522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_10_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_10_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_12_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_12_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_14_fu_1566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_fu_1569_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_15_fu_1579_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_16_fu_1595_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_129_fu_1599_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_16_fu_1609_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_18_fu_1625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_134_fu_1629_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_18_fu_1639_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal and_ln58_9_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_39_fu_1655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_13_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_11_fu_1545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_14_fu_1671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_14_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_16_fu_1685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_16_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_17_fu_1700_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_132_fu_1703_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_17_fu_1713_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_32_fu_1723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_31_fu_1717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_18_fu_1729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_18_fu_1735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_20_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_20_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_20_fu_1761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_140_fu_1765_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_20_fu_1775_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln58_22_fu_1791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_fu_1795_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_22_fu_1805_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal and_ln58_15_fu_1680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_19_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_17_fu_1694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_35_fu_1827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_34_fu_1821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_19_fu_1838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_137_fu_1841_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_19_fu_1851_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_37_fu_1861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_36_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_22_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_22_fu_1873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_24_fu_1883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_24_fu_1887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_21_fu_1898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_143_fu_1901_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_21_fu_1911_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_42_fu_1921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_41_fu_1915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_26_fu_1927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_26_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_28_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_28_fu_1948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln58_23_fu_1959_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_fu_1962_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_23_fu_1972_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln58_47_fu_1982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_46_fu_1976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_30_fu_1988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_30_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_25_fu_1892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_27_fu_1938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_23_fu_1878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_32_fu_2011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_31_fu_2005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_33_fu_2016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_29_fu_1953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_31_fu_1999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_42_fu_2027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_43_fu_2033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_44_fu_2038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_37_fu_2022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln63_fu_2068_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_1_fu_2085_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_151_fu_2071_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln63_fu_2081_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln63_1_fu_2108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_fu_2102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_fu_2088_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln63_1_fu_2098_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln63_3_fu_2126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_2_fu_2120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln63_2_fu_2132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln63_fu_2138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln63_1_fu_2114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_2060_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln63_1_fu_2144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln63_fu_2150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln63_fu_2162_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln1073_fu_2056_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln63_1_fu_2165_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln63_fu_2156_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln63_1_fu_2173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_626_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_630_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter12_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to13 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component run_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_fdiv_32ns_32ns_32_10_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component run_mux_21_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fdiv_32ns_32ns_32_10_no_dsp_1_U115 : component run_fdiv_32ns_32ns_32_10_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_3F800000,
        din1 => area_7_reg_2915,
        ce => ap_const_logic_1,
        dout => grp_fu_647_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U119 : component run_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_701_p4,
        din1 => grp_fu_664_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_664_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U120 : component run_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_score_reg_2920,
        din1 => score_fu_112,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_668_p2);

    mux_21_32_1_1_U121 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_q1,
        din1 => regions_max_1_q1,
        din2 => grp_fu_672_p3,
        dout => grp_fu_672_p4);

    mux_21_32_1_1_U122 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_q1,
        din1 => regions_center_1_q1,
        din2 => grp_fu_682_p3,
        dout => grp_fu_682_p4);

    mux_21_32_1_1_U123 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_q1,
        din1 => regions_min_1_q1,
        din2 => grp_fu_691_p3,
        dout => grp_fu_691_p4);

    mux_21_32_1_1_U124 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_q0,
        din1 => regions_max_1_q0,
        din2 => grp_fu_701_p3,
        dout => grp_fu_701_p4);

    mux_21_32_1_1_U125 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_q0,
        din1 => regions_center_1_q0,
        din2 => grp_fu_711_p3,
        dout => grp_fu_711_p4);

    mux_21_32_1_1_U126 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_q0,
        din1 => regions_min_1_q0,
        din2 => grp_fu_720_p3,
        dout => grp_fu_720_p4);

    flow_control_loop_pipe_sequential_init_U : component run_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    i_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1073_fu_896_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_120 <= add_ln37_fu_902_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_120 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    idx_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                idx_fu_116 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                idx_fu_116 <= idx_1_fu_2183_p3;
            end if; 
        end if;
    end process;

    score_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                score_fu_112 <= ap_const_lv32_BF800000;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                score_fu_112 <= score_4_fu_2177_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln58_21_reg_2763 <= and_ln58_21_fu_1755_p2;
                i_5_reg_2273 <= ap_sig_allocacmp_i_5;
                i_5_reg_2273_pp0_iter10_reg <= i_5_reg_2273_pp0_iter9_reg;
                i_5_reg_2273_pp0_iter11_reg <= i_5_reg_2273_pp0_iter10_reg;
                i_5_reg_2273_pp0_iter12_reg <= i_5_reg_2273_pp0_iter11_reg;
                i_5_reg_2273_pp0_iter13_reg <= i_5_reg_2273_pp0_iter12_reg;
                i_5_reg_2273_pp0_iter1_reg <= i_5_reg_2273;
                i_5_reg_2273_pp0_iter2_reg <= i_5_reg_2273_pp0_iter1_reg;
                i_5_reg_2273_pp0_iter3_reg <= i_5_reg_2273_pp0_iter2_reg;
                i_5_reg_2273_pp0_iter4_reg <= i_5_reg_2273_pp0_iter3_reg;
                i_5_reg_2273_pp0_iter5_reg <= i_5_reg_2273_pp0_iter4_reg;
                i_5_reg_2273_pp0_iter6_reg <= i_5_reg_2273_pp0_iter5_reg;
                i_5_reg_2273_pp0_iter7_reg <= i_5_reg_2273_pp0_iter6_reg;
                i_5_reg_2273_pp0_iter8_reg <= i_5_reg_2273_pp0_iter7_reg;
                i_5_reg_2273_pp0_iter9_reg <= i_5_reg_2273_pp0_iter8_reg;
                icmp_ln1073_reg_2279 <= icmp_ln1073_fu_896_p2;
                icmp_ln1073_reg_2279_pp0_iter10_reg <= icmp_ln1073_reg_2279_pp0_iter9_reg;
                icmp_ln1073_reg_2279_pp0_iter11_reg <= icmp_ln1073_reg_2279_pp0_iter10_reg;
                icmp_ln1073_reg_2279_pp0_iter12_reg <= icmp_ln1073_reg_2279_pp0_iter11_reg;
                icmp_ln1073_reg_2279_pp0_iter1_reg <= icmp_ln1073_reg_2279;
                icmp_ln1073_reg_2279_pp0_iter2_reg <= icmp_ln1073_reg_2279_pp0_iter1_reg;
                icmp_ln1073_reg_2279_pp0_iter3_reg <= icmp_ln1073_reg_2279_pp0_iter2_reg;
                icmp_ln1073_reg_2279_pp0_iter4_reg <= icmp_ln1073_reg_2279_pp0_iter3_reg;
                icmp_ln1073_reg_2279_pp0_iter5_reg <= icmp_ln1073_reg_2279_pp0_iter4_reg;
                icmp_ln1073_reg_2279_pp0_iter6_reg <= icmp_ln1073_reg_2279_pp0_iter5_reg;
                icmp_ln1073_reg_2279_pp0_iter7_reg <= icmp_ln1073_reg_2279_pp0_iter6_reg;
                icmp_ln1073_reg_2279_pp0_iter8_reg <= icmp_ln1073_reg_2279_pp0_iter7_reg;
                icmp_ln1073_reg_2279_pp0_iter9_reg <= icmp_ln1073_reg_2279_pp0_iter8_reg;
                icmp_ln58_38_reg_2785 <= icmp_ln58_38_fu_1779_p2;
                icmp_ln58_39_reg_2790 <= icmp_ln58_39_fu_1785_p2;
                icmp_ln58_43_reg_2807 <= icmp_ln58_43_fu_1809_p2;
                icmp_ln58_44_reg_2812 <= icmp_ln58_44_fu_1815_p2;
                or_ln58_21_reg_2383_pp0_iter1_reg <= or_ln58_21_reg_2383;
                or_ln58_25_reg_2389_pp0_iter1_reg <= or_ln58_25_reg_2389;
                or_ln58_29_reg_2395_pp0_iter1_reg <= or_ln58_29_reg_2395;
                or_ln58_36_reg_2817 <= or_ln58_36_fu_1832_p2;
                scale_2_reg_2844_pp0_iter3_reg <= scale_2_reg_2844;
                scale_3_reg_2849_pp0_iter3_reg <= scale_3_reg_2849;
                scale_3_reg_2849_pp0_iter4_reg <= scale_3_reg_2849_pp0_iter3_reg;
                scale_3_reg_2849_pp0_iter5_reg <= scale_3_reg_2849_pp0_iter4_reg;
                tmp_score_reg_2920 <= grp_fu_647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                and_ln58_3_reg_2575 <= and_ln58_3_fu_1327_p2;
                and_ln58_7_reg_2580 <= and_ln58_7_fu_1388_p2;
                icmp_ln58_16_reg_2597 <= icmp_ln58_16_fu_1412_p2;
                icmp_ln58_17_reg_2602 <= icmp_ln58_17_fu_1418_p2;
                icmp_ln58_23_reg_2619 <= icmp_ln58_23_fu_1442_p2;
                icmp_ln58_24_reg_2624 <= icmp_ln58_24_fu_1448_p2;
                or_ln58_38_reg_2629 <= or_ln58_38_fu_1454_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                area_1_reg_2885 <= grp_fu_693_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                area_2_reg_2890 <= grp_fu_697_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                area_3_reg_2895 <= grp_fu_693_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                area_4_reg_2900 <= grp_fu_697_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                area_5_reg_2905 <= grp_fu_697_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                area_6_reg_2910 <= grp_fu_693_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                area_7_reg_2915 <= grp_fu_697_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                area_reg_2875 <= grp_fu_689_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                hdist_1_reg_2822 <= grp_fu_689_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                hdist_7_reg_2859 <= grp_fu_693_p_dout0;
                scale_4_reg_2854 <= grp_fu_701_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln58_1_reg_2488 <= icmp_ln58_1_fu_1206_p2;
                icmp_ln58_8_reg_2505 <= icmp_ln58_8_fu_1230_p2;
                icmp_ln58_9_reg_2510 <= icmp_ln58_9_fu_1236_p2;
                icmp_ln58_reg_2483 <= icmp_ln58_fu_1200_p2;
                trunc_ln1073_2_reg_2401 <= trunc_ln1073_2_fu_1143_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln58_26_reg_2694 <= icmp_ln58_26_fu_1583_p2;
                icmp_ln58_27_reg_2699 <= icmp_ln58_27_fu_1589_p2;
                icmp_ln58_28_reg_2721 <= icmp_ln58_28_fu_1613_p2;
                icmp_ln58_29_reg_2726 <= icmp_ln58_29_fu_1619_p2;
                icmp_ln58_33_reg_2743 <= icmp_ln58_33_fu_1643_p2;
                icmp_ln58_34_reg_2748 <= icmp_ln58_34_fu_1649_p2;
                or_ln58_40_reg_2753 <= or_ln58_40_fu_1660_p2;
                or_ln58_41_reg_2758 <= or_ln58_41_fu_1665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1073_fu_896_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln58_13_reg_2371 <= or_ln58_13_fu_1044_p2;
                or_ln58_17_reg_2377 <= or_ln58_17_fu_1066_p2;
                or_ln58_1_reg_2353 <= or_ln58_1_fu_978_p2;
                or_ln58_21_reg_2383 <= or_ln58_21_fu_1088_p2;
                or_ln58_25_reg_2389 <= or_ln58_25_fu_1110_p2;
                or_ln58_29_reg_2395 <= or_ln58_29_fu_1132_p2;
                or_ln58_5_reg_2359 <= or_ln58_5_fu_1000_p2;
                or_ln58_9_reg_2365 <= or_ln58_9_fu_1022_p2;
                    tmp_144_reg_2283(11 downto 3) <= tmp_144_fu_928_p3(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_ln58_45_reg_2828 <= or_ln58_45_fu_2043_p2;
                or_ln58_45_reg_2828_pp0_iter10_reg <= or_ln58_45_reg_2828_pp0_iter9_reg;
                or_ln58_45_reg_2828_pp0_iter11_reg <= or_ln58_45_reg_2828_pp0_iter10_reg;
                or_ln58_45_reg_2828_pp0_iter12_reg <= or_ln58_45_reg_2828_pp0_iter11_reg;
                or_ln58_45_reg_2828_pp0_iter13_reg <= or_ln58_45_reg_2828_pp0_iter12_reg;
                or_ln58_45_reg_2828_pp0_iter2_reg <= or_ln58_45_reg_2828;
                or_ln58_45_reg_2828_pp0_iter3_reg <= or_ln58_45_reg_2828_pp0_iter2_reg;
                or_ln58_45_reg_2828_pp0_iter4_reg <= or_ln58_45_reg_2828_pp0_iter3_reg;
                or_ln58_45_reg_2828_pp0_iter5_reg <= or_ln58_45_reg_2828_pp0_iter4_reg;
                or_ln58_45_reg_2828_pp0_iter6_reg <= or_ln58_45_reg_2828_pp0_iter5_reg;
                or_ln58_45_reg_2828_pp0_iter7_reg <= or_ln58_45_reg_2828_pp0_iter6_reg;
                or_ln58_45_reg_2828_pp0_iter8_reg <= or_ln58_45_reg_2828_pp0_iter7_reg;
                or_ln58_45_reg_2828_pp0_iter9_reg <= or_ln58_45_reg_2828_pp0_iter8_reg;
                scale_4_reg_2854_pp0_iter3_reg <= scale_4_reg_2854;
                scale_4_reg_2854_pp0_iter4_reg <= scale_4_reg_2854_pp0_iter3_reg;
                scale_4_reg_2854_pp0_iter5_reg <= scale_4_reg_2854_pp0_iter4_reg;
                scale_7_reg_2880_pp0_iter4_reg <= scale_7_reg_2880;
                scale_7_reg_2880_pp0_iter5_reg <= scale_7_reg_2880_pp0_iter4_reg;
                scale_7_reg_2880_pp0_iter6_reg <= scale_7_reg_2880_pp0_iter5_reg;
                scale_7_reg_2880_pp0_iter7_reg <= scale_7_reg_2880_pp0_iter6_reg;
                scale_7_reg_2880_pp0_iter8_reg <= scale_7_reg_2880_pp0_iter7_reg;
                scale_7_reg_2880_pp0_iter9_reg <= scale_7_reg_2880_pp0_iter8_reg;
                score_load_reg_2927 <= score_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_740 <= grp_fu_685_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_746 <= grp_fu_685_p_dout0;
                reg_752 <= grp_fu_689_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                scale_1_reg_2839 <= grp_fu_705_p_dout0;
                scale_reg_2834 <= grp_fu_701_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                scale_1_reg_2839_pp0_iter2_reg <= scale_1_reg_2839;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                scale_2_reg_2844 <= grp_fu_701_p_dout0;
                scale_3_reg_2849 <= grp_fu_705_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                scale_5_reg_2865 <= grp_fu_701_p_dout0;
                scale_6_reg_2870 <= grp_fu_705_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                scale_5_reg_2865_pp0_iter3_reg <= scale_5_reg_2865;
                scale_5_reg_2865_pp0_iter4_reg <= scale_5_reg_2865_pp0_iter3_reg;
                scale_5_reg_2865_pp0_iter5_reg <= scale_5_reg_2865_pp0_iter4_reg;
                scale_5_reg_2865_pp0_iter6_reg <= scale_5_reg_2865_pp0_iter5_reg;
                scale_6_reg_2870_pp0_iter3_reg <= scale_6_reg_2870;
                scale_6_reg_2870_pp0_iter4_reg <= scale_6_reg_2870_pp0_iter3_reg;
                scale_6_reg_2870_pp0_iter5_reg <= scale_6_reg_2870_pp0_iter4_reg;
                scale_6_reg_2870_pp0_iter6_reg <= scale_6_reg_2870_pp0_iter5_reg;
                scale_6_reg_2870_pp0_iter7_reg <= scale_6_reg_2870_pp0_iter6_reg;
                scale_6_reg_2870_pp0_iter8_reg <= scale_6_reg_2870_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                scale_7_reg_2880 <= grp_fu_705_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_128_reg_2704 <= grp_fu_664_p2;
                tmp_62_reg_2709 <= grp_fu_672_p4;
                tmp_63_reg_2716 <= grp_fu_682_p4;
                tmp_65_reg_2731 <= grp_fu_701_p4;
                tmp_66_reg_2738 <= grp_fu_711_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_139_reg_2768 <= grp_fu_664_p2;
                tmp_68_reg_2773 <= grp_fu_672_p4;
                tmp_69_reg_2780 <= grp_fu_682_p4;
                tmp_71_reg_2795 <= grp_fu_701_p4;
                tmp_72_reg_2802 <= grp_fu_711_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_53_reg_2493 <= grp_fu_701_p4;
                tmp_54_reg_2500 <= grp_fu_711_p4;
                tmp_reg_2471 <= grp_fu_672_p4;
                tmp_s_reg_2478 <= grp_fu_682_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_56_reg_2585 <= grp_fu_672_p4;
                tmp_57_reg_2592 <= grp_fu_682_p4;
                tmp_59_reg_2607 <= grp_fu_701_p4;
                tmp_60_reg_2614 <= grp_fu_711_p4;
            end if;
        end if;
    end process;
    tmp_144_reg_2283(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter12_stage2, ap_idle_pp0_0to11, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to13, ap_done_pending_pp0, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to13 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln37_fu_902_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_5) + unsigned(ap_const_lv8_1));
    add_ln58_fu_922_p2 <= std_logic_vector(unsigned(tmp_138_fu_758_p3) + unsigned(zext_ln58_fu_918_p1));
    and_ln58_10_fu_1540_p2 <= (or_ln58_9_reg_2365 and or_ln58_10_fu_1534_p2);
    and_ln58_11_fu_1545_p2 <= (grp_fu_677_p_dout0 and and_ln58_10_fu_1540_p2);
    and_ln58_12_fu_1555_p2 <= (or_ln58_13_reg_2371 and or_ln58_12_fu_1551_p2);
    and_ln58_13_fu_1560_p2 <= (grp_fu_681_p_dout0 and and_ln58_12_fu_1555_p2);
    and_ln58_14_fu_1675_p2 <= (or_ln58_14_fu_1671_p2 and or_ln58_13_reg_2371);
    and_ln58_15_fu_1680_p2 <= (tmp_128_reg_2704 and and_ln58_14_fu_1675_p2);
    and_ln58_16_fu_1689_p2 <= (or_ln58_17_reg_2377 and or_ln58_16_fu_1685_p2);
    and_ln58_17_fu_1694_p2 <= (grp_fu_673_p_dout0 and and_ln58_16_fu_1689_p2);
    and_ln58_18_fu_1735_p2 <= (or_ln58_18_fu_1729_p2 and or_ln58_17_reg_2377);
    and_ln58_19_fu_1740_p2 <= (grp_fu_677_p_dout0 and and_ln58_18_fu_1735_p2);
    and_ln58_1_fu_1281_p2 <= (grp_fu_673_p_dout0 and and_ln58_fu_1276_p2);
    and_ln58_20_fu_1750_p2 <= (or_ln58_21_reg_2383 and or_ln58_20_fu_1746_p2);
    and_ln58_21_fu_1755_p2 <= (grp_fu_681_p_dout0 and and_ln58_20_fu_1750_p2);
    and_ln58_22_fu_1873_p2 <= (or_ln58_22_fu_1867_p2 and or_ln58_21_reg_2383_pp0_iter1_reg);
    and_ln58_23_fu_1878_p2 <= (tmp_139_reg_2768 and and_ln58_22_fu_1873_p2);
    and_ln58_24_fu_1887_p2 <= (or_ln58_25_reg_2389_pp0_iter1_reg and or_ln58_24_fu_1883_p2);
    and_ln58_25_fu_1892_p2 <= (grp_fu_673_p_dout0 and and_ln58_24_fu_1887_p2);
    and_ln58_26_fu_1933_p2 <= (or_ln58_26_fu_1927_p2 and or_ln58_25_reg_2389_pp0_iter1_reg);
    and_ln58_27_fu_1938_p2 <= (grp_fu_677_p_dout0 and and_ln58_26_fu_1933_p2);
    and_ln58_28_fu_1948_p2 <= (or_ln58_29_reg_2395_pp0_iter1_reg and or_ln58_28_fu_1944_p2);
    and_ln58_29_fu_1953_p2 <= (grp_fu_681_p_dout0 and and_ln58_28_fu_1948_p2);
    and_ln58_2_fu_1322_p2 <= (or_ln58_2_fu_1316_p2 and or_ln58_1_reg_2353);
    and_ln58_30_fu_1994_p2 <= (or_ln58_30_fu_1988_p2 and or_ln58_29_reg_2395_pp0_iter1_reg);
    and_ln58_31_fu_1999_p2 <= (grp_fu_664_p2 and and_ln58_30_fu_1994_p2);
    and_ln58_3_fu_1327_p2 <= (grp_fu_677_p_dout0 and and_ln58_2_fu_1322_p2);
    and_ln58_4_fu_1337_p2 <= (or_ln58_5_reg_2359 and or_ln58_4_fu_1333_p2);
    and_ln58_5_fu_1342_p2 <= (grp_fu_681_p_dout0 and and_ln58_4_fu_1337_p2);
    and_ln58_6_fu_1383_p2 <= (or_ln58_6_fu_1377_p2 and or_ln58_5_reg_2359);
    and_ln58_7_fu_1388_p2 <= (grp_fu_664_p2 and and_ln58_6_fu_1383_p2);
    and_ln58_8_fu_1494_p2 <= (or_ln58_9_reg_2365 and or_ln58_8_fu_1490_p2);
    and_ln58_9_fu_1499_p2 <= (grp_fu_673_p_dout0 and and_ln58_8_fu_1494_p2);
    and_ln58_fu_1276_p2 <= (or_ln58_fu_1272_p2 and or_ln58_1_reg_2353);
    and_ln63_1_fu_2144_p2 <= (or_ln63_1_fu_2114_p2 and and_ln63_fu_2138_p2);
    and_ln63_fu_2138_p2 <= (or_ln63_2_fu_2132_p2 and grp_fu_668_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage2_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln1073_reg_2279)
    begin
        if (((icmp_ln1073_reg_2279 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter12_stage2_assign_proc : process(ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage2, icmp_ln1073_reg_2279_pp0_iter12_reg, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (icmp_ln1073_reg_2279_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter12_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter12_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg, ap_loop_exit_ready_pp0_iter8_reg, ap_loop_exit_ready_pp0_iter9_reg, ap_loop_exit_ready_pp0_iter10_reg, ap_loop_exit_ready_pp0_iter11_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to13_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to13 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to13 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_sig_allocacmp_idx_load_1;

    ap_sig_allocacmp_i_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_120)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_5 <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_i_5 <= i_fu_120;
        end if; 
    end process;


    ap_sig_allocacmp_idx_load_1_assign_proc : process(ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, idx_fu_116, idx_1_fu_2183_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_sig_allocacmp_idx_load_1 <= idx_1_fu_2183_p3;
        else 
            ap_sig_allocacmp_idx_load_1 <= idx_fu_116;
        end if; 
    end process;

    bitcast_ln58_10_fu_1505_p1 <= tmp_56_reg_2585;
    bitcast_ln58_11_fu_836_p1 <= d_read_64;
    bitcast_ln58_12_fu_1424_p1 <= grp_fu_720_p4;
    bitcast_ln58_13_fu_850_p1 <= d_read_65;
    bitcast_ln58_14_fu_1566_p1 <= tmp_59_reg_2607;
    bitcast_ln58_15_fu_864_p1 <= d_read_66;
    bitcast_ln58_16_fu_1595_p1 <= grp_fu_691_p4;
    bitcast_ln58_17_fu_1700_p1 <= tmp_62_reg_2709;
    bitcast_ln58_18_fu_1625_p1 <= grp_fu_720_p4;
    bitcast_ln58_19_fu_1838_p1 <= tmp_65_reg_2731;
    bitcast_ln58_1_fu_766_p1 <= d_read;
    bitcast_ln58_20_fu_1761_p1 <= grp_fu_691_p4;
    bitcast_ln58_21_fu_1898_p1 <= tmp_68_reg_2773;
    bitcast_ln58_22_fu_1791_p1 <= grp_fu_720_p4;
    bitcast_ln58_23_fu_1959_p1 <= tmp_71_reg_2795;
    bitcast_ln58_2_fu_1287_p1 <= tmp_reg_2471;
    bitcast_ln58_3_fu_780_p1 <= d_read_60;
    bitcast_ln58_4_fu_1212_p1 <= grp_fu_720_p4;
    bitcast_ln58_5_fu_794_p1 <= d_read_61;
    bitcast_ln58_6_fu_1348_p1 <= tmp_53_reg_2493;
    bitcast_ln58_7_fu_808_p1 <= d_read_62;
    bitcast_ln58_8_fu_1394_p1 <= grp_fu_691_p4;
    bitcast_ln58_9_fu_822_p1 <= d_read_63;
    bitcast_ln58_fu_1182_p1 <= grp_fu_691_p4;
    bitcast_ln63_1_fu_2085_p1 <= score_load_reg_2927;
    bitcast_ln63_fu_2068_p1 <= tmp_score_reg_2920;

    grp_fu_622_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_reg_2471, tmp_56_reg_2585, tmp_62_reg_2709, tmp_65_reg_2731, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_622_p0 <= tmp_65_reg_2731;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_622_p0 <= tmp_62_reg_2709;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_622_p0 <= tmp_56_reg_2585;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_622_p0 <= tmp_reg_2471;
        else 
            grp_fu_622_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_622_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_s_reg_2478, tmp_57_reg_2592, tmp_63_reg_2716, tmp_66_reg_2738, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_622_p1 <= tmp_66_reg_2738;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_622_p1 <= tmp_63_reg_2716;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_622_p1 <= tmp_57_reg_2592;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_622_p1 <= tmp_s_reg_2478;
        else 
            grp_fu_622_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_626_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, icmp_ln1073_reg_2279, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1073_reg_2279 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_626_opcode <= ap_const_lv2_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_626_opcode <= ap_const_lv2_0;
        else 
            grp_fu_626_opcode <= "XX";
        end if; 
    end process;


    grp_fu_626_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_53_reg_2493, tmp_59_reg_2607, tmp_68_reg_2773, scale_reg_2834, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_626_p0 <= scale_reg_2834;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_626_p0 <= tmp_68_reg_2773;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_626_p0 <= tmp_59_reg_2607;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_626_p0 <= tmp_53_reg_2493;
        else 
            grp_fu_626_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_626_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_54_reg_2500, tmp_60_reg_2614, tmp_69_reg_2780, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_626_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_626_p1 <= tmp_69_reg_2780;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_626_p1 <= tmp_60_reg_2614;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_626_p1 <= tmp_54_reg_2500;
        else 
            grp_fu_626_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_630_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_630_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_630_opcode <= ap_const_lv2_0;
        else 
            grp_fu_630_opcode <= "XX";
        end if; 
    end process;


    grp_fu_630_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_71_reg_2795, area_reg_2875, area_2_reg_2890, area_5_reg_2905, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_630_p0 <= area_5_reg_2905;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_630_p0 <= area_2_reg_2890;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_630_p0 <= area_reg_2875;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_630_p0 <= tmp_71_reg_2795;
        else 
            grp_fu_630_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_630_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_72_reg_2802, scale_1_reg_2839_pp0_iter2_reg, scale_3_reg_2849_pp0_iter5_reg, scale_6_reg_2870_pp0_iter8_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_630_p1 <= scale_6_reg_2870_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_630_p1 <= scale_3_reg_2849_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_630_p1 <= scale_1_reg_2839_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_630_p1 <= tmp_72_reg_2802;
        else 
            grp_fu_630_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_635_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, area_1_reg_2885, area_3_reg_2895, area_4_reg_2900, area_6_reg_2910, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_635_p0 <= area_6_reg_2910;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_635_p0 <= area_4_reg_2900;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_635_p0 <= area_3_reg_2895;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_635_p0 <= area_1_reg_2885;
        else 
            grp_fu_635_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_635_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, scale_2_reg_2844_pp0_iter3_reg, scale_4_reg_2854_pp0_iter5_reg, scale_5_reg_2865_pp0_iter6_reg, scale_7_reg_2880_pp0_iter9_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_635_p1 <= scale_7_reg_2880_pp0_iter9_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_635_p1 <= scale_5_reg_2865_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_635_p1 <= scale_4_reg_2854_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_635_p1 <= scale_2_reg_2844_pp0_iter3_reg;
        else 
            grp_fu_635_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_639_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, reg_740, reg_746, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_639_p0 <= reg_746;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_639_p0 <= reg_740;
        else 
            grp_fu_639_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_639_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, reg_740, reg_746, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_639_p1 <= reg_746;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_639_p1 <= reg_740;
        else 
            grp_fu_639_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_643_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, reg_752, hdist_1_reg_2822, hdist_7_reg_2859, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_643_p0 <= hdist_7_reg_2859;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_643_p0 <= reg_752;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_643_p0 <= hdist_1_reg_2822;
        else 
            grp_fu_643_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_643_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, reg_752, hdist_1_reg_2822, hdist_7_reg_2859, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_643_p1 <= hdist_7_reg_2859;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_643_p1 <= reg_752;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_643_p1 <= hdist_1_reg_2822;
        else 
            grp_fu_643_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_652_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, d_read, d_read_61, d_read_63, d_read_65, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_652_p1 <= d_read_65;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_652_p1 <= d_read_63;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_652_p1 <= d_read_61;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_652_p1 <= d_read;
        else 
            grp_fu_652_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_656_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, d_read, d_read_61, d_read_63, d_read_65, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_656_p1 <= d_read_65;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_656_p1 <= d_read_63;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_656_p1 <= d_read_61;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_656_p1 <= d_read;
        else 
            grp_fu_656_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_660_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, d_read_60, d_read_62, d_read_64, d_read_66, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_660_p1 <= d_read_66;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_660_p1 <= d_read_64;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_660_p1 <= d_read_62;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_660_p1 <= d_read_60;
        else 
            grp_fu_660_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_664_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, d_read_60, d_read_62, d_read_64, d_read_66, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_664_p1 <= d_read_66;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_664_p1 <= d_read_64;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_664_p1 <= d_read_62;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_664_p1 <= d_read_60;
        else 
            grp_fu_664_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_672_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, trunc_ln1073_2_fu_1143_p1, trunc_ln1073_2_reg_2401, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_672_p3 <= trunc_ln1073_2_reg_2401;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_672_p3 <= trunc_ln1073_2_fu_1143_p1;
        else 
            grp_fu_672_p3 <= "X";
        end if; 
    end process;

    grp_fu_673_p_ce <= ap_const_logic_1;
    grp_fu_673_p_din0 <= grp_fu_691_p4;
    grp_fu_673_p_din1 <= grp_fu_652_p1;
    grp_fu_673_p_opcode <= ap_const_lv5_2;
    grp_fu_677_p_ce <= ap_const_logic_1;
    grp_fu_677_p_din0 <= grp_fu_672_p4;
    grp_fu_677_p_din1 <= grp_fu_656_p1;
    grp_fu_677_p_opcode <= ap_const_lv5_4;
    grp_fu_681_p_ce <= ap_const_logic_1;
    grp_fu_681_p_din0 <= grp_fu_720_p4;
    grp_fu_681_p_din1 <= grp_fu_660_p1;
    grp_fu_681_p_opcode <= ap_const_lv5_2;

    grp_fu_682_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, trunc_ln1073_2_fu_1143_p1, trunc_ln1073_2_reg_2401, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_682_p3 <= trunc_ln1073_2_reg_2401;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_682_p3 <= trunc_ln1073_2_fu_1143_p1;
        else 
            grp_fu_682_p3 <= "X";
        end if; 
    end process;

    grp_fu_685_p_ce <= ap_const_logic_1;
    grp_fu_685_p_din0 <= grp_fu_622_p0;
    grp_fu_685_p_din1 <= grp_fu_622_p1;
    grp_fu_685_p_opcode <= ap_const_lv2_1(1 - 1 downto 0);
    grp_fu_689_p_ce <= ap_const_logic_1;
    grp_fu_689_p_din0 <= grp_fu_626_p0;
    grp_fu_689_p_din1 <= grp_fu_626_p1;
    grp_fu_689_p_opcode <= grp_fu_626_opcode;

    grp_fu_691_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, trunc_ln1073_2_fu_1143_p1, trunc_ln1073_2_reg_2401, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_691_p3 <= trunc_ln1073_2_reg_2401;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_691_p3 <= trunc_ln1073_2_fu_1143_p1;
        else 
            grp_fu_691_p3 <= "X";
        end if; 
    end process;

    grp_fu_693_p_ce <= ap_const_logic_1;
    grp_fu_693_p_din0 <= grp_fu_630_p0;
    grp_fu_693_p_din1 <= grp_fu_630_p1;
    grp_fu_693_p_opcode <= grp_fu_630_opcode;
    grp_fu_697_p_ce <= ap_const_logic_1;
    grp_fu_697_p_din0 <= grp_fu_635_p0;
    grp_fu_697_p_din1 <= grp_fu_635_p1;
    grp_fu_697_p_opcode <= ap_const_lv2_0(1 - 1 downto 0);

    grp_fu_701_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, trunc_ln1073_2_fu_1143_p1, trunc_ln1073_2_reg_2401, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_701_p3 <= trunc_ln1073_2_reg_2401;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_701_p3 <= trunc_ln1073_2_fu_1143_p1;
        else 
            grp_fu_701_p3 <= "X";
        end if; 
    end process;

    grp_fu_701_p_ce <= ap_const_logic_1;
    grp_fu_701_p_din0 <= grp_fu_639_p0;
    grp_fu_701_p_din1 <= grp_fu_639_p1;
    grp_fu_705_p_ce <= ap_const_logic_1;
    grp_fu_705_p_din0 <= grp_fu_643_p0;
    grp_fu_705_p_din1 <= grp_fu_643_p1;

    grp_fu_711_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, trunc_ln1073_2_fu_1143_p1, trunc_ln1073_2_reg_2401, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_711_p3 <= trunc_ln1073_2_reg_2401;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_711_p3 <= trunc_ln1073_2_fu_1143_p1;
        else 
            grp_fu_711_p3 <= "X";
        end if; 
    end process;


    grp_fu_720_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, trunc_ln1073_2_fu_1143_p1, trunc_ln1073_2_reg_2401, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_720_p3 <= trunc_ln1073_2_reg_2401;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_720_p3 <= trunc_ln1073_2_fu_1143_p1;
        else 
            grp_fu_720_p3 <= "X";
        end if; 
    end process;

    icmp_ln1073_fu_896_p2 <= "1" when (ap_sig_allocacmp_i_5 = n_regions) else "0";
    icmp_ln58_10_fu_994_p2 <= "0" when (tmp_115_fu_984_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_11_fu_816_p2 <= "1" when (trunc_ln58_3_fu_812_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_12_fu_1365_p2 <= "0" when (tmp_117_fu_1351_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_13_fu_1371_p2 <= "1" when (trunc_ln58_11_fu_1361_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_14_fu_830_p2 <= "1" when (trunc_ln58_4_fu_826_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_15_fu_844_p2 <= "1" when (trunc_ln58_5_fu_840_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_16_fu_1412_p2 <= "0" when (tmp_119_fu_1398_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_17_fu_1418_p2 <= "1" when (trunc_ln58_12_fu_1408_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_18_fu_1016_p2 <= "0" when (tmp_120_fu_1006_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_19_fu_858_p2 <= "1" when (trunc_ln58_6_fu_854_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_1_fu_1206_p2 <= "1" when (trunc_ln58_8_fu_1196_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_20_fu_1522_p2 <= "0" when (tmp_122_fu_1508_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_21_fu_1528_p2 <= "1" when (trunc_ln58_13_fu_1518_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_22_fu_872_p2 <= "1" when (trunc_ln58_7_fu_868_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_23_fu_1442_p2 <= "0" when (tmp_124_fu_1428_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_24_fu_1448_p2 <= "1" when (trunc_ln58_14_fu_1438_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_25_fu_1038_p2 <= "0" when (tmp_125_fu_1028_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_26_fu_1583_p2 <= "0" when (tmp_127_fu_1569_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_27_fu_1589_p2 <= "1" when (trunc_ln58_15_fu_1579_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_28_fu_1613_p2 <= "0" when (tmp_129_fu_1599_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_29_fu_1619_p2 <= "1" when (trunc_ln58_16_fu_1609_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_2_fu_972_p2 <= "0" when (tmp_110_fu_962_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_30_fu_1060_p2 <= "0" when (tmp_130_fu_1050_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_31_fu_1717_p2 <= "0" when (tmp_132_fu_1703_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_32_fu_1723_p2 <= "1" when (trunc_ln58_17_fu_1713_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_33_fu_1643_p2 <= "0" when (tmp_134_fu_1629_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_34_fu_1649_p2 <= "1" when (trunc_ln58_18_fu_1639_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_35_fu_1082_p2 <= "0" when (tmp_135_fu_1072_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_36_fu_1855_p2 <= "0" when (tmp_137_fu_1841_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_37_fu_1861_p2 <= "1" when (trunc_ln58_19_fu_1851_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_38_fu_1779_p2 <= "0" when (tmp_140_fu_1765_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_39_fu_1785_p2 <= "1" when (trunc_ln58_20_fu_1775_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_3_fu_774_p2 <= "1" when (trunc_ln58_fu_770_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_40_fu_1104_p2 <= "0" when (tmp_141_fu_1094_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_41_fu_1915_p2 <= "0" when (tmp_143_fu_1901_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_42_fu_1921_p2 <= "1" when (trunc_ln58_21_fu_1911_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_43_fu_1809_p2 <= "0" when (tmp_146_fu_1795_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_44_fu_1815_p2 <= "1" when (trunc_ln58_22_fu_1805_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_45_fu_1126_p2 <= "0" when (tmp_147_fu_1116_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_46_fu_1976_p2 <= "0" when (tmp_149_fu_1962_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_47_fu_1982_p2 <= "1" when (trunc_ln58_23_fu_1972_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_4_fu_1304_p2 <= "0" when (tmp_112_fu_1290_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_5_fu_1310_p2 <= "1" when (trunc_ln58_9_fu_1300_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_6_fu_788_p2 <= "1" when (trunc_ln58_1_fu_784_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_7_fu_802_p2 <= "1" when (trunc_ln58_2_fu_798_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_8_fu_1230_p2 <= "0" when (tmp_114_fu_1216_p4 = ap_const_lv8_FF) else "1";
    icmp_ln58_9_fu_1236_p2 <= "1" when (trunc_ln58_10_fu_1226_p1 = ap_const_lv23_0) else "0";
    icmp_ln58_fu_1200_p2 <= "0" when (tmp_109_fu_1186_p4 = ap_const_lv8_FF) else "1";
    icmp_ln63_1_fu_2108_p2 <= "1" when (trunc_ln63_fu_2081_p1 = ap_const_lv23_0) else "0";
    icmp_ln63_2_fu_2120_p2 <= "0" when (tmp_152_fu_2088_p4 = ap_const_lv8_FF) else "1";
    icmp_ln63_3_fu_2126_p2 <= "1" when (trunc_ln63_1_fu_2098_p1 = ap_const_lv23_0) else "0";
    icmp_ln63_fu_2102_p2 <= "0" when (tmp_151_fu_2071_p4 = ap_const_lv8_FF) else "1";
    idx_1_fu_2183_p3 <= 
        idx_fu_116 when (or_ln58_45_reg_2828_pp0_iter13_reg(0) = '1') else 
        zext_ln63_1_fu_2173_p1;
    lshr_ln_fu_908_p4 <= ap_sig_allocacmp_i_5(7 downto 1);
    or_ln58_10_fu_1534_p2 <= (icmp_ln58_21_fu_1528_p2 or icmp_ln58_20_fu_1522_p2);
    or_ln58_11_fu_1167_p2 <= (tmp_144_reg_2283 or ap_const_lv12_3);
    or_ln58_12_fu_1551_p2 <= (icmp_ln58_24_reg_2624 or icmp_ln58_23_reg_2619);
    or_ln58_13_fu_1044_p2 <= (icmp_ln58_25_fu_1038_p2 or icmp_ln58_11_fu_816_p2);
    or_ln58_14_fu_1671_p2 <= (icmp_ln58_27_reg_2699 or icmp_ln58_26_reg_2694);
    or_ln58_15_fu_1242_p2 <= (tmp_144_reg_2283 or ap_const_lv12_4);
    or_ln58_16_fu_1685_p2 <= (icmp_ln58_29_reg_2726 or icmp_ln58_28_reg_2721);
    or_ln58_17_fu_1066_p2 <= (icmp_ln58_30_fu_1060_p2 or icmp_ln58_14_fu_830_p2);
    or_ln58_18_fu_1729_p2 <= (icmp_ln58_32_fu_1723_p2 or icmp_ln58_31_fu_1717_p2);
    or_ln58_19_fu_1257_p2 <= (tmp_144_reg_2283 or ap_const_lv12_5);
    or_ln58_1_fu_978_p2 <= (icmp_ln58_3_fu_774_p2 or icmp_ln58_2_fu_972_p2);
    or_ln58_20_fu_1746_p2 <= (icmp_ln58_34_reg_2748 or icmp_ln58_33_reg_2743);
    or_ln58_21_fu_1088_p2 <= (icmp_ln58_35_fu_1082_p2 or icmp_ln58_15_fu_844_p2);
    or_ln58_22_fu_1867_p2 <= (icmp_ln58_37_fu_1861_p2 or icmp_ln58_36_fu_1855_p2);
    or_ln58_23_fu_1460_p2 <= (tmp_144_reg_2283 or ap_const_lv12_6);
    or_ln58_24_fu_1883_p2 <= (icmp_ln58_39_reg_2790 or icmp_ln58_38_reg_2785);
    or_ln58_25_fu_1110_p2 <= (icmp_ln58_40_fu_1104_p2 or icmp_ln58_19_fu_858_p2);
    or_ln58_26_fu_1927_p2 <= (icmp_ln58_42_fu_1921_p2 or icmp_ln58_41_fu_1915_p2);
    or_ln58_27_fu_1475_p2 <= (tmp_144_reg_2283 or ap_const_lv12_7);
    or_ln58_28_fu_1944_p2 <= (icmp_ln58_44_reg_2812 or icmp_ln58_43_reg_2807);
    or_ln58_29_fu_1132_p2 <= (icmp_ln58_45_fu_1126_p2 or icmp_ln58_22_fu_872_p2);
    or_ln58_2_fu_1316_p2 <= (icmp_ln58_5_fu_1310_p2 or icmp_ln58_4_fu_1304_p2);
    or_ln58_30_fu_1988_p2 <= (icmp_ln58_47_fu_1982_p2 or icmp_ln58_46_fu_1976_p2);
    or_ln58_31_fu_2005_p2 <= (and_ln58_27_fu_1938_p2 or and_ln58_25_fu_1892_p2);
    or_ln58_32_fu_2011_p2 <= (and_ln58_23_fu_1878_p2 or and_ln58_21_reg_2763);
    or_ln58_33_fu_2016_p2 <= (or_ln58_32_fu_2011_p2 or or_ln58_31_fu_2005_p2);
    or_ln58_34_fu_1821_p2 <= (and_ln58_19_fu_1740_p2 or and_ln58_15_fu_1680_p2);
    or_ln58_35_fu_1827_p2 <= (and_ln58_3_reg_2575 or and_ln58_17_fu_1694_p2);
    or_ln58_36_fu_1832_p2 <= (or_ln58_35_fu_1827_p2 or or_ln58_34_fu_1821_p2);
    or_ln58_37_fu_2022_p2 <= (or_ln58_36_reg_2817 or or_ln58_33_fu_2016_p2);
    or_ln58_38_fu_1454_p2 <= (and_ln58_5_fu_1342_p2 or and_ln58_1_fu_1281_p2);
    or_ln58_39_fu_1655_p2 <= (and_ln58_9_fu_1499_p2 or and_ln58_7_reg_2580);
    or_ln58_3_fu_946_p2 <= (tmp_144_fu_928_p3 or ap_const_lv12_1);
    or_ln58_40_fu_1660_p2 <= (or_ln58_39_fu_1655_p2 or or_ln58_38_reg_2629);
    or_ln58_41_fu_1665_p2 <= (and_ln58_13_fu_1560_p2 or and_ln58_11_fu_1545_p2);
    or_ln58_42_fu_2027_p2 <= (and_ln58_31_fu_1999_p2 or and_ln58_29_fu_1953_p2);
    or_ln58_43_fu_2033_p2 <= (or_ln58_42_fu_2027_p2 or or_ln58_41_reg_2758);
    or_ln58_44_fu_2038_p2 <= (or_ln58_43_fu_2033_p2 or or_ln58_40_reg_2753);
    or_ln58_45_fu_2043_p2 <= (or_ln58_44_fu_2038_p2 or or_ln58_37_fu_2022_p2);
    or_ln58_4_fu_1333_p2 <= (icmp_ln58_9_reg_2510 or icmp_ln58_8_reg_2505);
    or_ln58_5_fu_1000_p2 <= (icmp_ln58_6_fu_788_p2 or icmp_ln58_10_fu_994_p2);
    or_ln58_6_fu_1377_p2 <= (icmp_ln58_13_fu_1371_p2 or icmp_ln58_12_fu_1365_p2);
    or_ln58_7_fu_1152_p2 <= (tmp_144_reg_2283 or ap_const_lv12_2);
    or_ln58_8_fu_1490_p2 <= (icmp_ln58_17_reg_2602 or icmp_ln58_16_reg_2597);
    or_ln58_9_fu_1022_p2 <= (icmp_ln58_7_fu_802_p2 or icmp_ln58_18_fu_1016_p2);
    or_ln58_fu_1272_p2 <= (icmp_ln58_reg_2483 or icmp_ln58_1_reg_2488);
    or_ln63_1_fu_2114_p2 <= (icmp_ln63_fu_2102_p2 or icmp_ln63_1_fu_2108_p2);
    or_ln63_2_fu_2132_p2 <= (icmp_ln63_3_fu_2126_p2 or icmp_ln63_2_fu_2120_p2);
    or_ln63_fu_2150_p2 <= (tmp_1_fu_2060_p3 or and_ln63_1_fu_2144_p2);

    regions_center_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln58_2_fu_952_p1, ap_block_pp0_stage1, zext_ln58_4_fu_1172_p1, ap_block_pp0_stage2, zext_ln58_6_fu_1262_p1, ap_block_pp0_stage3, zext_ln58_8_fu_1480_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_center_0_address0 <= zext_ln58_8_fu_1480_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_center_0_address0 <= zext_ln58_6_fu_1262_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_center_0_address0 <= zext_ln58_4_fu_1172_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_center_0_address0 <= zext_ln58_2_fu_952_p1(12 - 1 downto 0);
            else 
                regions_center_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_center_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_center_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln58_1_fu_936_p1, ap_block_pp0_stage0, zext_ln58_3_fu_1157_p1, ap_block_pp0_stage1, zext_ln58_5_fu_1247_p1, ap_block_pp0_stage2, zext_ln58_7_fu_1465_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_center_0_address1 <= zext_ln58_7_fu_1465_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_center_0_address1 <= zext_ln58_5_fu_1247_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_center_0_address1 <= zext_ln58_3_fu_1157_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_center_0_address1 <= zext_ln58_1_fu_936_p1(12 - 1 downto 0);
            else 
                regions_center_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_center_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_center_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_center_0_ce0 <= ap_const_logic_1;
        else 
            regions_center_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_center_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_center_0_ce1 <= ap_const_logic_1;
        else 
            regions_center_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_center_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln58_2_fu_952_p1, ap_block_pp0_stage1, zext_ln58_4_fu_1172_p1, ap_block_pp0_stage2, zext_ln58_6_fu_1262_p1, ap_block_pp0_stage3, zext_ln58_8_fu_1480_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_center_1_address0 <= zext_ln58_8_fu_1480_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_center_1_address0 <= zext_ln58_6_fu_1262_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_center_1_address0 <= zext_ln58_4_fu_1172_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_center_1_address0 <= zext_ln58_2_fu_952_p1(12 - 1 downto 0);
            else 
                regions_center_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_center_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_center_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln58_1_fu_936_p1, ap_block_pp0_stage0, zext_ln58_3_fu_1157_p1, ap_block_pp0_stage1, zext_ln58_5_fu_1247_p1, ap_block_pp0_stage2, zext_ln58_7_fu_1465_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_center_1_address1 <= zext_ln58_7_fu_1465_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_center_1_address1 <= zext_ln58_5_fu_1247_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_center_1_address1 <= zext_ln58_3_fu_1157_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_center_1_address1 <= zext_ln58_1_fu_936_p1(12 - 1 downto 0);
            else 
                regions_center_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_center_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_center_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_center_1_ce0 <= ap_const_logic_1;
        else 
            regions_center_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_center_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_center_1_ce1 <= ap_const_logic_1;
        else 
            regions_center_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_max_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln58_2_fu_952_p1, ap_block_pp0_stage1, zext_ln58_4_fu_1172_p1, ap_block_pp0_stage2, zext_ln58_6_fu_1262_p1, ap_block_pp0_stage3, zext_ln58_8_fu_1480_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_max_0_address0 <= zext_ln58_8_fu_1480_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_max_0_address0 <= zext_ln58_6_fu_1262_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_max_0_address0 <= zext_ln58_4_fu_1172_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_max_0_address0 <= zext_ln58_2_fu_952_p1(12 - 1 downto 0);
            else 
                regions_max_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_max_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_max_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln58_1_fu_936_p1, ap_block_pp0_stage0, zext_ln58_3_fu_1157_p1, ap_block_pp0_stage1, zext_ln58_5_fu_1247_p1, ap_block_pp0_stage2, zext_ln58_7_fu_1465_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_max_0_address1 <= zext_ln58_7_fu_1465_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_max_0_address1 <= zext_ln58_5_fu_1247_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_max_0_address1 <= zext_ln58_3_fu_1157_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_max_0_address1 <= zext_ln58_1_fu_936_p1(12 - 1 downto 0);
            else 
                regions_max_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_max_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_max_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_max_0_ce0 <= ap_const_logic_1;
        else 
            regions_max_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_max_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_max_0_ce1 <= ap_const_logic_1;
        else 
            regions_max_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_max_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln58_2_fu_952_p1, ap_block_pp0_stage1, zext_ln58_4_fu_1172_p1, ap_block_pp0_stage2, zext_ln58_6_fu_1262_p1, ap_block_pp0_stage3, zext_ln58_8_fu_1480_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_max_1_address0 <= zext_ln58_8_fu_1480_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_max_1_address0 <= zext_ln58_6_fu_1262_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_max_1_address0 <= zext_ln58_4_fu_1172_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_max_1_address0 <= zext_ln58_2_fu_952_p1(12 - 1 downto 0);
            else 
                regions_max_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_max_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_max_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln58_1_fu_936_p1, ap_block_pp0_stage0, zext_ln58_3_fu_1157_p1, ap_block_pp0_stage1, zext_ln58_5_fu_1247_p1, ap_block_pp0_stage2, zext_ln58_7_fu_1465_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_max_1_address1 <= zext_ln58_7_fu_1465_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_max_1_address1 <= zext_ln58_5_fu_1247_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_max_1_address1 <= zext_ln58_3_fu_1157_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_max_1_address1 <= zext_ln58_1_fu_936_p1(12 - 1 downto 0);
            else 
                regions_max_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_max_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_max_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_max_1_ce0 <= ap_const_logic_1;
        else 
            regions_max_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_max_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_max_1_ce1 <= ap_const_logic_1;
        else 
            regions_max_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_min_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln58_2_fu_952_p1, ap_block_pp0_stage1, zext_ln58_4_fu_1172_p1, ap_block_pp0_stage2, zext_ln58_6_fu_1262_p1, ap_block_pp0_stage3, zext_ln58_8_fu_1480_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_min_0_address0 <= zext_ln58_8_fu_1480_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_min_0_address0 <= zext_ln58_6_fu_1262_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_min_0_address0 <= zext_ln58_4_fu_1172_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_min_0_address0 <= zext_ln58_2_fu_952_p1(12 - 1 downto 0);
            else 
                regions_min_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_min_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_min_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln58_1_fu_936_p1, ap_block_pp0_stage0, zext_ln58_3_fu_1157_p1, ap_block_pp0_stage1, zext_ln58_5_fu_1247_p1, ap_block_pp0_stage2, zext_ln58_7_fu_1465_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_min_0_address1 <= zext_ln58_7_fu_1465_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_min_0_address1 <= zext_ln58_5_fu_1247_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_min_0_address1 <= zext_ln58_3_fu_1157_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_min_0_address1 <= zext_ln58_1_fu_936_p1(12 - 1 downto 0);
            else 
                regions_min_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_min_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_min_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_min_0_ce0 <= ap_const_logic_1;
        else 
            regions_min_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_min_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_min_0_ce1 <= ap_const_logic_1;
        else 
            regions_min_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_min_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln58_2_fu_952_p1, ap_block_pp0_stage1, zext_ln58_4_fu_1172_p1, ap_block_pp0_stage2, zext_ln58_6_fu_1262_p1, ap_block_pp0_stage3, zext_ln58_8_fu_1480_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_min_1_address0 <= zext_ln58_8_fu_1480_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_min_1_address0 <= zext_ln58_6_fu_1262_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_min_1_address0 <= zext_ln58_4_fu_1172_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_min_1_address0 <= zext_ln58_2_fu_952_p1(12 - 1 downto 0);
            else 
                regions_min_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_min_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_min_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln58_1_fu_936_p1, ap_block_pp0_stage0, zext_ln58_3_fu_1157_p1, ap_block_pp0_stage1, zext_ln58_5_fu_1247_p1, ap_block_pp0_stage2, zext_ln58_7_fu_1465_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                regions_min_1_address1 <= zext_ln58_7_fu_1465_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                regions_min_1_address1 <= zext_ln58_5_fu_1247_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                regions_min_1_address1 <= zext_ln58_3_fu_1157_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                regions_min_1_address1 <= zext_ln58_1_fu_936_p1(12 - 1 downto 0);
            else 
                regions_min_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            regions_min_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_min_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_min_1_ce0 <= ap_const_logic_1;
        else 
            regions_min_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_min_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            regions_min_1_ce1 <= ap_const_logic_1;
        else 
            regions_min_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    score_4_fu_2177_p3 <= 
        score_load_reg_2927 when (or_ln58_45_reg_2828_pp0_iter13_reg(0) = '1') else 
        select_ln63_fu_2156_p3;
    select_ln63_1_fu_2165_p3 <= 
        zext_ln63_fu_2162_p1 when (or_ln63_fu_2150_p2(0) = '1') else 
        trunc_ln1073_fu_2056_p1;
    select_ln63_fu_2156_p3 <= 
        tmp_score_reg_2920 when (or_ln63_fu_2150_p2(0) = '1') else 
        score_load_reg_2927;
    tmp_109_fu_1186_p4 <= bitcast_ln58_fu_1182_p1(30 downto 23);
    tmp_110_fu_962_p4 <= bitcast_ln58_1_fu_766_p1(30 downto 23);
    tmp_112_fu_1290_p4 <= bitcast_ln58_2_fu_1287_p1(30 downto 23);
    tmp_114_fu_1216_p4 <= bitcast_ln58_4_fu_1212_p1(30 downto 23);
    tmp_115_fu_984_p4 <= bitcast_ln58_3_fu_780_p1(30 downto 23);
    tmp_117_fu_1351_p4 <= bitcast_ln58_6_fu_1348_p1(30 downto 23);
    tmp_119_fu_1398_p4 <= bitcast_ln58_8_fu_1394_p1(30 downto 23);
    tmp_120_fu_1006_p4 <= bitcast_ln58_5_fu_794_p1(30 downto 23);
    tmp_122_fu_1508_p4 <= bitcast_ln58_10_fu_1505_p1(30 downto 23);
    tmp_124_fu_1428_p4 <= bitcast_ln58_12_fu_1424_p1(30 downto 23);
    tmp_125_fu_1028_p4 <= bitcast_ln58_7_fu_808_p1(30 downto 23);
    tmp_127_fu_1569_p4 <= bitcast_ln58_14_fu_1566_p1(30 downto 23);
    tmp_129_fu_1599_p4 <= bitcast_ln58_16_fu_1595_p1(30 downto 23);
    tmp_130_fu_1050_p4 <= bitcast_ln58_9_fu_822_p1(30 downto 23);
    tmp_132_fu_1703_p4 <= bitcast_ln58_17_fu_1700_p1(30 downto 23);
    tmp_134_fu_1629_p4 <= bitcast_ln58_18_fu_1625_p1(30 downto 23);
    tmp_135_fu_1072_p4 <= bitcast_ln58_11_fu_836_p1(30 downto 23);
    tmp_137_fu_1841_p4 <= bitcast_ln58_19_fu_1838_p1(30 downto 23);
    tmp_138_fu_758_p3 <= (regions_min_0_offset & ap_const_lv3_0);
    tmp_140_fu_1765_p4 <= bitcast_ln58_20_fu_1761_p1(30 downto 23);
    tmp_141_fu_1094_p4 <= bitcast_ln58_13_fu_850_p1(30 downto 23);
    tmp_143_fu_1901_p4 <= bitcast_ln58_21_fu_1898_p1(30 downto 23);
    tmp_144_fu_928_p3 <= (add_ln58_fu_922_p2 & ap_const_lv3_0);
    tmp_146_fu_1795_p4 <= bitcast_ln58_22_fu_1791_p1(30 downto 23);
    tmp_147_fu_1116_p4 <= bitcast_ln58_15_fu_864_p1(30 downto 23);
    tmp_149_fu_1962_p4 <= bitcast_ln58_23_fu_1959_p1(30 downto 23);
    tmp_151_fu_2071_p4 <= bitcast_ln63_fu_2068_p1(30 downto 23);
    tmp_152_fu_2088_p4 <= bitcast_ln63_1_fu_2085_p1(30 downto 23);
    tmp_1_fu_2060_p3 <= idx_fu_116(31 downto 31);
    trunc_ln1073_2_fu_1143_p1 <= i_5_reg_2273(1 - 1 downto 0);
    trunc_ln1073_fu_2056_p1 <= idx_fu_116(31 - 1 downto 0);
    trunc_ln58_10_fu_1226_p1 <= bitcast_ln58_4_fu_1212_p1(23 - 1 downto 0);
    trunc_ln58_11_fu_1361_p1 <= bitcast_ln58_6_fu_1348_p1(23 - 1 downto 0);
    trunc_ln58_12_fu_1408_p1 <= bitcast_ln58_8_fu_1394_p1(23 - 1 downto 0);
    trunc_ln58_13_fu_1518_p1 <= bitcast_ln58_10_fu_1505_p1(23 - 1 downto 0);
    trunc_ln58_14_fu_1438_p1 <= bitcast_ln58_12_fu_1424_p1(23 - 1 downto 0);
    trunc_ln58_15_fu_1579_p1 <= bitcast_ln58_14_fu_1566_p1(23 - 1 downto 0);
    trunc_ln58_16_fu_1609_p1 <= bitcast_ln58_16_fu_1595_p1(23 - 1 downto 0);
    trunc_ln58_17_fu_1713_p1 <= bitcast_ln58_17_fu_1700_p1(23 - 1 downto 0);
    trunc_ln58_18_fu_1639_p1 <= bitcast_ln58_18_fu_1625_p1(23 - 1 downto 0);
    trunc_ln58_19_fu_1851_p1 <= bitcast_ln58_19_fu_1838_p1(23 - 1 downto 0);
    trunc_ln58_1_fu_784_p1 <= bitcast_ln58_3_fu_780_p1(23 - 1 downto 0);
    trunc_ln58_20_fu_1775_p1 <= bitcast_ln58_20_fu_1761_p1(23 - 1 downto 0);
    trunc_ln58_21_fu_1911_p1 <= bitcast_ln58_21_fu_1898_p1(23 - 1 downto 0);
    trunc_ln58_22_fu_1805_p1 <= bitcast_ln58_22_fu_1791_p1(23 - 1 downto 0);
    trunc_ln58_23_fu_1972_p1 <= bitcast_ln58_23_fu_1959_p1(23 - 1 downto 0);
    trunc_ln58_2_fu_798_p1 <= bitcast_ln58_5_fu_794_p1(23 - 1 downto 0);
    trunc_ln58_3_fu_812_p1 <= bitcast_ln58_7_fu_808_p1(23 - 1 downto 0);
    trunc_ln58_4_fu_826_p1 <= bitcast_ln58_9_fu_822_p1(23 - 1 downto 0);
    trunc_ln58_5_fu_840_p1 <= bitcast_ln58_11_fu_836_p1(23 - 1 downto 0);
    trunc_ln58_6_fu_854_p1 <= bitcast_ln58_13_fu_850_p1(23 - 1 downto 0);
    trunc_ln58_7_fu_868_p1 <= bitcast_ln58_15_fu_864_p1(23 - 1 downto 0);
    trunc_ln58_8_fu_1196_p1 <= bitcast_ln58_fu_1182_p1(23 - 1 downto 0);
    trunc_ln58_9_fu_1300_p1 <= bitcast_ln58_2_fu_1287_p1(23 - 1 downto 0);
    trunc_ln58_fu_770_p1 <= bitcast_ln58_1_fu_766_p1(23 - 1 downto 0);
    trunc_ln63_1_fu_2098_p1 <= bitcast_ln63_1_fu_2085_p1(23 - 1 downto 0);
    trunc_ln63_fu_2081_p1 <= bitcast_ln63_fu_2068_p1(23 - 1 downto 0);
    zext_ln58_1_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_144_fu_928_p3),32));
    zext_ln58_2_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln58_3_fu_946_p2),32));
    zext_ln58_3_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln58_7_fu_1152_p2),32));
    zext_ln58_4_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln58_11_fu_1167_p2),32));
    zext_ln58_5_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln58_15_fu_1242_p2),32));
    zext_ln58_6_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln58_19_fu_1257_p2),32));
    zext_ln58_7_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln58_23_fu_1460_p2),32));
    zext_ln58_8_fu_1480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln58_27_fu_1475_p2),32));
    zext_ln58_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_908_p4),9));
    zext_ln63_1_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_1_fu_2165_p3),32));
    zext_ln63_fu_2162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_2273_pp0_iter13_reg),31));
end behav;
