-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity run is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 11;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of run is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "run_run,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=18.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.139999,HLS_SYN_LAT=33,HLS_SYN_TPT=none,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=8863,HLS_SYN_LUT=11250,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_25F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011111";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_29F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010011111";
    constant ap_const_lv32_2A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011011111";
    constant ap_const_lv32_2E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv288_lc_1 : STD_LOGIC_VECTOR (287 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inputAOV : STD_LOGIC_VECTOR (63 downto 0);
    signal accel_mode : STD_LOGIC_VECTOR (7 downto 0);
    signal trainedRegion_i : STD_LOGIC_VECTOR (767 downto 0);
    signal trainedRegion_o : STD_LOGIC_VECTOR (767 downto 0);
    signal IOCheckIdx : STD_LOGIC_VECTOR (7 downto 0);
    signal IORegionIdx : STD_LOGIC_VECTOR (7 downto 0);
    signal n_regions_in_i : STD_LOGIC_VECTOR (7 downto 0);
    signal n_regions_in_o : STD_LOGIC_VECTOR (7 downto 0);
    signal regions_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_ce0 : STD_LOGIC;
    signal regions_we0 : STD_LOGIC;
    signal regions_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_ce1 : STD_LOGIC;
    signal regions_we1 : STD_LOGIC;
    signal regions_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_ce0 : STD_LOGIC;
    signal regions_2_we0 : STD_LOGIC;
    signal regions_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_ce1 : STD_LOGIC;
    signal regions_2_we1 : STD_LOGIC;
    signal regions_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_ce0 : STD_LOGIC;
    signal regions_4_we0 : STD_LOGIC;
    signal regions_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_ce1 : STD_LOGIC;
    signal regions_4_we1 : STD_LOGIC;
    signal regions_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_ce0 : STD_LOGIC;
    signal regions_1_we0 : STD_LOGIC;
    signal regions_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_ce1 : STD_LOGIC;
    signal regions_1_we1 : STD_LOGIC;
    signal regions_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_ce0 : STD_LOGIC;
    signal regions_3_we0 : STD_LOGIC;
    signal regions_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_ce1 : STD_LOGIC;
    signal regions_3_we1 : STD_LOGIC;
    signal regions_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_ce0 : STD_LOGIC;
    signal regions_5_we0 : STD_LOGIC;
    signal regions_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_ce1 : STD_LOGIC;
    signal regions_5_we1 : STD_LOGIC;
    signal regions_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regions_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_regions_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal n_regions_V_ce0 : STD_LOGIC;
    signal n_regions_V_we0 : STD_LOGIC;
    signal n_regions_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal accel_mode_read_read_fu_260_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal inputAOV_read_reg_1970 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln647_fu_1186_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_1975 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln724_fu_1217_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln724_reg_1985 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln587_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_reg_2060 : STD_LOGIC_VECTOR (63 downto 0);
    signal regions_addr_2_reg_2065 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_addr_3_reg_2070 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_addr_4_reg_2075 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_addr_5_reg_2080 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_addr_6_reg_2085 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_addr_7_reg_2090 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_addr_10_reg_2095 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_addr_11_reg_2100 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_addr_12_reg_2105 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_addr_13_reg_2110 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_addr_14_reg_2115 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_1_addr_15_reg_2120 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_addr_2_reg_2125 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_addr_3_reg_2130 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_addr_4_reg_2135 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_addr_5_reg_2140 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_addr_6_reg_2145 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_2_addr_7_reg_2150 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_addr_10_reg_2155 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_addr_11_reg_2160 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_addr_12_reg_2165 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_addr_13_reg_2170 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_addr_14_reg_2175 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_3_addr_15_reg_2180 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_addr_2_reg_2185 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_addr_3_reg_2190 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_addr_4_reg_2195 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_addr_5_reg_2200 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_addr_6_reg_2205 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_4_addr_7_reg_2210 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_addr_10_reg_2215 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_addr_11_reg_2220 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_addr_12_reg_2225 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_addr_13_reg_2230 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_addr_14_reg_2235 : STD_LOGIC_VECTOR (11 downto 0);
    signal regions_5_addr_15_reg_2240 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln709_2_fu_1439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_2_reg_2245 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_3_fu_1453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_3_reg_2251 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_4_fu_1467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_4_reg_2257 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_5_fu_1481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_5_reg_2263 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_6_fu_1495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_6_reg_2269 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_7_fu_1509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_7_reg_2275 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_10_fu_1555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_10_reg_2281 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_11_fu_1569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_11_reg_2287 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_12_fu_1583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_12_reg_2293 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_13_fu_1597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_13_reg_2299 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_14_fu_1611_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_14_reg_2305 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_15_fu_1625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_15_reg_2311 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_18_fu_1671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_18_reg_2317 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_19_fu_1685_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_19_reg_2323 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_20_fu_1699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_20_reg_2329 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_21_fu_1713_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_21_reg_2335 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_22_fu_1727_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_22_reg_2341 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_23_fu_1741_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_23_reg_2347 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_1132_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_2413 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1141_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_2418 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1150_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_2423 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1159_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_2428 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1168_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_2433 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1177_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_2438 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_24_reg_2503 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_2508 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_2513 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_2518 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_2523 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_2528 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_26_reg_2593 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_2598 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_reg_2603 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_2608 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_reg_2613 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_reg_2618 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_outcomeInRam_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_outcomeInRam_ce0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_outcomeInRam_d0 : STD_LOGIC_VECTOR (287 downto 0);
    signal grp_runTestAfterInit_fu_1101_outcomeInRam_we0 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_runTestAfterInit_fu_1101_errorInTask_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runTestAfterInit_fu_1101_errorInTask_ce0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_errorInTask_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_runTestAfterInit_fu_1101_errorInTask_we0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_n_regions_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_runTestAfterInit_fu_1101_n_regions_V_ce0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_n_regions_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_runTestAfterInit_fu_1101_n_regions_V_we0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_n_regions_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_runTestAfterInit_fu_1101_n_regions_V_ce1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_n_regions_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_runTestAfterInit_fu_1101_n_regions_V_we1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_ce0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_we0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_ce1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_we1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_1_ce0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_1_we0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_1_ce1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_1_we1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_2_ce0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_2_we0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_2_ce1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_2_we1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_3_ce0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_3_we0 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_3_ce1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_regions_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runTestAfterInit_fu_1101_regions_3_we1 : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_ap_start : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_ap_done : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_ap_ready : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_ap_idle : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_ap_continue : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal grp_runTestAfterInit_fu_1101_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_sync_grp_runTestAfterInit_fu_1101_ap_ready : STD_LOGIC;
    signal ap_sync_grp_runTestAfterInit_fu_1101_ap_done : STD_LOGIC;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_done : STD_LOGIC := '0';
    signal zext_ln724_2_fu_1223_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln724_3_fu_1239_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_1_fu_1190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_2_fu_1291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_3_fu_1307_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_4_fu_1323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_5_fu_1339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_6_fu_1355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_7_fu_1371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_8_fu_1387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln709_9_fu_1403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln724_4_fu_1750_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln724_5_fu_1765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln724_6_fu_1780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln724_7_fu_1795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln724_8_fu_1810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln724_9_fu_1825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal n_regions_in_o_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal bitcast_ln709_fu_1269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_1_fu_1423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal bitcast_ln709_8_fu_1523_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_9_fu_1539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_16_fu_1639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_17_fu_1655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_1195_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1122_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln724_fu_1203_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln724_1_fu_1207_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln724_fu_1211_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln724_fu_1233_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_1253_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln709_fu_1265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln709_fu_1261_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln709_1_fu_1275_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln709_fu_1279_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln709_fu_1285_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln709_fu_1301_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln709_1_fu_1317_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln709_2_fu_1333_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln709_3_fu_1349_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln709_4_fu_1365_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln709_5_fu_1381_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln709_6_fu_1397_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_1413_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1429_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1443_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1457_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1471_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1485_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1499_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_1513_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1529_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1545_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1559_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1573_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1587_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_1601_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_1615_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_1629_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_1645_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_1661_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1675_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1689_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_1703_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1717_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1731_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln724_1_fu_1745_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln724_2_fu_1760_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln724_3_fu_1775_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln724_4_fu_1790_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln724_5_fu_1805_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln724_6_fu_1820_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln724_23_fu_1909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_22_fu_1905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_21_fu_1902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_20_fu_1899_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_19_fu_1896_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_18_fu_1893_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_17_fu_1890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_16_fu_1887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_15_fu_1883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_14_fu_1879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_13_fu_1876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_12_fu_1873_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_11_fu_1870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_10_fu_1867_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_9_fu_1864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_8_fu_1861_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_7_fu_1857_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_6_fu_1853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_5_fu_1850_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_4_fu_1847_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_3_fu_1844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_2_fu_1841_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_1_fu_1838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln724_fu_1835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component run_runTestAfterInit IS
    port (
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        inputAOV : IN STD_LOGIC_VECTOR (63 downto 0);
        outcomeInRam_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outcomeInRam_ce0 : OUT STD_LOGIC;
        outcomeInRam_d0 : OUT STD_LOGIC_VECTOR (287 downto 0);
        outcomeInRam_q0 : IN STD_LOGIC_VECTOR (287 downto 0);
        outcomeInRam_we0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        errorInTask_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        errorInTask_ce0 : OUT STD_LOGIC;
        errorInTask_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        errorInTask_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        errorInTask_we0 : OUT STD_LOGIC;
        n_regions_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        n_regions_V_ce0 : OUT STD_LOGIC;
        n_regions_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_regions_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        n_regions_V_we0 : OUT STD_LOGIC;
        n_regions_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        n_regions_V_ce1 : OUT STD_LOGIC;
        n_regions_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_regions_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        n_regions_V_we1 : OUT STD_LOGIC;
        regions_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_ce0 : OUT STD_LOGIC;
        regions_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_we0 : OUT STD_LOGIC;
        regions_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_ce1 : OUT STD_LOGIC;
        regions_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_we1 : OUT STD_LOGIC;
        regions_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_1_ce0 : OUT STD_LOGIC;
        regions_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_1_we0 : OUT STD_LOGIC;
        regions_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_1_ce1 : OUT STD_LOGIC;
        regions_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_1_we1 : OUT STD_LOGIC;
        regions_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_2_ce0 : OUT STD_LOGIC;
        regions_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_2_we0 : OUT STD_LOGIC;
        regions_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_2_ce1 : OUT STD_LOGIC;
        regions_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_2_we1 : OUT STD_LOGIC;
        regions_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_3_ce0 : OUT STD_LOGIC;
        regions_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_3_we0 : OUT STD_LOGIC;
        regions_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_3_ce1 : OUT STD_LOGIC;
        regions_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_3_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        inputAOV_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component run_mux_21_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_regions_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_n_regions_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component run_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        errorInTask_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        errorInTask_ce0 : IN STD_LOGIC;
        errorInTask_we0 : IN STD_LOGIC;
        errorInTask_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        inputAOV : OUT STD_LOGIC_VECTOR (63 downto 0);
        accel_mode : OUT STD_LOGIC_VECTOR (7 downto 0);
        trainedRegion_i : OUT STD_LOGIC_VECTOR (767 downto 0);
        trainedRegion_o : IN STD_LOGIC_VECTOR (767 downto 0);
        IOCheckIdx : OUT STD_LOGIC_VECTOR (7 downto 0);
        IORegionIdx : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_regions_in_o : IN STD_LOGIC_VECTOR (7 downto 0);
        n_regions_in_i : OUT STD_LOGIC_VECTOR (7 downto 0);
        outcomeInRam_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        outcomeInRam_ce0 : IN STD_LOGIC;
        outcomeInRam_we0 : IN STD_LOGIC_VECTOR (35 downto 0);
        outcomeInRam_d0 : IN STD_LOGIC_VECTOR (287 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component run_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    regions_U : component run_regions_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => regions_address0,
        ce0 => regions_ce0,
        we0 => regions_we0,
        d0 => regions_d0,
        q0 => regions_q0,
        address1 => regions_address1,
        ce1 => regions_ce1,
        we1 => regions_we1,
        d1 => regions_d1,
        q1 => regions_q1);

    regions_2_U : component run_regions_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => regions_2_address0,
        ce0 => regions_2_ce0,
        we0 => regions_2_we0,
        d0 => regions_2_d0,
        q0 => regions_2_q0,
        address1 => regions_2_address1,
        ce1 => regions_2_ce1,
        we1 => regions_2_we1,
        d1 => regions_2_d1,
        q1 => regions_2_q1);

    regions_4_U : component run_regions_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => regions_4_address0,
        ce0 => regions_4_ce0,
        we0 => regions_4_we0,
        d0 => regions_4_d0,
        q0 => regions_4_q0,
        address1 => regions_4_address1,
        ce1 => regions_4_ce1,
        we1 => regions_4_we1,
        d1 => regions_4_d1,
        q1 => regions_4_q1);

    regions_1_U : component run_regions_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => regions_1_address0,
        ce0 => regions_1_ce0,
        we0 => regions_1_we0,
        d0 => regions_1_d0,
        q0 => regions_1_q0,
        address1 => regions_1_address1,
        ce1 => regions_1_ce1,
        we1 => regions_1_we1,
        d1 => regions_1_d1,
        q1 => regions_1_q1);

    regions_3_U : component run_regions_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => regions_3_address0,
        ce0 => regions_3_ce0,
        we0 => regions_3_we0,
        d0 => regions_3_d0,
        q0 => regions_3_q0,
        address1 => regions_3_address1,
        ce1 => regions_3_ce1,
        we1 => regions_3_we1,
        d1 => regions_3_d1,
        q1 => regions_3_q1);

    regions_5_U : component run_regions_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => regions_5_address0,
        ce0 => regions_5_ce0,
        we0 => regions_5_we0,
        d0 => regions_5_d0,
        q0 => regions_5_q0,
        address1 => regions_5_address1,
        ce1 => regions_5_ce1,
        we1 => regions_5_we1,
        d1 => regions_5_d1,
        q1 => regions_5_q1);

    n_regions_V_U : component run_n_regions_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => n_regions_V_address0,
        ce0 => n_regions_V_ce0,
        we0 => n_regions_V_we0,
        d0 => n_regions_in_i,
        q0 => n_regions_V_q0);

    grp_runTestAfterInit_fu_1101 : component run_runTestAfterInit
    port map (
        m_axi_gmem_AWVALID => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_runTestAfterInit_fu_1101_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_runTestAfterInit_fu_1101_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_runTestAfterInit_fu_1101_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_runTestAfterInit_fu_1101_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_runTestAfterInit_fu_1101_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_runTestAfterInit_fu_1101_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_runTestAfterInit_fu_1101_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_runTestAfterInit_fu_1101_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_runTestAfterInit_fu_1101_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        inputAOV => inputAOV_read_reg_1970,
        outcomeInRam_address0 => grp_runTestAfterInit_fu_1101_outcomeInRam_address0,
        outcomeInRam_ce0 => grp_runTestAfterInit_fu_1101_outcomeInRam_ce0,
        outcomeInRam_d0 => grp_runTestAfterInit_fu_1101_outcomeInRam_d0,
        outcomeInRam_q0 => ap_const_lv288_lc_1,
        outcomeInRam_we0 => grp_runTestAfterInit_fu_1101_outcomeInRam_we0,
        errorInTask_address0 => grp_runTestAfterInit_fu_1101_errorInTask_address0,
        errorInTask_ce0 => grp_runTestAfterInit_fu_1101_errorInTask_ce0,
        errorInTask_d0 => grp_runTestAfterInit_fu_1101_errorInTask_d0,
        errorInTask_q0 => ap_const_lv8_0,
        errorInTask_we0 => grp_runTestAfterInit_fu_1101_errorInTask_we0,
        n_regions_V_address0 => grp_runTestAfterInit_fu_1101_n_regions_V_address0,
        n_regions_V_ce0 => grp_runTestAfterInit_fu_1101_n_regions_V_ce0,
        n_regions_V_d0 => grp_runTestAfterInit_fu_1101_n_regions_V_d0,
        n_regions_V_q0 => n_regions_V_q0,
        n_regions_V_we0 => grp_runTestAfterInit_fu_1101_n_regions_V_we0,
        n_regions_V_address1 => grp_runTestAfterInit_fu_1101_n_regions_V_address1,
        n_regions_V_ce1 => grp_runTestAfterInit_fu_1101_n_regions_V_ce1,
        n_regions_V_d1 => grp_runTestAfterInit_fu_1101_n_regions_V_d1,
        n_regions_V_q1 => ap_const_lv8_0,
        n_regions_V_we1 => grp_runTestAfterInit_fu_1101_n_regions_V_we1,
        regions_address0 => grp_runTestAfterInit_fu_1101_regions_address0,
        regions_ce0 => grp_runTestAfterInit_fu_1101_regions_ce0,
        regions_d0 => grp_runTestAfterInit_fu_1101_regions_d0,
        regions_q0 => regions_q0,
        regions_we0 => grp_runTestAfterInit_fu_1101_regions_we0,
        regions_address1 => grp_runTestAfterInit_fu_1101_regions_address1,
        regions_ce1 => grp_runTestAfterInit_fu_1101_regions_ce1,
        regions_d1 => grp_runTestAfterInit_fu_1101_regions_d1,
        regions_q1 => ap_const_lv32_0,
        regions_we1 => grp_runTestAfterInit_fu_1101_regions_we1,
        regions_1_address0 => grp_runTestAfterInit_fu_1101_regions_1_address0,
        regions_1_ce0 => grp_runTestAfterInit_fu_1101_regions_1_ce0,
        regions_1_d0 => grp_runTestAfterInit_fu_1101_regions_1_d0,
        regions_1_q0 => regions_1_q0,
        regions_1_we0 => grp_runTestAfterInit_fu_1101_regions_1_we0,
        regions_1_address1 => grp_runTestAfterInit_fu_1101_regions_1_address1,
        regions_1_ce1 => grp_runTestAfterInit_fu_1101_regions_1_ce1,
        regions_1_d1 => grp_runTestAfterInit_fu_1101_regions_1_d1,
        regions_1_q1 => ap_const_lv32_0,
        regions_1_we1 => grp_runTestAfterInit_fu_1101_regions_1_we1,
        regions_2_address0 => grp_runTestAfterInit_fu_1101_regions_2_address0,
        regions_2_ce0 => grp_runTestAfterInit_fu_1101_regions_2_ce0,
        regions_2_d0 => grp_runTestAfterInit_fu_1101_regions_2_d0,
        regions_2_q0 => regions_2_q0,
        regions_2_we0 => grp_runTestAfterInit_fu_1101_regions_2_we0,
        regions_2_address1 => grp_runTestAfterInit_fu_1101_regions_2_address1,
        regions_2_ce1 => grp_runTestAfterInit_fu_1101_regions_2_ce1,
        regions_2_d1 => grp_runTestAfterInit_fu_1101_regions_2_d1,
        regions_2_q1 => ap_const_lv32_0,
        regions_2_we1 => grp_runTestAfterInit_fu_1101_regions_2_we1,
        regions_3_address0 => grp_runTestAfterInit_fu_1101_regions_3_address0,
        regions_3_ce0 => grp_runTestAfterInit_fu_1101_regions_3_ce0,
        regions_3_d0 => grp_runTestAfterInit_fu_1101_regions_3_d0,
        regions_3_q0 => regions_3_q0,
        regions_3_we0 => grp_runTestAfterInit_fu_1101_regions_3_we0,
        regions_3_address1 => grp_runTestAfterInit_fu_1101_regions_3_address1,
        regions_3_ce1 => grp_runTestAfterInit_fu_1101_regions_3_ce1,
        regions_3_d1 => grp_runTestAfterInit_fu_1101_regions_3_d1,
        regions_3_q1 => ap_const_lv32_0,
        regions_3_we1 => grp_runTestAfterInit_fu_1101_regions_3_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        inputAOV_ap_vld => ap_const_logic_1,
        ap_start => grp_runTestAfterInit_fu_1101_ap_start,
        ap_done => grp_runTestAfterInit_fu_1101_ap_done,
        ap_ready => grp_runTestAfterInit_fu_1101_ap_ready,
        ap_idle => grp_runTestAfterInit_fu_1101_ap_idle,
        ap_continue => grp_runTestAfterInit_fu_1101_ap_continue);

    control_s_axi_U : component run_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        errorInTask_address0 => grp_runTestAfterInit_fu_1101_errorInTask_address0,
        errorInTask_ce0 => grp_runTestAfterInit_fu_1101_errorInTask_ce0,
        errorInTask_we0 => grp_runTestAfterInit_fu_1101_errorInTask_we0,
        errorInTask_d0 => grp_runTestAfterInit_fu_1101_errorInTask_d0,
        inputAOV => inputAOV,
        accel_mode => accel_mode,
        trainedRegion_i => trainedRegion_i,
        trainedRegion_o => trainedRegion_o,
        IOCheckIdx => IOCheckIdx,
        IORegionIdx => IORegionIdx,
        n_regions_in_o => n_regions_in_o,
        n_regions_in_i => n_regions_in_i,
        outcomeInRam_address0 => grp_runTestAfterInit_fu_1101_outcomeInRam_address0,
        outcomeInRam_ce0 => grp_runTestAfterInit_fu_1101_outcomeInRam_ce0,
        outcomeInRam_we0 => grp_runTestAfterInit_fu_1101_outcomeInRam_we0,
        outcomeInRam_d0 => grp_runTestAfterInit_fu_1101_outcomeInRam_d0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component run_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_DW => 512,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARADDR,
        I_ARLEN => grp_runTestAfterInit_fu_1101_m_axi_gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem_BVALID,
        I_BREADY => ap_const_logic_0);

    mux_21_32_1_1_U132 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_q1,
        din1 => regions_1_q1,
        din2 => trunc_ln647_reg_1975,
        dout => grp_fu_1132_p4);

    mux_21_32_1_1_U133 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_q0,
        din1 => regions_1_q0,
        din2 => trunc_ln647_reg_1975,
        dout => grp_fu_1141_p4);

    mux_21_32_1_1_U134 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_2_q1,
        din1 => regions_3_q1,
        din2 => trunc_ln647_reg_1975,
        dout => grp_fu_1150_p4);

    mux_21_32_1_1_U135 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_2_q0,
        din1 => regions_3_q0,
        din2 => trunc_ln647_reg_1975,
        dout => grp_fu_1159_p4);

    mux_21_32_1_1_U136 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_4_q1,
        din1 => regions_5_q1,
        din2 => trunc_ln647_reg_1975,
        dout => grp_fu_1168_p4);

    mux_21_32_1_1_U137 : component run_mux_21_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => regions_4_q0,
        din1 => regions_5_q0,
        din2 => trunc_ln647_reg_1975,
        dout => grp_fu_1177_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_done <= ap_const_logic_0;
                elsif ((grp_runTestAfterInit_fu_1101_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_ready <= ap_const_logic_0;
                elsif ((grp_runTestAfterInit_fu_1101_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_runTestAfterInit_fu_1101_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runTestAfterInit_fu_1101_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_lv8_3 = accel_mode) and (ap_sync_grp_runTestAfterInit_fu_1101_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_runTestAfterInit_fu_1101_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runTestAfterInit_fu_1101_ap_ready = ap_const_logic_1)) then 
                    grp_runTestAfterInit_fu_1101_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    n_regions_in_o_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                n_regions_in_o_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    n_regions_in_o_preg <= n_regions_V_q0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                bitcast_ln709_10_reg_2281 <= bitcast_ln709_10_fu_1555_p1;
                bitcast_ln709_11_reg_2287 <= bitcast_ln709_11_fu_1569_p1;
                bitcast_ln709_12_reg_2293 <= bitcast_ln709_12_fu_1583_p1;
                bitcast_ln709_13_reg_2299 <= bitcast_ln709_13_fu_1597_p1;
                bitcast_ln709_14_reg_2305 <= bitcast_ln709_14_fu_1611_p1;
                bitcast_ln709_15_reg_2311 <= bitcast_ln709_15_fu_1625_p1;
                bitcast_ln709_18_reg_2317 <= bitcast_ln709_18_fu_1671_p1;
                bitcast_ln709_19_reg_2323 <= bitcast_ln709_19_fu_1685_p1;
                bitcast_ln709_20_reg_2329 <= bitcast_ln709_20_fu_1699_p1;
                bitcast_ln709_21_reg_2335 <= bitcast_ln709_21_fu_1713_p1;
                bitcast_ln709_22_reg_2341 <= bitcast_ln709_22_fu_1727_p1;
                bitcast_ln709_23_reg_2347 <= bitcast_ln709_23_fu_1741_p1;
                bitcast_ln709_2_reg_2245 <= bitcast_ln709_2_fu_1439_p1;
                bitcast_ln709_3_reg_2251 <= bitcast_ln709_3_fu_1453_p1;
                bitcast_ln709_4_reg_2257 <= bitcast_ln709_4_fu_1467_p1;
                bitcast_ln709_5_reg_2263 <= bitcast_ln709_5_fu_1481_p1;
                bitcast_ln709_6_reg_2269 <= bitcast_ln709_6_fu_1495_p1;
                bitcast_ln709_7_reg_2275 <= bitcast_ln709_7_fu_1509_p1;
                    regions_1_addr_10_reg_2095(11 downto 3) <= zext_ln709_4_fu_1323_p1(12 - 1 downto 0)(11 downto 3);
                    regions_1_addr_11_reg_2100(11 downto 3) <= zext_ln709_5_fu_1339_p1(12 - 1 downto 0)(11 downto 3);
                    regions_1_addr_12_reg_2105(11 downto 3) <= zext_ln709_6_fu_1355_p1(12 - 1 downto 0)(11 downto 3);
                    regions_1_addr_13_reg_2110(11 downto 3) <= zext_ln709_7_fu_1371_p1(12 - 1 downto 0)(11 downto 3);
                    regions_1_addr_14_reg_2115(11 downto 3) <= zext_ln709_8_fu_1387_p1(12 - 1 downto 0)(11 downto 3);
                    regions_1_addr_15_reg_2120(11 downto 3) <= zext_ln709_9_fu_1403_p1(12 - 1 downto 0)(11 downto 3);
                    regions_2_addr_2_reg_2125(11 downto 3) <= zext_ln709_4_fu_1323_p1(12 - 1 downto 0)(11 downto 3);
                    regions_2_addr_3_reg_2130(11 downto 3) <= zext_ln709_5_fu_1339_p1(12 - 1 downto 0)(11 downto 3);
                    regions_2_addr_4_reg_2135(11 downto 3) <= zext_ln709_6_fu_1355_p1(12 - 1 downto 0)(11 downto 3);
                    regions_2_addr_5_reg_2140(11 downto 3) <= zext_ln709_7_fu_1371_p1(12 - 1 downto 0)(11 downto 3);
                    regions_2_addr_6_reg_2145(11 downto 3) <= zext_ln709_8_fu_1387_p1(12 - 1 downto 0)(11 downto 3);
                    regions_2_addr_7_reg_2150(11 downto 3) <= zext_ln709_9_fu_1403_p1(12 - 1 downto 0)(11 downto 3);
                    regions_3_addr_10_reg_2155(11 downto 3) <= zext_ln709_4_fu_1323_p1(12 - 1 downto 0)(11 downto 3);
                    regions_3_addr_11_reg_2160(11 downto 3) <= zext_ln709_5_fu_1339_p1(12 - 1 downto 0)(11 downto 3);
                    regions_3_addr_12_reg_2165(11 downto 3) <= zext_ln709_6_fu_1355_p1(12 - 1 downto 0)(11 downto 3);
                    regions_3_addr_13_reg_2170(11 downto 3) <= zext_ln709_7_fu_1371_p1(12 - 1 downto 0)(11 downto 3);
                    regions_3_addr_14_reg_2175(11 downto 3) <= zext_ln709_8_fu_1387_p1(12 - 1 downto 0)(11 downto 3);
                    regions_3_addr_15_reg_2180(11 downto 3) <= zext_ln709_9_fu_1403_p1(12 - 1 downto 0)(11 downto 3);
                    regions_4_addr_2_reg_2185(11 downto 3) <= zext_ln709_4_fu_1323_p1(12 - 1 downto 0)(11 downto 3);
                    regions_4_addr_3_reg_2190(11 downto 3) <= zext_ln709_5_fu_1339_p1(12 - 1 downto 0)(11 downto 3);
                    regions_4_addr_4_reg_2195(11 downto 3) <= zext_ln709_6_fu_1355_p1(12 - 1 downto 0)(11 downto 3);
                    regions_4_addr_5_reg_2200(11 downto 3) <= zext_ln709_7_fu_1371_p1(12 - 1 downto 0)(11 downto 3);
                    regions_4_addr_6_reg_2205(11 downto 3) <= zext_ln709_8_fu_1387_p1(12 - 1 downto 0)(11 downto 3);
                    regions_4_addr_7_reg_2210(11 downto 3) <= zext_ln709_9_fu_1403_p1(12 - 1 downto 0)(11 downto 3);
                    regions_5_addr_10_reg_2215(11 downto 3) <= zext_ln709_4_fu_1323_p1(12 - 1 downto 0)(11 downto 3);
                    regions_5_addr_11_reg_2220(11 downto 3) <= zext_ln709_5_fu_1339_p1(12 - 1 downto 0)(11 downto 3);
                    regions_5_addr_12_reg_2225(11 downto 3) <= zext_ln709_6_fu_1355_p1(12 - 1 downto 0)(11 downto 3);
                    regions_5_addr_13_reg_2230(11 downto 3) <= zext_ln709_7_fu_1371_p1(12 - 1 downto 0)(11 downto 3);
                    regions_5_addr_14_reg_2235(11 downto 3) <= zext_ln709_8_fu_1387_p1(12 - 1 downto 0)(11 downto 3);
                    regions_5_addr_15_reg_2240(11 downto 3) <= zext_ln709_9_fu_1403_p1(12 - 1 downto 0)(11 downto 3);
                    regions_addr_2_reg_2065(11 downto 3) <= zext_ln709_4_fu_1323_p1(12 - 1 downto 0)(11 downto 3);
                    regions_addr_3_reg_2070(11 downto 3) <= zext_ln709_5_fu_1339_p1(12 - 1 downto 0)(11 downto 3);
                    regions_addr_4_reg_2075(11 downto 3) <= zext_ln709_6_fu_1355_p1(12 - 1 downto 0)(11 downto 3);
                    regions_addr_5_reg_2080(11 downto 3) <= zext_ln709_7_fu_1371_p1(12 - 1 downto 0)(11 downto 3);
                    regions_addr_6_reg_2085(11 downto 3) <= zext_ln709_8_fu_1387_p1(12 - 1 downto 0)(11 downto 3);
                    regions_addr_7_reg_2090(11 downto 3) <= zext_ln709_9_fu_1403_p1(12 - 1 downto 0)(11 downto 3);
                    zext_ln587_reg_2060(7 downto 0) <= zext_ln587_fu_1249_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                inputAOV_read_reg_1970 <= inputAOV;
                trunc_ln647_reg_1975 <= trunc_ln647_fu_1186_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    shl_ln724_reg_1985(11 downto 3) <= shl_ln724_fu_1217_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_22_reg_2413 <= grp_fu_1132_p4;
                tmp_23_reg_2418 <= grp_fu_1141_p4;
                tmp_30_reg_2423 <= grp_fu_1150_p4;
                tmp_31_reg_2428 <= grp_fu_1159_p4;
                tmp_38_reg_2433 <= grp_fu_1168_p4;
                tmp_39_reg_2438 <= grp_fu_1177_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tmp_24_reg_2503 <= grp_fu_1132_p4;
                tmp_25_reg_2508 <= grp_fu_1141_p4;
                tmp_32_reg_2513 <= grp_fu_1150_p4;
                tmp_33_reg_2518 <= grp_fu_1159_p4;
                tmp_40_reg_2523 <= grp_fu_1168_p4;
                tmp_41_reg_2528 <= grp_fu_1177_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_26_reg_2593 <= grp_fu_1132_p4;
                tmp_27_reg_2598 <= grp_fu_1141_p4;
                tmp_34_reg_2603 <= grp_fu_1150_p4;
                tmp_35_reg_2608 <= grp_fu_1159_p4;
                tmp_42_reg_2613 <= grp_fu_1168_p4;
                tmp_43_reg_2618 <= grp_fu_1177_p4;
            end if;
        end if;
    end process;
    shl_ln724_reg_1985(2 downto 0) <= "000";
    zext_ln587_reg_2060(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    regions_addr_2_reg_2065(2 downto 0) <= "010";
    regions_addr_3_reg_2070(2 downto 0) <= "011";
    regions_addr_4_reg_2075(2 downto 0) <= "100";
    regions_addr_5_reg_2080(2 downto 0) <= "101";
    regions_addr_6_reg_2085(2 downto 0) <= "110";
    regions_addr_7_reg_2090(2 downto 0) <= "111";
    regions_1_addr_10_reg_2095(2 downto 0) <= "010";
    regions_1_addr_11_reg_2100(2 downto 0) <= "011";
    regions_1_addr_12_reg_2105(2 downto 0) <= "100";
    regions_1_addr_13_reg_2110(2 downto 0) <= "101";
    regions_1_addr_14_reg_2115(2 downto 0) <= "110";
    regions_1_addr_15_reg_2120(2 downto 0) <= "111";
    regions_2_addr_2_reg_2125(2 downto 0) <= "010";
    regions_2_addr_3_reg_2130(2 downto 0) <= "011";
    regions_2_addr_4_reg_2135(2 downto 0) <= "100";
    regions_2_addr_5_reg_2140(2 downto 0) <= "101";
    regions_2_addr_6_reg_2145(2 downto 0) <= "110";
    regions_2_addr_7_reg_2150(2 downto 0) <= "111";
    regions_3_addr_10_reg_2155(2 downto 0) <= "010";
    regions_3_addr_11_reg_2160(2 downto 0) <= "011";
    regions_3_addr_12_reg_2165(2 downto 0) <= "100";
    regions_3_addr_13_reg_2170(2 downto 0) <= "101";
    regions_3_addr_14_reg_2175(2 downto 0) <= "110";
    regions_3_addr_15_reg_2180(2 downto 0) <= "111";
    regions_4_addr_2_reg_2185(2 downto 0) <= "010";
    regions_4_addr_3_reg_2190(2 downto 0) <= "011";
    regions_4_addr_4_reg_2195(2 downto 0) <= "100";
    regions_4_addr_5_reg_2200(2 downto 0) <= "101";
    regions_4_addr_6_reg_2205(2 downto 0) <= "110";
    regions_4_addr_7_reg_2210(2 downto 0) <= "111";
    regions_5_addr_10_reg_2215(2 downto 0) <= "010";
    regions_5_addr_11_reg_2220(2 downto 0) <= "011";
    regions_5_addr_12_reg_2225(2 downto 0) <= "100";
    regions_5_addr_13_reg_2230(2 downto 0) <= "101";
    regions_5_addr_14_reg_2235(2 downto 0) <= "110";
    regions_5_addr_15_reg_2240(2 downto 0) <= "111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not((ap_const_lv8_3 = accel_mode)) and not((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2)) and not((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2)) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_lv8_3 = accel_mode) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2)) and not((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2)) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    accel_mode_read_read_fu_260_p2 <= accel_mode;
    add_ln709_fu_1279_p2 <= std_logic_vector(unsigned(zext_ln709_fu_1261_p1) + unsigned(zext_ln709_1_fu_1275_p1));
    add_ln724_fu_1211_p2 <= std_logic_vector(unsigned(zext_ln724_fu_1203_p1) + unsigned(zext_ln724_1_fu_1207_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state3_on_subcall_done_assign_proc : process(accel_mode, ap_sync_grp_runTestAfterInit_fu_1101_ap_ready, ap_sync_grp_runTestAfterInit_fu_1101_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((ap_const_lv8_3 = accel_mode) and ((ap_sync_grp_runTestAfterInit_fu_1101_ap_ready and ap_sync_grp_runTestAfterInit_fu_1101_ap_done) = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_runTestAfterInit_fu_1101_ap_done <= (grp_runTestAfterInit_fu_1101_ap_done or ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_done);
    ap_sync_grp_runTestAfterInit_fu_1101_ap_ready <= (grp_runTestAfterInit_fu_1101_ap_ready or ap_sync_reg_grp_runTestAfterInit_fu_1101_ap_ready);
    bitcast_ln709_10_fu_1555_p1 <= tmp_55_fu_1545_p4;
    bitcast_ln709_11_fu_1569_p1 <= tmp_56_fu_1559_p4;
    bitcast_ln709_12_fu_1583_p1 <= tmp_57_fu_1573_p4;
    bitcast_ln709_13_fu_1597_p1 <= tmp_58_fu_1587_p4;
    bitcast_ln709_14_fu_1611_p1 <= tmp_59_fu_1601_p4;
    bitcast_ln709_15_fu_1625_p1 <= tmp_60_fu_1615_p4;
    bitcast_ln709_16_fu_1639_p1 <= tmp_61_fu_1629_p4;
    bitcast_ln709_17_fu_1655_p1 <= tmp_62_fu_1645_p4;
    bitcast_ln709_18_fu_1671_p1 <= tmp_63_fu_1661_p4;
    bitcast_ln709_19_fu_1685_p1 <= tmp_64_fu_1675_p4;
    bitcast_ln709_1_fu_1423_p1 <= tmp_fu_1413_p4;
    bitcast_ln709_20_fu_1699_p1 <= tmp_65_fu_1689_p4;
    bitcast_ln709_21_fu_1713_p1 <= tmp_66_fu_1703_p4;
    bitcast_ln709_22_fu_1727_p1 <= tmp_67_fu_1717_p4;
    bitcast_ln709_23_fu_1741_p1 <= tmp_68_fu_1731_p4;
    bitcast_ln709_2_fu_1439_p1 <= tmp_46_fu_1429_p4;
    bitcast_ln709_3_fu_1453_p1 <= tmp_47_fu_1443_p4;
    bitcast_ln709_4_fu_1467_p1 <= tmp_48_fu_1457_p4;
    bitcast_ln709_5_fu_1481_p1 <= tmp_50_fu_1471_p4;
    bitcast_ln709_6_fu_1495_p1 <= tmp_51_fu_1485_p4;
    bitcast_ln709_7_fu_1509_p1 <= tmp_52_fu_1499_p4;
    bitcast_ln709_8_fu_1523_p1 <= tmp_53_fu_1513_p4;
    bitcast_ln709_9_fu_1539_p1 <= tmp_54_fu_1529_p4;
    bitcast_ln709_fu_1269_p1 <= trunc_ln709_fu_1265_p1;
    bitcast_ln724_10_fu_1867_p1 <= tmp_32_reg_2513;
    bitcast_ln724_11_fu_1870_p1 <= tmp_33_reg_2518;
    bitcast_ln724_12_fu_1873_p1 <= tmp_34_reg_2603;
    bitcast_ln724_13_fu_1876_p1 <= tmp_35_reg_2608;
    bitcast_ln724_14_fu_1879_p1 <= grp_fu_1150_p4;
    bitcast_ln724_15_fu_1883_p1 <= grp_fu_1159_p4;
    bitcast_ln724_16_fu_1887_p1 <= tmp_38_reg_2433;
    bitcast_ln724_17_fu_1890_p1 <= tmp_39_reg_2438;
    bitcast_ln724_18_fu_1893_p1 <= tmp_40_reg_2523;
    bitcast_ln724_19_fu_1896_p1 <= tmp_41_reg_2528;
    bitcast_ln724_1_fu_1838_p1 <= tmp_23_reg_2418;
    bitcast_ln724_20_fu_1899_p1 <= tmp_42_reg_2613;
    bitcast_ln724_21_fu_1902_p1 <= tmp_43_reg_2618;
    bitcast_ln724_22_fu_1905_p1 <= grp_fu_1168_p4;
    bitcast_ln724_23_fu_1909_p1 <= grp_fu_1177_p4;
    bitcast_ln724_2_fu_1841_p1 <= tmp_24_reg_2503;
    bitcast_ln724_3_fu_1844_p1 <= tmp_25_reg_2508;
    bitcast_ln724_4_fu_1847_p1 <= tmp_26_reg_2593;
    bitcast_ln724_5_fu_1850_p1 <= tmp_27_reg_2598;
    bitcast_ln724_6_fu_1853_p1 <= grp_fu_1132_p4;
    bitcast_ln724_7_fu_1857_p1 <= grp_fu_1141_p4;
    bitcast_ln724_8_fu_1861_p1 <= tmp_30_reg_2423;
    bitcast_ln724_9_fu_1864_p1 <= tmp_31_reg_2428;
    bitcast_ln724_fu_1835_p1 <= tmp_22_reg_2413;

    gmem_ARVALID_assign_proc : process(accel_mode, grp_runTestAfterInit_fu_1101_m_axi_gmem_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            gmem_ARVALID <= grp_runTestAfterInit_fu_1101_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(accel_mode, grp_runTestAfterInit_fu_1101_m_axi_gmem_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            gmem_RREADY <= grp_runTestAfterInit_fu_1101_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1122_p4 <= IORegionIdx(7 downto 1);

    grp_runTestAfterInit_fu_1101_ap_continue_assign_proc : process(accel_mode, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_runTestAfterInit_fu_1101_ap_continue <= ap_const_logic_1;
        else 
            grp_runTestAfterInit_fu_1101_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_runTestAfterInit_fu_1101_ap_start <= grp_runTestAfterInit_fu_1101_ap_start_reg;

    n_regions_V_address0_assign_proc : process(ap_CS_fsm_state1, accel_mode, zext_ln587_reg_2060, grp_runTestAfterInit_fu_1101_n_regions_V_address0, ap_CS_fsm_state3, zext_ln587_1_fu_1190_p1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            n_regions_V_address0 <= zext_ln587_reg_2060(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            n_regions_V_address0 <= zext_ln587_1_fu_1190_p1(6 - 1 downto 0);
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            n_regions_V_address0 <= grp_runTestAfterInit_fu_1101_n_regions_V_address0;
        else 
            n_regions_V_address0 <= "XXXXXX";
        end if; 
    end process;


    n_regions_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode, grp_runTestAfterInit_fu_1101_n_regions_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            n_regions_V_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            n_regions_V_ce0 <= grp_runTestAfterInit_fu_1101_n_regions_V_ce0;
        else 
            n_regions_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    n_regions_V_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            n_regions_V_we0 <= ap_const_logic_1;
        else 
            n_regions_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    n_regions_in_o_assign_proc : process(n_regions_V_q0, ap_CS_fsm_state4, n_regions_in_o_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            n_regions_in_o <= n_regions_V_q0;
        else 
            n_regions_in_o <= n_regions_in_o_preg;
        end if; 
    end process;

    or_ln709_1_fu_1317_p2 <= (shl_ln709_fu_1285_p2 or ap_const_lv12_2);
    or_ln709_2_fu_1333_p2 <= (shl_ln709_fu_1285_p2 or ap_const_lv12_3);
    or_ln709_3_fu_1349_p2 <= (shl_ln709_fu_1285_p2 or ap_const_lv12_4);
    or_ln709_4_fu_1365_p2 <= (shl_ln709_fu_1285_p2 or ap_const_lv12_5);
    or_ln709_5_fu_1381_p2 <= (shl_ln709_fu_1285_p2 or ap_const_lv12_6);
    or_ln709_6_fu_1397_p2 <= (shl_ln709_fu_1285_p2 or ap_const_lv12_7);
    or_ln709_fu_1301_p2 <= (shl_ln709_fu_1285_p2 or ap_const_lv12_1);
    or_ln724_1_fu_1745_p2 <= (shl_ln724_reg_1985 or ap_const_lv12_2);
    or_ln724_2_fu_1760_p2 <= (shl_ln724_reg_1985 or ap_const_lv12_3);
    or_ln724_3_fu_1775_p2 <= (shl_ln724_reg_1985 or ap_const_lv12_4);
    or_ln724_4_fu_1790_p2 <= (shl_ln724_reg_1985 or ap_const_lv12_5);
    or_ln724_5_fu_1805_p2 <= (shl_ln724_reg_1985 or ap_const_lv12_6);
    or_ln724_6_fu_1820_p2 <= (shl_ln724_reg_1985 or ap_const_lv12_7);
    or_ln724_fu_1233_p2 <= (shl_ln724_fu_1217_p2 or ap_const_lv12_1);

    regions_1_address0_assign_proc : process(ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_1_addr_11_reg_2100, regions_1_addr_13_reg_2110, regions_1_addr_15_reg_2120, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_1_address0, ap_CS_fsm_state3, zext_ln724_3_fu_1239_p1, zext_ln709_3_fu_1307_p1, zext_ln724_5_fu_1765_p1, zext_ln724_7_fu_1795_p1, zext_ln724_9_fu_1825_p1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_1_address0 <= regions_1_addr_13_reg_2110;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_1_address0 <= regions_1_addr_11_reg_2100;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_1_address0 <= regions_1_addr_15_reg_2120;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_1_address0 <= zext_ln724_9_fu_1825_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_1_address0 <= zext_ln724_7_fu_1795_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_1_address0 <= zext_ln724_5_fu_1765_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_1_address0 <= zext_ln709_3_fu_1307_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_1_address0 <= zext_ln724_3_fu_1239_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_1_address0 <= grp_runTestAfterInit_fu_1101_regions_1_address0;
        else 
            regions_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_1_address1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_1_addr_10_reg_2095, regions_1_addr_12_reg_2105, regions_1_addr_14_reg_2115, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_2_fu_1223_p1, zext_ln709_2_fu_1291_p1, zext_ln724_4_fu_1750_p1, zext_ln724_6_fu_1780_p1, zext_ln724_8_fu_1810_p1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_1_address1 <= regions_1_addr_12_reg_2105;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_1_address1 <= regions_1_addr_10_reg_2095;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_1_address1 <= regions_1_addr_14_reg_2115;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_1_address1 <= zext_ln724_8_fu_1810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_1_address1 <= zext_ln724_6_fu_1780_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_1_address1 <= zext_ln724_4_fu_1750_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_1_address1 <= zext_ln709_2_fu_1291_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_1_address1 <= zext_ln724_2_fu_1223_p1(12 - 1 downto 0);
        else 
            regions_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_1_ce0 <= grp_runTestAfterInit_fu_1101_regions_1_ce0;
        else 
            regions_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_1_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_1_ce1 <= ap_const_logic_1;
        else 
            regions_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_1_d0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_3_reg_2251, bitcast_ln709_5_reg_2263, bitcast_ln709_7_reg_2275, ap_CS_fsm_state10, bitcast_ln709_1_fu_1423_p1, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_1_d0 <= bitcast_ln709_5_reg_2263;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_1_d0 <= bitcast_ln709_3_reg_2251;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_1_d0 <= bitcast_ln709_7_reg_2275;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_1_d0 <= bitcast_ln709_1_fu_1423_p1;
        else 
            regions_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_1_d1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_2_reg_2245, bitcast_ln709_4_reg_2257, bitcast_ln709_6_reg_2269, ap_CS_fsm_state10, bitcast_ln709_fu_1269_p1, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_1_d1 <= bitcast_ln709_4_reg_2257;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_1_d1 <= bitcast_ln709_2_reg_2245;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_1_d1 <= bitcast_ln709_6_reg_2269;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_1_d1 <= bitcast_ln709_fu_1269_p1;
        else 
            regions_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_1_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((trunc_ln647_reg_1975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_1_we0 <= ap_const_logic_1;
        else 
            regions_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_1_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((trunc_ln647_reg_1975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_1_we1 <= ap_const_logic_1;
        else 
            regions_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_2_address0_assign_proc : process(ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_2_addr_3_reg_2130, regions_2_addr_5_reg_2140, regions_2_addr_7_reg_2150, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_2_address0, ap_CS_fsm_state3, zext_ln724_3_fu_1239_p1, zext_ln709_3_fu_1307_p1, zext_ln724_5_fu_1765_p1, zext_ln724_7_fu_1795_p1, zext_ln724_9_fu_1825_p1, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_2_address0 <= regions_2_addr_7_reg_2150;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_2_address0 <= regions_2_addr_5_reg_2140;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_2_address0 <= regions_2_addr_3_reg_2130;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_2_address0 <= zext_ln724_9_fu_1825_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_2_address0 <= zext_ln724_7_fu_1795_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_2_address0 <= zext_ln724_5_fu_1765_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_2_address0 <= zext_ln709_3_fu_1307_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_2_address0 <= zext_ln724_3_fu_1239_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_2_address0 <= grp_runTestAfterInit_fu_1101_regions_2_address0;
        else 
            regions_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_2_address1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_2_addr_2_reg_2125, regions_2_addr_4_reg_2135, regions_2_addr_6_reg_2145, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_2_fu_1223_p1, zext_ln709_2_fu_1291_p1, zext_ln724_4_fu_1750_p1, zext_ln724_6_fu_1780_p1, zext_ln724_8_fu_1810_p1, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_2_address1 <= regions_2_addr_6_reg_2145;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_2_address1 <= regions_2_addr_4_reg_2135;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_2_address1 <= regions_2_addr_2_reg_2125;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_2_address1 <= zext_ln724_8_fu_1810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_2_address1 <= zext_ln724_6_fu_1780_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_2_address1 <= zext_ln724_4_fu_1750_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_2_address1 <= zext_ln709_2_fu_1291_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_2_address1 <= zext_ln724_2_fu_1223_p1(12 - 1 downto 0);
        else 
            regions_2_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_2_ce0 <= grp_runTestAfterInit_fu_1101_regions_2_ce0;
        else 
            regions_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_2_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_2_ce1 <= ap_const_logic_1;
        else 
            regions_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_2_d0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_11_reg_2287, bitcast_ln709_13_reg_2299, bitcast_ln709_15_reg_2311, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9, bitcast_ln709_9_fu_1539_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_2_d0 <= bitcast_ln709_15_reg_2311;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_2_d0 <= bitcast_ln709_13_reg_2299;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_2_d0 <= bitcast_ln709_11_reg_2287;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_2_d0 <= bitcast_ln709_9_fu_1539_p1;
        else 
            regions_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_2_d1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_10_reg_2281, bitcast_ln709_12_reg_2293, bitcast_ln709_14_reg_2305, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9, bitcast_ln709_8_fu_1523_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_2_d1 <= bitcast_ln709_14_reg_2305;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_2_d1 <= bitcast_ln709_12_reg_2293;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_2_d1 <= bitcast_ln709_10_reg_2281;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_2_d1 <= bitcast_ln709_8_fu_1523_p1;
        else 
            regions_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_2_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((trunc_ln647_reg_1975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_2_we0 <= ap_const_logic_1;
        else 
            regions_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_2_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((trunc_ln647_reg_1975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_2_we1 <= ap_const_logic_1;
        else 
            regions_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_3_address0_assign_proc : process(ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_3_addr_11_reg_2160, regions_3_addr_13_reg_2170, regions_3_addr_15_reg_2180, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_3_address0, ap_CS_fsm_state3, zext_ln724_3_fu_1239_p1, zext_ln709_3_fu_1307_p1, zext_ln724_5_fu_1765_p1, zext_ln724_7_fu_1795_p1, zext_ln724_9_fu_1825_p1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_3_address0 <= regions_3_addr_13_reg_2170;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_3_address0 <= regions_3_addr_11_reg_2160;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_3_address0 <= regions_3_addr_15_reg_2180;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_3_address0 <= zext_ln724_9_fu_1825_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_3_address0 <= zext_ln724_7_fu_1795_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_3_address0 <= zext_ln724_5_fu_1765_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_3_address0 <= zext_ln709_3_fu_1307_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_3_address0 <= zext_ln724_3_fu_1239_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_3_address0 <= grp_runTestAfterInit_fu_1101_regions_3_address0;
        else 
            regions_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_3_address1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_3_addr_10_reg_2155, regions_3_addr_12_reg_2165, regions_3_addr_14_reg_2175, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_2_fu_1223_p1, zext_ln709_2_fu_1291_p1, zext_ln724_4_fu_1750_p1, zext_ln724_6_fu_1780_p1, zext_ln724_8_fu_1810_p1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_3_address1 <= regions_3_addr_12_reg_2165;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_3_address1 <= regions_3_addr_10_reg_2155;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_3_address1 <= regions_3_addr_14_reg_2175;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_3_address1 <= zext_ln724_8_fu_1810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_3_address1 <= zext_ln724_6_fu_1780_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_3_address1 <= zext_ln724_4_fu_1750_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_3_address1 <= zext_ln709_2_fu_1291_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_3_address1 <= zext_ln724_2_fu_1223_p1(12 - 1 downto 0);
        else 
            regions_3_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_3_ce0 <= grp_runTestAfterInit_fu_1101_regions_3_ce0;
        else 
            regions_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_3_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_3_ce1 <= ap_const_logic_1;
        else 
            regions_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_3_d0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_11_reg_2287, bitcast_ln709_13_reg_2299, bitcast_ln709_15_reg_2311, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, bitcast_ln709_9_fu_1539_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_3_d0 <= bitcast_ln709_13_reg_2299;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_3_d0 <= bitcast_ln709_11_reg_2287;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_3_d0 <= bitcast_ln709_15_reg_2311;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_3_d0 <= bitcast_ln709_9_fu_1539_p1;
        else 
            regions_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_3_d1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_10_reg_2281, bitcast_ln709_12_reg_2293, bitcast_ln709_14_reg_2305, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, bitcast_ln709_8_fu_1523_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_3_d1 <= bitcast_ln709_12_reg_2293;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_3_d1 <= bitcast_ln709_10_reg_2281;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_3_d1 <= bitcast_ln709_14_reg_2305;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_3_d1 <= bitcast_ln709_8_fu_1523_p1;
        else 
            regions_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_3_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((trunc_ln647_reg_1975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_3_we0 <= ap_const_logic_1;
        else 
            regions_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_3_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((trunc_ln647_reg_1975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_3_we1 <= ap_const_logic_1;
        else 
            regions_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_4_address0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_4_addr_3_reg_2190, regions_4_addr_5_reg_2200, regions_4_addr_7_reg_2210, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_3_fu_1239_p1, zext_ln709_3_fu_1307_p1, zext_ln724_5_fu_1765_p1, zext_ln724_7_fu_1795_p1, zext_ln724_9_fu_1825_p1, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_4_address0 <= regions_4_addr_7_reg_2210;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_4_address0 <= regions_4_addr_5_reg_2200;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_4_address0 <= regions_4_addr_3_reg_2190;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_4_address0 <= zext_ln724_9_fu_1825_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_4_address0 <= zext_ln724_7_fu_1795_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_4_address0 <= zext_ln724_5_fu_1765_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_4_address0 <= zext_ln709_3_fu_1307_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_4_address0 <= zext_ln724_3_fu_1239_p1(12 - 1 downto 0);
        else 
            regions_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_4_address1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_4_addr_2_reg_2185, regions_4_addr_4_reg_2195, regions_4_addr_6_reg_2205, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_2_fu_1223_p1, zext_ln709_2_fu_1291_p1, zext_ln724_4_fu_1750_p1, zext_ln724_6_fu_1780_p1, zext_ln724_8_fu_1810_p1, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_4_address1 <= regions_4_addr_6_reg_2205;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_4_address1 <= regions_4_addr_4_reg_2195;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_4_address1 <= regions_4_addr_2_reg_2185;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_4_address1 <= zext_ln724_8_fu_1810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_4_address1 <= zext_ln724_6_fu_1780_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_4_address1 <= zext_ln724_4_fu_1750_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_4_address1 <= zext_ln709_2_fu_1291_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_4_address1 <= zext_ln724_2_fu_1223_p1(12 - 1 downto 0);
        else 
            regions_4_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_4_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_4_ce0 <= ap_const_logic_1;
        else 
            regions_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_4_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_4_ce1 <= ap_const_logic_1;
        else 
            regions_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_4_d0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_19_reg_2323, bitcast_ln709_21_reg_2335, bitcast_ln709_23_reg_2347, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9, bitcast_ln709_17_fu_1655_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_4_d0 <= bitcast_ln709_23_reg_2347;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_4_d0 <= bitcast_ln709_21_reg_2335;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_4_d0 <= bitcast_ln709_19_reg_2323;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_4_d0 <= bitcast_ln709_17_fu_1655_p1;
        else 
            regions_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_4_d1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_18_reg_2317, bitcast_ln709_20_reg_2329, bitcast_ln709_22_reg_2341, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9, bitcast_ln709_16_fu_1639_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_4_d1 <= bitcast_ln709_22_reg_2341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_4_d1 <= bitcast_ln709_20_reg_2329;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_4_d1 <= bitcast_ln709_18_reg_2317;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_4_d1 <= bitcast_ln709_16_fu_1639_p1;
        else 
            regions_4_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_4_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((trunc_ln647_reg_1975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_4_we0 <= ap_const_logic_1;
        else 
            regions_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_4_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((trunc_ln647_reg_1975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_4_we1 <= ap_const_logic_1;
        else 
            regions_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_5_address0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_5_addr_11_reg_2220, regions_5_addr_13_reg_2230, regions_5_addr_15_reg_2240, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_3_fu_1239_p1, zext_ln709_3_fu_1307_p1, zext_ln724_5_fu_1765_p1, zext_ln724_7_fu_1795_p1, zext_ln724_9_fu_1825_p1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_5_address0 <= regions_5_addr_13_reg_2230;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_5_address0 <= regions_5_addr_11_reg_2220;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_5_address0 <= regions_5_addr_15_reg_2240;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_5_address0 <= zext_ln724_9_fu_1825_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_5_address0 <= zext_ln724_7_fu_1795_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_5_address0 <= zext_ln724_5_fu_1765_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_5_address0 <= zext_ln709_3_fu_1307_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_5_address0 <= zext_ln724_3_fu_1239_p1(12 - 1 downto 0);
        else 
            regions_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_5_address1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_5_addr_10_reg_2215, regions_5_addr_12_reg_2225, regions_5_addr_14_reg_2235, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_2_fu_1223_p1, zext_ln709_2_fu_1291_p1, zext_ln724_4_fu_1750_p1, zext_ln724_6_fu_1780_p1, zext_ln724_8_fu_1810_p1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_5_address1 <= regions_5_addr_12_reg_2225;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_5_address1 <= regions_5_addr_10_reg_2215;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_5_address1 <= regions_5_addr_14_reg_2235;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_5_address1 <= zext_ln724_8_fu_1810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_5_address1 <= zext_ln724_6_fu_1780_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_5_address1 <= zext_ln724_4_fu_1750_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_5_address1 <= zext_ln709_2_fu_1291_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_5_address1 <= zext_ln724_2_fu_1223_p1(12 - 1 downto 0);
        else 
            regions_5_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_5_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_5_ce0 <= ap_const_logic_1;
        else 
            regions_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_5_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_5_ce1 <= ap_const_logic_1;
        else 
            regions_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_5_d0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_19_reg_2323, bitcast_ln709_21_reg_2335, bitcast_ln709_23_reg_2347, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, bitcast_ln709_17_fu_1655_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_5_d0 <= bitcast_ln709_21_reg_2335;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_5_d0 <= bitcast_ln709_19_reg_2323;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_5_d0 <= bitcast_ln709_23_reg_2347;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_5_d0 <= bitcast_ln709_17_fu_1655_p1;
        else 
            regions_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_5_d1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_18_reg_2317, bitcast_ln709_20_reg_2329, bitcast_ln709_22_reg_2341, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, bitcast_ln709_16_fu_1639_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            regions_5_d1 <= bitcast_ln709_20_reg_2329;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            regions_5_d1 <= bitcast_ln709_18_reg_2317;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_5_d1 <= bitcast_ln709_22_reg_2341;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_5_d1 <= bitcast_ln709_16_fu_1639_p1;
        else 
            regions_5_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_5_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((trunc_ln647_reg_1975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_5_we0 <= ap_const_logic_1;
        else 
            regions_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_5_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((trunc_ln647_reg_1975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_5_we1 <= ap_const_logic_1;
        else 
            regions_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_address0_assign_proc : process(ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_addr_3_reg_2070, regions_addr_5_reg_2080, regions_addr_7_reg_2090, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_address0, ap_CS_fsm_state3, zext_ln724_3_fu_1239_p1, zext_ln709_3_fu_1307_p1, zext_ln724_5_fu_1765_p1, zext_ln724_7_fu_1795_p1, zext_ln724_9_fu_1825_p1, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_address0 <= regions_addr_7_reg_2090;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_address0 <= regions_addr_5_reg_2080;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_address0 <= regions_addr_3_reg_2070;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_address0 <= zext_ln724_9_fu_1825_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_address0 <= zext_ln724_7_fu_1795_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_address0 <= zext_ln724_5_fu_1765_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_address0 <= zext_ln709_3_fu_1307_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_address0 <= zext_ln724_3_fu_1239_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_address0 <= grp_runTestAfterInit_fu_1101_regions_address0;
        else 
            regions_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_address1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, regions_addr_2_reg_2065, regions_addr_4_reg_2075, regions_addr_6_reg_2085, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln724_2_fu_1223_p1, zext_ln709_2_fu_1291_p1, zext_ln724_4_fu_1750_p1, zext_ln724_6_fu_1780_p1, zext_ln724_8_fu_1810_p1, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_address1 <= regions_addr_6_reg_2085;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_address1 <= regions_addr_4_reg_2075;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_address1 <= regions_addr_2_reg_2065;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            regions_address1 <= zext_ln724_8_fu_1810_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            regions_address1 <= zext_ln724_6_fu_1780_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            regions_address1 <= zext_ln724_4_fu_1750_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_address1 <= zext_ln709_2_fu_1291_p1(12 - 1 downto 0);
        elsif (((ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_address1 <= zext_ln724_2_fu_1223_p1(12 - 1 downto 0);
        else 
            regions_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    regions_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_runTestAfterInit_fu_1101_regions_ce0, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv8_3 = accel_mode) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            regions_ce0 <= grp_runTestAfterInit_fu_1101_regions_ce0;
        else 
            regions_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_lv8_2 = accel_mode_read_read_fu_260_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_ce1 <= ap_const_logic_1;
        else 
            regions_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    regions_d0_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_3_reg_2251, bitcast_ln709_5_reg_2263, bitcast_ln709_7_reg_2275, ap_CS_fsm_state10, bitcast_ln709_1_fu_1423_p1, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_d0 <= bitcast_ln709_7_reg_2275;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_d0 <= bitcast_ln709_5_reg_2263;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_d0 <= bitcast_ln709_3_reg_2251;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_d0 <= bitcast_ln709_1_fu_1423_p1;
        else 
            regions_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_d1_assign_proc : process(ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, bitcast_ln709_2_reg_2245, bitcast_ln709_4_reg_2257, bitcast_ln709_6_reg_2269, ap_CS_fsm_state10, bitcast_ln709_fu_1269_p1, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            regions_d1 <= bitcast_ln709_6_reg_2269;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            regions_d1 <= bitcast_ln709_4_reg_2257;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            regions_d1 <= bitcast_ln709_2_reg_2245;
        elsif (((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            regions_d1 <= bitcast_ln709_fu_1269_p1;
        else 
            regions_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    regions_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((trunc_ln647_reg_1975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_we0 <= ap_const_logic_1;
        else 
            regions_we0 <= ap_const_logic_0;
        end if; 
    end process;


    regions_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, accel_mode_read_read_fu_260_p2, trunc_ln647_fu_1186_p1, trunc_ln647_reg_1975, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((trunc_ln647_reg_1975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_lv8_1 = accel_mode_read_read_fu_260_p2) and (ap_start = ap_const_logic_1) and (trunc_ln647_fu_1186_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            regions_we1 <= ap_const_logic_1;
        else 
            regions_we1 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln709_fu_1285_p2 <= std_logic_vector(shift_left(unsigned(add_ln709_fu_1279_p2),to_integer(unsigned('0' & ap_const_lv12_3(12-1 downto 0)))));
    shl_ln724_fu_1217_p2 <= std_logic_vector(shift_left(unsigned(add_ln724_fu_1211_p2),to_integer(unsigned('0' & ap_const_lv12_3(12-1 downto 0)))));
    tmp_46_fu_1429_p4 <= trainedRegion_i(95 downto 64);
    tmp_47_fu_1443_p4 <= trainedRegion_i(127 downto 96);
    tmp_48_fu_1457_p4 <= trainedRegion_i(159 downto 128);
    tmp_49_fu_1195_p3 <= (IOCheckIdx & ap_const_lv3_0);
    tmp_50_fu_1471_p4 <= trainedRegion_i(191 downto 160);
    tmp_51_fu_1485_p4 <= trainedRegion_i(223 downto 192);
    tmp_52_fu_1499_p4 <= trainedRegion_i(255 downto 224);
    tmp_53_fu_1513_p4 <= trainedRegion_i(287 downto 256);
    tmp_54_fu_1529_p4 <= trainedRegion_i(319 downto 288);
    tmp_55_fu_1545_p4 <= trainedRegion_i(351 downto 320);
    tmp_56_fu_1559_p4 <= trainedRegion_i(383 downto 352);
    tmp_57_fu_1573_p4 <= trainedRegion_i(415 downto 384);
    tmp_58_fu_1587_p4 <= trainedRegion_i(447 downto 416);
    tmp_59_fu_1601_p4 <= trainedRegion_i(479 downto 448);
    tmp_60_fu_1615_p4 <= trainedRegion_i(511 downto 480);
    tmp_61_fu_1629_p4 <= trainedRegion_i(543 downto 512);
    tmp_62_fu_1645_p4 <= trainedRegion_i(575 downto 544);
    tmp_63_fu_1661_p4 <= trainedRegion_i(607 downto 576);
    tmp_64_fu_1675_p4 <= trainedRegion_i(639 downto 608);
    tmp_65_fu_1689_p4 <= trainedRegion_i(671 downto 640);
    tmp_66_fu_1703_p4 <= trainedRegion_i(703 downto 672);
    tmp_67_fu_1717_p4 <= trainedRegion_i(735 downto 704);
    tmp_68_fu_1731_p4 <= trainedRegion_i(767 downto 736);
    tmp_fu_1413_p4 <= trainedRegion_i(63 downto 32);
    tmp_s_fu_1253_p3 <= (IOCheckIdx & ap_const_lv3_0);
    trainedRegion_o <= (((((((((((((((((((((((bitcast_ln724_23_fu_1909_p1 & bitcast_ln724_22_fu_1905_p1) & bitcast_ln724_21_fu_1902_p1) & bitcast_ln724_20_fu_1899_p1) & bitcast_ln724_19_fu_1896_p1) & bitcast_ln724_18_fu_1893_p1) & bitcast_ln724_17_fu_1890_p1) & bitcast_ln724_16_fu_1887_p1) & bitcast_ln724_15_fu_1883_p1) & bitcast_ln724_14_fu_1879_p1) & bitcast_ln724_13_fu_1876_p1) & bitcast_ln724_12_fu_1873_p1) & bitcast_ln724_11_fu_1870_p1) & bitcast_ln724_10_fu_1867_p1) & bitcast_ln724_9_fu_1864_p1) & bitcast_ln724_8_fu_1861_p1) & bitcast_ln724_7_fu_1857_p1) & bitcast_ln724_6_fu_1853_p1) & bitcast_ln724_5_fu_1850_p1) & bitcast_ln724_4_fu_1847_p1) & bitcast_ln724_3_fu_1844_p1) & bitcast_ln724_2_fu_1841_p1) & bitcast_ln724_1_fu_1838_p1) & bitcast_ln724_fu_1835_p1);
    trunc_ln647_fu_1186_p1 <= IORegionIdx(1 - 1 downto 0);
    trunc_ln709_fu_1265_p1 <= trainedRegion_i(32 - 1 downto 0);
    zext_ln587_1_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(IOCheckIdx),64));
    zext_ln587_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(IOCheckIdx),64));
    zext_ln709_1_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1122_p4),12));
    zext_ln709_2_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln709_fu_1285_p2),64));
    zext_ln709_3_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln709_fu_1301_p2),64));
    zext_ln709_4_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln709_1_fu_1317_p2),64));
    zext_ln709_5_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln709_2_fu_1333_p2),64));
    zext_ln709_6_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln709_3_fu_1349_p2),64));
    zext_ln709_7_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln709_4_fu_1365_p2),64));
    zext_ln709_8_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln709_5_fu_1381_p2),64));
    zext_ln709_9_fu_1403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln709_6_fu_1397_p2),64));
    zext_ln709_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1253_p3),12));
    zext_ln724_1_fu_1207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1122_p4),12));
    zext_ln724_2_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln724_fu_1217_p2),64));
    zext_ln724_3_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln724_fu_1233_p2),64));
    zext_ln724_4_fu_1750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln724_1_fu_1745_p2),64));
    zext_ln724_5_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln724_2_fu_1760_p2),64));
    zext_ln724_6_fu_1780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln724_3_fu_1775_p2),64));
    zext_ln724_7_fu_1795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln724_4_fu_1790_p2),64));
    zext_ln724_8_fu_1810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln724_5_fu_1805_p2),64));
    zext_ln724_9_fu_1825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln724_6_fu_1820_p2),64));
    zext_ln724_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_1195_p3),12));
end behav;
