-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity run_writeOutcome is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    errorInTask_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    errorInTask_ce0 : OUT STD_LOGIC;
    errorInTask_we0 : OUT STD_LOGIC;
    errorInTask_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    errorInTask_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    outcomeStream_dout : IN STD_LOGIC_VECTOR (296 downto 0);
    outcomeStream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    outcomeStream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    outcomeStream_empty_n : IN STD_LOGIC;
    outcomeStream_read : OUT STD_LOGIC );
end;


architecture behav of run_writeOutcome is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_ZL22failedTaskExecutionIds_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_3 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_4 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_5 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_6 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_7 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_8 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_9 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_10 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_11 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_12 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_13 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_14 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL22failedTaskExecutionIds_15 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal outcomeStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal outcomeStream_read_reg_735 : STD_LOGIC_VECTOR (296 downto 0);
    signal tmp_executionId_V_reg_740 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_taskId_V_fu_427_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_taskId_V_reg_761 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_fault_reg_766 : STD_LOGIC_VECTOR (0 downto 0);
    signal errorInTask_addr_reg_771 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln587_fu_445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal outcome_executionId_V_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_fu_213_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln1065_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_550_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln449_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal outcome_executionId_V_1_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_1_fu_221_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_2_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_2_fu_229_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_3_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_3_fu_237_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_4_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_4_fu_245_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_5_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_5_fu_253_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_6_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_6_fu_261_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_7_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_7_fu_269_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_8_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_8_fu_277_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_9_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_9_fu_285_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_10_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_10_fu_293_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_11_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_11_fu_301_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_12_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_12_fu_309_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_13_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_13_fu_317_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_14_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1065_14_fu_325_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outcome_executionId_V_15_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln429_fu_333_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_504_p18 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component run_mux_168_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        din10 : IN STD_LOGIC_VECTOR (7 downto 0);
        din11 : IN STD_LOGIC_VECTOR (7 downto 0);
        din12 : IN STD_LOGIC_VECTOR (7 downto 0);
        din13 : IN STD_LOGIC_VECTOR (7 downto 0);
        din14 : IN STD_LOGIC_VECTOR (7 downto 0);
        din15 : IN STD_LOGIC_VECTOR (7 downto 0);
        din16 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    mux_168_8_1_1_U166 : component run_mux_168_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => outcome_executionId_V_fu_126,
        din1 => outcome_executionId_V_1_fu_130,
        din2 => outcome_executionId_V_2_fu_134,
        din3 => outcome_executionId_V_3_fu_138,
        din4 => outcome_executionId_V_4_fu_142,
        din5 => outcome_executionId_V_5_fu_146,
        din6 => outcome_executionId_V_6_fu_150,
        din7 => outcome_executionId_V_7_fu_154,
        din8 => outcome_executionId_V_8_fu_158,
        din9 => outcome_executionId_V_9_fu_162,
        din10 => outcome_executionId_V_10_fu_166,
        din11 => outcome_executionId_V_11_fu_170,
        din12 => outcome_executionId_V_12_fu_174,
        din13 => outcome_executionId_V_13_fu_178,
        din14 => outcome_executionId_V_14_fu_182,
        din15 => outcome_executionId_V_15_fu_186,
        din16 => tmp_taskId_V_reg_761,
        dout => tmp_8_fu_504_p18);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    p_ZL22failedTaskExecutionIds_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                
            else
            end if;
        end if;
    end process;


    outcome_executionId_V_10_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_10_fu_166 <= zext_ln1065_10_fu_293_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_A) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_A))))) then 
                outcome_executionId_V_10_fu_166 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_11_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_11_fu_170 <= zext_ln1065_11_fu_301_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_B) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_B))))) then 
                outcome_executionId_V_11_fu_170 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_12_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_12_fu_174 <= zext_ln1065_12_fu_309_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_C) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_C))))) then 
                outcome_executionId_V_12_fu_174 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_13_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_13_fu_178 <= zext_ln1065_13_fu_317_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_D) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_D))))) then 
                outcome_executionId_V_13_fu_178 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_14_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_14_fu_182 <= zext_ln1065_14_fu_325_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_E) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_E))))) then 
                outcome_executionId_V_14_fu_182 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_15_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_15_fu_186 <= zext_ln429_fu_333_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_F) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_F))))) then 
                outcome_executionId_V_15_fu_186 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_1_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_1_fu_130 <= zext_ln1065_1_fu_221_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_1) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_1))))) then 
                outcome_executionId_V_1_fu_130 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_2_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_2_fu_134 <= zext_ln1065_2_fu_229_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_2) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_2))))) then 
                outcome_executionId_V_2_fu_134 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_3_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_3_fu_138 <= zext_ln1065_3_fu_237_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_3) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_3))))) then 
                outcome_executionId_V_3_fu_138 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_4_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_4_fu_142 <= zext_ln1065_4_fu_245_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_4) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_4))))) then 
                outcome_executionId_V_4_fu_142 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_5_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_5_fu_146 <= zext_ln1065_5_fu_253_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_5) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_5))))) then 
                outcome_executionId_V_5_fu_146 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_6_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_6_fu_150 <= zext_ln1065_6_fu_261_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_6) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_6))))) then 
                outcome_executionId_V_6_fu_150 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_7_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_7_fu_154 <= zext_ln1065_7_fu_269_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_7) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_7))))) then 
                outcome_executionId_V_7_fu_154 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_8_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_8_fu_158 <= zext_ln1065_8_fu_277_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_8) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_8))))) then 
                outcome_executionId_V_8_fu_158 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_9_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_9_fu_162 <= zext_ln1065_9_fu_285_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_9) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_9))))) then 
                outcome_executionId_V_9_fu_162 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;

    outcome_executionId_V_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                outcome_executionId_V_fu_126 <= zext_ln1065_fu_213_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((in_fault_reg_766 = ap_const_lv1_1) and (icmp_ln449_fu_450_p2 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_0)) or ((in_fault_reg_766 = ap_const_lv1_1) and (trunc_ln_fu_550_p4 = ap_const_lv4_0) and (icmp_ln1065_fu_541_p2 = ap_const_lv1_0))))) then 
                outcome_executionId_V_fu_126 <= tmp_executionId_V_reg_740;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                errorInTask_addr_reg_771 <= zext_ln587_fu_445_p1(4 - 1 downto 0);
                in_fault_reg_766 <= outcomeStream_dout(40 downto 40);
                outcomeStream_read_reg_735 <= outcomeStream_dout;
                tmp_executionId_V_reg_740 <= outcomeStream_dout(15 downto 8);
                tmp_taskId_V_reg_761 <= outcomeStream_dout(39 downto 32);
            end if;
        end if;
    end process;
    ap_done_reg <= '0';
    p_ZL22failedTaskExecutionIds_0(0) <= '0';
    p_ZL22failedTaskExecutionIds_1(0) <= '0';
    p_ZL22failedTaskExecutionIds_2(0) <= '0';
    p_ZL22failedTaskExecutionIds_3(0) <= '0';
    p_ZL22failedTaskExecutionIds_4(0) <= '0';
    p_ZL22failedTaskExecutionIds_5(0) <= '0';
    p_ZL22failedTaskExecutionIds_6(0) <= '0';
    p_ZL22failedTaskExecutionIds_7(0) <= '0';
    p_ZL22failedTaskExecutionIds_8(0) <= '0';
    p_ZL22failedTaskExecutionIds_9(0) <= '0';
    p_ZL22failedTaskExecutionIds_10(0) <= '0';
    p_ZL22failedTaskExecutionIds_11(0) <= '0';
    p_ZL22failedTaskExecutionIds_12(0) <= '0';
    p_ZL22failedTaskExecutionIds_13(0) <= '0';
    p_ZL22failedTaskExecutionIds_14(0) <= '0';
    p_ZL22failedTaskExecutionIds_15(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, outcomeStream_empty_n, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((outcomeStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(outcomeStream_empty_n)
    begin
        if ((outcomeStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

    ap_done <= ap_done_reg;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_const_logic_0;

    errorInTask_address0_assign_proc : process(ap_CS_fsm_state2, errorInTask_addr_reg_771, zext_ln587_fu_445_p1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            errorInTask_address0 <= errorInTask_addr_reg_771;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            errorInTask_address0 <= zext_ln587_fu_445_p1(4 - 1 downto 0);
        else 
            errorInTask_address0 <= "XXXX";
        end if; 
    end process;


    errorInTask_ce0_assign_proc : process(outcomeStream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((outcomeStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            errorInTask_ce0 <= ap_const_logic_1;
        else 
            errorInTask_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    errorInTask_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_fault_reg_766),8));

    errorInTask_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln1065_fu_541_p2, icmp_ln449_fu_450_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln449_fu_450_p2 = ap_const_lv1_1) or (icmp_ln1065_fu_541_p2 = ap_const_lv1_0)))) then 
            errorInTask_we0 <= ap_const_logic_1;
        else 
            errorInTask_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1065_fu_541_p2 <= "1" when (tmp_8_fu_504_p18 = tmp_executionId_V_reg_740) else "0";
    icmp_ln449_fu_450_p2 <= "1" when (errorInTask_q0 = ap_const_lv8_0) else "0";

    outcomeStream_blk_n_assign_proc : process(outcomeStream_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            outcomeStream_blk_n <= outcomeStream_empty_n;
        else 
            outcomeStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outcomeStream_read_assign_proc : process(outcomeStream_empty_n, ap_CS_fsm_state2)
    begin
        if (((outcomeStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            outcomeStream_read <= ap_const_logic_1;
        else 
            outcomeStream_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_taskId_V_fu_427_p4 <= outcomeStream_dout(39 downto 32);
    trunc_ln_fu_550_p4 <= outcomeStream_read_reg_735(35 downto 32);
    zext_ln1065_10_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_10),8));
    zext_ln1065_11_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_11),8));
    zext_ln1065_12_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_12),8));
    zext_ln1065_13_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_13),8));
    zext_ln1065_14_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_14),8));
    zext_ln1065_1_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_1),8));
    zext_ln1065_2_fu_229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_2),8));
    zext_ln1065_3_fu_237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_3),8));
    zext_ln1065_4_fu_245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_4),8));
    zext_ln1065_5_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_5),8));
    zext_ln1065_6_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_6),8));
    zext_ln1065_7_fu_269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_7),8));
    zext_ln1065_8_fu_277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_8),8));
    zext_ln1065_9_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_9),8));
    zext_ln1065_fu_213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_0),8));
    zext_ln429_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_ZL22failedTaskExecutionIds_15),8));
    zext_ln587_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_taskId_V_fu_427_p4),64));
end behav;
