-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity run_runTestAfterInit is
port (
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    inputAOV : IN STD_LOGIC_VECTOR (31 downto 0);
    copyInputAOV_in : IN STD_LOGIC_VECTOR (7 downto 0);
    copyInputAOV_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    outcomeInRam_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outcomeInRam_ce0 : OUT STD_LOGIC;
    outcomeInRam_d0 : OUT STD_LOGIC_VECTOR (287 downto 0);
    outcomeInRam_q0 : IN STD_LOGIC_VECTOR (287 downto 0);
    outcomeInRam_we0 : OUT STD_LOGIC_VECTOR (35 downto 0);
    toScheduler_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    errorInTask_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    errorInTask_ce0 : OUT STD_LOGIC;
    errorInTask_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    errorInTask_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    errorInTask_we0 : OUT STD_LOGIC;
    regions_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_ce0 : OUT STD_LOGIC;
    regions_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_we0 : OUT STD_LOGIC;
    regions_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_ce1 : OUT STD_LOGIC;
    regions_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_we1 : OUT STD_LOGIC;
    regions_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_1_ce0 : OUT STD_LOGIC;
    regions_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_1_we0 : OUT STD_LOGIC;
    regions_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_1_ce1 : OUT STD_LOGIC;
    regions_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_1_we1 : OUT STD_LOGIC;
    regions_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_2_ce0 : OUT STD_LOGIC;
    regions_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_2_we0 : OUT STD_LOGIC;
    regions_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_2_ce1 : OUT STD_LOGIC;
    regions_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_2_we1 : OUT STD_LOGIC;
    regions_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_3_ce0 : OUT STD_LOGIC;
    regions_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_3_we0 : OUT STD_LOGIC;
    regions_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_3_ce1 : OUT STD_LOGIC;
    regions_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_3_we1 : OUT STD_LOGIC;
    regions_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_4_ce0 : OUT STD_LOGIC;
    regions_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_4_we0 : OUT STD_LOGIC;
    regions_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_4_ce1 : OUT STD_LOGIC;
    regions_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_4_we1 : OUT STD_LOGIC;
    regions_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_5_ce0 : OUT STD_LOGIC;
    regions_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_5_we0 : OUT STD_LOGIC;
    regions_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    regions_5_ce1 : OUT STD_LOGIC;
    regions_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    regions_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_5_we1 : OUT STD_LOGIC;
    n_regions_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    n_regions_V_ce0 : OUT STD_LOGIC;
    n_regions_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_regions_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    n_regions_V_we0 : OUT STD_LOGIC;
    n_regions_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    n_regions_V_ce1 : OUT STD_LOGIC;
    n_regions_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_regions_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    n_regions_V_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    inputAOV_ap_vld : IN STD_LOGIC;
    copyInputAOV_in_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    copyInputAOV_out_ap_vld : OUT STD_LOGIC;
    toScheduler_TVALID : OUT STD_LOGIC;
    toScheduler_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of run_runTestAfterInit is 
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal read_train_U0_ap_start : STD_LOGIC;
    signal read_train_U0_ap_done : STD_LOGIC;
    signal read_train_U0_ap_continue : STD_LOGIC;
    signal read_train_U0_ap_idle : STD_LOGIC;
    signal read_train_U0_ap_ready : STD_LOGIC;
    signal read_train_U0_m_axi_gmem_AWVALID : STD_LOGIC;
    signal read_train_U0_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_train_U0_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal read_train_U0_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal read_train_U0_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal read_train_U0_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal read_train_U0_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal read_train_U0_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal read_train_U0_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal read_train_U0_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_train_U0_m_axi_gmem_WVALID : STD_LOGIC;
    signal read_train_U0_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal read_train_U0_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal read_train_U0_m_axi_gmem_WLAST : STD_LOGIC;
    signal read_train_U0_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_train_U0_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_train_U0_m_axi_gmem_ARVALID : STD_LOGIC;
    signal read_train_U0_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_train_U0_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal read_train_U0_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal read_train_U0_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal read_train_U0_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal read_train_U0_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal read_train_U0_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal read_train_U0_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal read_train_U0_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_train_U0_m_axi_gmem_RREADY : STD_LOGIC;
    signal read_train_U0_m_axi_gmem_BREADY : STD_LOGIC;
    signal read_train_U0_copyInputAOV_in_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal read_train_U0_copyInputAOV_in_c_write : STD_LOGIC;
    signal read_train_U0_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal read_train_U0_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal read_train_U0_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_train_U0_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal read_train_U0_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_train_U0_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_contr_AOV_7 : STD_LOGIC;
    signal contr_AOV_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV_7 : STD_LOGIC;
    signal ap_channel_done_contr_AOV_6 : STD_LOGIC;
    signal contr_AOV_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV_6 : STD_LOGIC;
    signal ap_channel_done_contr_AOV_5 : STD_LOGIC;
    signal contr_AOV_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV_5 : STD_LOGIC;
    signal ap_channel_done_contr_AOV_4 : STD_LOGIC;
    signal contr_AOV_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV_4 : STD_LOGIC;
    signal ap_channel_done_contr_AOV_3 : STD_LOGIC;
    signal contr_AOV_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV_3 : STD_LOGIC;
    signal ap_channel_done_contr_AOV_2 : STD_LOGIC;
    signal contr_AOV_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV_2 : STD_LOGIC;
    signal ap_channel_done_contr_AOV_1 : STD_LOGIC;
    signal contr_AOV_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV_1 : STD_LOGIC;
    signal ap_channel_done_contr_AOV : STD_LOGIC;
    signal contr_AOV_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_AOV : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_AOV : STD_LOGIC;
    signal ap_channel_done_contr_checkId_V : STD_LOGIC;
    signal contr_checkId_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_checkId_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_checkId_V : STD_LOGIC;
    signal ap_channel_done_contr_taskId_V : STD_LOGIC;
    signal contr_taskId_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_taskId_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_taskId_V : STD_LOGIC;
    signal ap_channel_done_contr_uniId_V : STD_LOGIC;
    signal contr_uniId_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_uniId_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_uniId_V : STD_LOGIC;
    signal ap_channel_done_contr_command : STD_LOGIC;
    signal contr_command_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_contr_command : STD_LOGIC := '0';
    signal ap_sync_channel_write_contr_command : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_ap_start : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_ap_done : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_ap_continue : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_ap_idle : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_ap_ready : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_in_read : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out : STD_LOGIC_VECTOR (7 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out_ap_vld : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TVALID : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_we0 : STD_LOGIC_VECTOR (35 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_d0 : STD_LOGIC_VECTOR (287 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_ce1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_we1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we1 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_ce0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_we0 : STD_LOGIC;
    signal runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal copyInputAOV_in_c_full_n : STD_LOGIC;
    signal copyInputAOV_in_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal copyInputAOV_in_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal copyInputAOV_in_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal copyInputAOV_in_c_empty_n : STD_LOGIC;
    signal contr_command_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal contr_command_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_command_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_command_empty_n : STD_LOGIC;
    signal contr_uniId_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal contr_uniId_V_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_uniId_V_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_uniId_V_empty_n : STD_LOGIC;
    signal contr_taskId_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal contr_taskId_V_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_taskId_V_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_taskId_V_empty_n : STD_LOGIC;
    signal contr_checkId_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal contr_checkId_V_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_checkId_V_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_checkId_V_empty_n : STD_LOGIC;
    signal contr_AOV_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_empty_n : STD_LOGIC;
    signal contr_AOV_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_1_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_1_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_1_empty_n : STD_LOGIC;
    signal contr_AOV_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_2_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_2_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_2_empty_n : STD_LOGIC;
    signal contr_AOV_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_3_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_3_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_3_empty_n : STD_LOGIC;
    signal contr_AOV_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_4_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_4_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_4_empty_n : STD_LOGIC;
    signal contr_AOV_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_5_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_5_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_5_empty_n : STD_LOGIC;
    signal contr_AOV_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_6_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_6_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_6_empty_n : STD_LOGIC;
    signal contr_AOV_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal contr_AOV_7_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_7_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal contr_AOV_7_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_read_train_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_read_train_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component run_read_train IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        inputAOV : IN STD_LOGIC_VECTOR (31 downto 0);
        copyInputAOV : IN STD_LOGIC_VECTOR (7 downto 0);
        copyInputAOV_in_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        copyInputAOV_in_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        copyInputAOV_in_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        copyInputAOV_in_c_full_n : IN STD_LOGIC;
        copyInputAOV_in_c_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_runTestAfterInit_Block_entry1119_proc7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        errorInTask_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        errorInTask_ce0 : OUT STD_LOGIC;
        errorInTask_we0 : OUT STD_LOGIC;
        errorInTask_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        errorInTask_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (31 downto 0);
        copyInputAOV_in_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        copyInputAOV_in_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        copyInputAOV_in_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        copyInputAOV_in_empty_n : IN STD_LOGIC;
        copyInputAOV_in_read : OUT STD_LOGIC;
        copyInputAOV_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        copyInputAOV_out_ap_vld : OUT STD_LOGIC;
        p_read311 : IN STD_LOGIC_VECTOR (15 downto 0);
        toScheduler_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        toScheduler_TVALID : OUT STD_LOGIC;
        toScheduler_TREADY : IN STD_LOGIC;
        outcomeInRam_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outcomeInRam_ce0 : OUT STD_LOGIC;
        outcomeInRam_we0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        outcomeInRam_d0 : OUT STD_LOGIC_VECTOR (287 downto 0);
        regions_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_ce0 : OUT STD_LOGIC;
        regions_we0 : OUT STD_LOGIC;
        regions_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_ce1 : OUT STD_LOGIC;
        regions_we1 : OUT STD_LOGIC;
        regions_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_1_ce0 : OUT STD_LOGIC;
        regions_1_we0 : OUT STD_LOGIC;
        regions_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_1_ce1 : OUT STD_LOGIC;
        regions_1_we1 : OUT STD_LOGIC;
        regions_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_2_ce0 : OUT STD_LOGIC;
        regions_2_we0 : OUT STD_LOGIC;
        regions_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_2_ce1 : OUT STD_LOGIC;
        regions_2_we1 : OUT STD_LOGIC;
        regions_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_3_ce0 : OUT STD_LOGIC;
        regions_3_we0 : OUT STD_LOGIC;
        regions_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_3_ce1 : OUT STD_LOGIC;
        regions_3_we1 : OUT STD_LOGIC;
        regions_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_4_ce0 : OUT STD_LOGIC;
        regions_4_we0 : OUT STD_LOGIC;
        regions_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_4_ce1 : OUT STD_LOGIC;
        regions_4_we1 : OUT STD_LOGIC;
        regions_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_5_ce0 : OUT STD_LOGIC;
        regions_5_we0 : OUT STD_LOGIC;
        regions_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        regions_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        regions_5_ce1 : OUT STD_LOGIC;
        regions_5_we1 : OUT STD_LOGIC;
        regions_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        regions_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        n_regions_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        n_regions_V_ce0 : OUT STD_LOGIC;
        n_regions_V_we0 : OUT STD_LOGIC;
        n_regions_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_regions_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component run_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component run_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component run_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    read_train_U0 : component run_read_train
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => read_train_U0_ap_start,
        ap_done => read_train_U0_ap_done,
        ap_continue => read_train_U0_ap_continue,
        ap_idle => read_train_U0_ap_idle,
        ap_ready => read_train_U0_ap_ready,
        m_axi_gmem_AWVALID => read_train_U0_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => read_train_U0_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => read_train_U0_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => read_train_U0_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => read_train_U0_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => read_train_U0_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => read_train_U0_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => read_train_U0_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => read_train_U0_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => read_train_U0_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => read_train_U0_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => read_train_U0_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => read_train_U0_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => read_train_U0_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => read_train_U0_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => read_train_U0_m_axi_gmem_WLAST,
        m_axi_gmem_WID => read_train_U0_m_axi_gmem_WID,
        m_axi_gmem_WUSER => read_train_U0_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => read_train_U0_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => read_train_U0_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => read_train_U0_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => read_train_U0_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => read_train_U0_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => read_train_U0_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => read_train_U0_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => read_train_U0_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => read_train_U0_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => read_train_U0_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => read_train_U0_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => read_train_U0_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => read_train_U0_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => read_train_U0_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        inputAOV => inputAOV,
        copyInputAOV => copyInputAOV_in,
        copyInputAOV_in_c_din => read_train_U0_copyInputAOV_in_c_din,
        copyInputAOV_in_c_num_data_valid => copyInputAOV_in_c_num_data_valid,
        copyInputAOV_in_c_fifo_cap => copyInputAOV_in_c_fifo_cap,
        copyInputAOV_in_c_full_n => copyInputAOV_in_c_full_n,
        copyInputAOV_in_c_write => read_train_U0_copyInputAOV_in_c_write,
        ap_return_0 => read_train_U0_ap_return_0,
        ap_return_1 => read_train_U0_ap_return_1,
        ap_return_2 => read_train_U0_ap_return_2,
        ap_return_3 => read_train_U0_ap_return_3,
        ap_return_4 => read_train_U0_ap_return_4,
        ap_return_5 => read_train_U0_ap_return_5,
        ap_return_6 => read_train_U0_ap_return_6,
        ap_return_7 => read_train_U0_ap_return_7,
        ap_return_8 => read_train_U0_ap_return_8,
        ap_return_9 => read_train_U0_ap_return_9,
        ap_return_10 => read_train_U0_ap_return_10,
        ap_return_11 => read_train_U0_ap_return_11);

    runTestAfterInit_Block_entry1119_proc7_U0 : component run_runTestAfterInit_Block_entry1119_proc7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => runTestAfterInit_Block_entry1119_proc7_U0_ap_start,
        ap_done => runTestAfterInit_Block_entry1119_proc7_U0_ap_done,
        ap_continue => runTestAfterInit_Block_entry1119_proc7_U0_ap_continue,
        ap_idle => runTestAfterInit_Block_entry1119_proc7_U0_ap_idle,
        ap_ready => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready,
        p_read => contr_command_dout,
        p_read1 => contr_taskId_V_dout,
        errorInTask_address0 => runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_address0,
        errorInTask_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_ce0,
        errorInTask_we0 => runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_we0,
        errorInTask_d0 => runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_d0,
        errorInTask_q0 => errorInTask_q0,
        p_read2 => contr_checkId_V_dout,
        p_read3 => contr_AOV_dout,
        p_read4 => contr_AOV_1_dout,
        p_read5 => contr_AOV_2_dout,
        p_read6 => contr_AOV_3_dout,
        p_read7 => contr_AOV_4_dout,
        p_read8 => contr_AOV_5_dout,
        p_read9 => contr_AOV_6_dout,
        p_read10 => contr_AOV_7_dout,
        copyInputAOV_in_dout => copyInputAOV_in_c_dout,
        copyInputAOV_in_num_data_valid => copyInputAOV_in_c_num_data_valid,
        copyInputAOV_in_fifo_cap => copyInputAOV_in_c_fifo_cap,
        copyInputAOV_in_empty_n => copyInputAOV_in_c_empty_n,
        copyInputAOV_in_read => runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_in_read,
        copyInputAOV_out => runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out,
        copyInputAOV_out_ap_vld => runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out_ap_vld,
        p_read311 => contr_uniId_V_dout,
        toScheduler_TDATA => runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TDATA,
        toScheduler_TVALID => runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TVALID,
        toScheduler_TREADY => toScheduler_TREADY,
        outcomeInRam_address0 => runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_address0,
        outcomeInRam_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_ce0,
        outcomeInRam_we0 => runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_we0,
        outcomeInRam_d0 => runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_d0,
        regions_address0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_address0,
        regions_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_ce0,
        regions_we0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_we0,
        regions_d0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_d0,
        regions_q0 => regions_q0,
        regions_address1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_address1,
        regions_ce1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_ce1,
        regions_we1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_we1,
        regions_d1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_d1,
        regions_q1 => regions_q1,
        regions_1_address0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address0,
        regions_1_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce0,
        regions_1_we0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we0,
        regions_1_d0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d0,
        regions_1_q0 => regions_1_q0,
        regions_1_address1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address1,
        regions_1_ce1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce1,
        regions_1_we1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we1,
        regions_1_d1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d1,
        regions_1_q1 => regions_1_q1,
        regions_2_address0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address0,
        regions_2_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce0,
        regions_2_we0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we0,
        regions_2_d0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d0,
        regions_2_q0 => regions_2_q0,
        regions_2_address1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address1,
        regions_2_ce1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce1,
        regions_2_we1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we1,
        regions_2_d1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d1,
        regions_2_q1 => regions_2_q1,
        regions_3_address0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address0,
        regions_3_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce0,
        regions_3_we0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we0,
        regions_3_d0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d0,
        regions_3_q0 => regions_3_q0,
        regions_3_address1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address1,
        regions_3_ce1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce1,
        regions_3_we1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we1,
        regions_3_d1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d1,
        regions_3_q1 => regions_3_q1,
        regions_4_address0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address0,
        regions_4_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce0,
        regions_4_we0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we0,
        regions_4_d0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d0,
        regions_4_q0 => regions_4_q0,
        regions_4_address1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address1,
        regions_4_ce1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce1,
        regions_4_we1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we1,
        regions_4_d1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d1,
        regions_4_q1 => regions_4_q1,
        regions_5_address0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address0,
        regions_5_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce0,
        regions_5_we0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we0,
        regions_5_d0 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d0,
        regions_5_q0 => regions_5_q0,
        regions_5_address1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address1,
        regions_5_ce1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce1,
        regions_5_we1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we1,
        regions_5_d1 => runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d1,
        regions_5_q1 => regions_5_q1,
        n_regions_V_address0 => runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_address0,
        n_regions_V_ce0 => runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_ce0,
        n_regions_V_we0 => runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_we0,
        n_regions_V_d0 => runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_d0,
        n_regions_V_q0 => n_regions_V_q0);

    copyInputAOV_in_c_U : component run_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_copyInputAOV_in_c_din,
        if_full_n => copyInputAOV_in_c_full_n,
        if_write => read_train_U0_copyInputAOV_in_c_write,
        if_dout => copyInputAOV_in_c_dout,
        if_num_data_valid => copyInputAOV_in_c_num_data_valid,
        if_fifo_cap => copyInputAOV_in_c_fifo_cap,
        if_empty_n => copyInputAOV_in_c_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_in_read);

    contr_command_U : component run_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_3,
        if_full_n => contr_command_full_n,
        if_write => ap_channel_done_contr_command,
        if_dout => contr_command_dout,
        if_num_data_valid => contr_command_num_data_valid,
        if_fifo_cap => contr_command_fifo_cap,
        if_empty_n => contr_command_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_uniId_V_U : component run_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_2,
        if_full_n => contr_uniId_V_full_n,
        if_write => ap_channel_done_contr_uniId_V,
        if_dout => contr_uniId_V_dout,
        if_num_data_valid => contr_uniId_V_num_data_valid,
        if_fifo_cap => contr_uniId_V_fifo_cap,
        if_empty_n => contr_uniId_V_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_taskId_V_U : component run_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_1,
        if_full_n => contr_taskId_V_full_n,
        if_write => ap_channel_done_contr_taskId_V,
        if_dout => contr_taskId_V_dout,
        if_num_data_valid => contr_taskId_V_num_data_valid,
        if_fifo_cap => contr_taskId_V_fifo_cap,
        if_empty_n => contr_taskId_V_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_checkId_V_U : component run_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_0,
        if_full_n => contr_checkId_V_full_n,
        if_write => ap_channel_done_contr_checkId_V,
        if_dout => contr_checkId_V_dout,
        if_num_data_valid => contr_checkId_V_num_data_valid,
        if_fifo_cap => contr_checkId_V_fifo_cap,
        if_empty_n => contr_checkId_V_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_4,
        if_full_n => contr_AOV_full_n,
        if_write => ap_channel_done_contr_AOV,
        if_dout => contr_AOV_dout,
        if_num_data_valid => contr_AOV_num_data_valid,
        if_fifo_cap => contr_AOV_fifo_cap,
        if_empty_n => contr_AOV_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_1_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_5,
        if_full_n => contr_AOV_1_full_n,
        if_write => ap_channel_done_contr_AOV_1,
        if_dout => contr_AOV_1_dout,
        if_num_data_valid => contr_AOV_1_num_data_valid,
        if_fifo_cap => contr_AOV_1_fifo_cap,
        if_empty_n => contr_AOV_1_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_2_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_6,
        if_full_n => contr_AOV_2_full_n,
        if_write => ap_channel_done_contr_AOV_2,
        if_dout => contr_AOV_2_dout,
        if_num_data_valid => contr_AOV_2_num_data_valid,
        if_fifo_cap => contr_AOV_2_fifo_cap,
        if_empty_n => contr_AOV_2_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_3_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_7,
        if_full_n => contr_AOV_3_full_n,
        if_write => ap_channel_done_contr_AOV_3,
        if_dout => contr_AOV_3_dout,
        if_num_data_valid => contr_AOV_3_num_data_valid,
        if_fifo_cap => contr_AOV_3_fifo_cap,
        if_empty_n => contr_AOV_3_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_4_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_8,
        if_full_n => contr_AOV_4_full_n,
        if_write => ap_channel_done_contr_AOV_4,
        if_dout => contr_AOV_4_dout,
        if_num_data_valid => contr_AOV_4_num_data_valid,
        if_fifo_cap => contr_AOV_4_fifo_cap,
        if_empty_n => contr_AOV_4_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_5_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_9,
        if_full_n => contr_AOV_5_full_n,
        if_write => ap_channel_done_contr_AOV_5,
        if_dout => contr_AOV_5_dout,
        if_num_data_valid => contr_AOV_5_num_data_valid,
        if_fifo_cap => contr_AOV_5_fifo_cap,
        if_empty_n => contr_AOV_5_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_6_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_10,
        if_full_n => contr_AOV_6_full_n,
        if_write => ap_channel_done_contr_AOV_6,
        if_dout => contr_AOV_6_dout,
        if_num_data_valid => contr_AOV_6_num_data_valid,
        if_fifo_cap => contr_AOV_6_fifo_cap,
        if_empty_n => contr_AOV_6_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

    contr_AOV_7_U : component run_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_train_U0_ap_return_11,
        if_full_n => contr_AOV_7_full_n,
        if_write => ap_channel_done_contr_AOV_7,
        if_dout => contr_AOV_7_dout,
        if_num_data_valid => contr_AOV_7_num_data_valid,
        if_fifo_cap => contr_AOV_7_fifo_cap,
        if_empty_n => contr_AOV_7_empty_n,
        if_read => runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);





    ap_sync_reg_channel_write_contr_AOV_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV <= ap_sync_channel_write_contr_AOV;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_AOV_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV_1 <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV_1 <= ap_sync_channel_write_contr_AOV_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_AOV_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV_2 <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV_2 <= ap_sync_channel_write_contr_AOV_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_AOV_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV_3 <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV_3 <= ap_sync_channel_write_contr_AOV_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_AOV_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV_4 <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV_4 <= ap_sync_channel_write_contr_AOV_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_AOV_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV_5 <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV_5 <= ap_sync_channel_write_contr_AOV_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_AOV_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV_6 <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV_6 <= ap_sync_channel_write_contr_AOV_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_AOV_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_AOV_7 <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_AOV_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_AOV_7 <= ap_sync_channel_write_contr_AOV_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_checkId_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_checkId_V <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_checkId_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_checkId_V <= ap_sync_channel_write_contr_checkId_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_command_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_command <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_command <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_command <= ap_sync_channel_write_contr_command;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_taskId_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_taskId_V <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_taskId_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_taskId_V <= ap_sync_channel_write_contr_taskId_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_contr_uniId_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_contr_uniId_V <= ap_const_logic_0;
            else
                if (((read_train_U0_ap_done and read_train_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_contr_uniId_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_contr_uniId_V <= ap_sync_channel_write_contr_uniId_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_read_train_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_read_train_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_read_train_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_read_train_U0_ap_ready <= ap_sync_read_train_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready <= ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_contr_AOV <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV xor ap_const_logic_1));
    ap_channel_done_contr_AOV_1 <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV_1 xor ap_const_logic_1));
    ap_channel_done_contr_AOV_2 <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV_2 xor ap_const_logic_1));
    ap_channel_done_contr_AOV_3 <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV_3 xor ap_const_logic_1));
    ap_channel_done_contr_AOV_4 <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV_4 xor ap_const_logic_1));
    ap_channel_done_contr_AOV_5 <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV_5 xor ap_const_logic_1));
    ap_channel_done_contr_AOV_6 <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV_6 xor ap_const_logic_1));
    ap_channel_done_contr_AOV_7 <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_AOV_7 xor ap_const_logic_1));
    ap_channel_done_contr_checkId_V <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_checkId_V xor ap_const_logic_1));
    ap_channel_done_contr_command <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_command xor ap_const_logic_1));
    ap_channel_done_contr_taskId_V <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_taskId_V xor ap_const_logic_1));
    ap_channel_done_contr_uniId_V <= (read_train_U0_ap_done and (ap_sync_reg_channel_write_contr_uniId_V xor ap_const_logic_1));
    ap_done <= runTestAfterInit_Block_entry1119_proc7_U0_ap_done;
    ap_idle <= (runTestAfterInit_Block_entry1119_proc7_U0_ap_idle and read_train_U0_ap_idle and (contr_AOV_7_empty_n xor ap_const_logic_1) and (contr_AOV_6_empty_n xor ap_const_logic_1) and (contr_AOV_5_empty_n xor ap_const_logic_1) and (contr_AOV_4_empty_n xor ap_const_logic_1) and (contr_AOV_3_empty_n xor ap_const_logic_1) and (contr_AOV_2_empty_n xor ap_const_logic_1) and (contr_AOV_1_empty_n xor ap_const_logic_1) and (contr_AOV_empty_n xor ap_const_logic_1) and (contr_checkId_V_empty_n xor ap_const_logic_1) and (contr_taskId_V_empty_n xor ap_const_logic_1) and (contr_uniId_V_empty_n xor ap_const_logic_1) and (contr_command_empty_n xor ap_const_logic_1));
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_contr_AOV <= ((contr_AOV_full_n and ap_channel_done_contr_AOV) or ap_sync_reg_channel_write_contr_AOV);
    ap_sync_channel_write_contr_AOV_1 <= ((contr_AOV_1_full_n and ap_channel_done_contr_AOV_1) or ap_sync_reg_channel_write_contr_AOV_1);
    ap_sync_channel_write_contr_AOV_2 <= ((contr_AOV_2_full_n and ap_channel_done_contr_AOV_2) or ap_sync_reg_channel_write_contr_AOV_2);
    ap_sync_channel_write_contr_AOV_3 <= ((contr_AOV_3_full_n and ap_channel_done_contr_AOV_3) or ap_sync_reg_channel_write_contr_AOV_3);
    ap_sync_channel_write_contr_AOV_4 <= ((contr_AOV_4_full_n and ap_channel_done_contr_AOV_4) or ap_sync_reg_channel_write_contr_AOV_4);
    ap_sync_channel_write_contr_AOV_5 <= ((contr_AOV_5_full_n and ap_channel_done_contr_AOV_5) or ap_sync_reg_channel_write_contr_AOV_5);
    ap_sync_channel_write_contr_AOV_6 <= ((contr_AOV_6_full_n and ap_channel_done_contr_AOV_6) or ap_sync_reg_channel_write_contr_AOV_6);
    ap_sync_channel_write_contr_AOV_7 <= ((contr_AOV_7_full_n and ap_channel_done_contr_AOV_7) or ap_sync_reg_channel_write_contr_AOV_7);
    ap_sync_channel_write_contr_checkId_V <= ((contr_checkId_V_full_n and ap_channel_done_contr_checkId_V) or ap_sync_reg_channel_write_contr_checkId_V);
    ap_sync_channel_write_contr_command <= ((contr_command_full_n and ap_channel_done_contr_command) or ap_sync_reg_channel_write_contr_command);
    ap_sync_channel_write_contr_taskId_V <= ((contr_taskId_V_full_n and ap_channel_done_contr_taskId_V) or ap_sync_reg_channel_write_contr_taskId_V);
    ap_sync_channel_write_contr_uniId_V <= ((contr_uniId_V_full_n and ap_channel_done_contr_uniId_V) or ap_sync_reg_channel_write_contr_uniId_V);
    ap_sync_read_train_U0_ap_ready <= (read_train_U0_ap_ready or ap_sync_reg_read_train_U0_ap_ready);
    ap_sync_ready <= (ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready and ap_sync_read_train_U0_ap_ready);
    ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready <= (runTestAfterInit_Block_entry1119_proc7_U0_ap_ready or ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);
    copyInputAOV_out <= runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out;
    copyInputAOV_out_ap_vld <= runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out_ap_vld;
    errorInTask_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_address0;
    errorInTask_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_ce0;
    errorInTask_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_d0;
    errorInTask_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_we0;
    m_axi_gmem_ARADDR <= read_train_U0_m_axi_gmem_ARADDR;
    m_axi_gmem_ARBURST <= read_train_U0_m_axi_gmem_ARBURST;
    m_axi_gmem_ARCACHE <= read_train_U0_m_axi_gmem_ARCACHE;
    m_axi_gmem_ARID <= read_train_U0_m_axi_gmem_ARID;
    m_axi_gmem_ARLEN <= read_train_U0_m_axi_gmem_ARLEN;
    m_axi_gmem_ARLOCK <= read_train_U0_m_axi_gmem_ARLOCK;
    m_axi_gmem_ARPROT <= read_train_U0_m_axi_gmem_ARPROT;
    m_axi_gmem_ARQOS <= read_train_U0_m_axi_gmem_ARQOS;
    m_axi_gmem_ARREGION <= read_train_U0_m_axi_gmem_ARREGION;
    m_axi_gmem_ARSIZE <= read_train_U0_m_axi_gmem_ARSIZE;
    m_axi_gmem_ARUSER <= read_train_U0_m_axi_gmem_ARUSER;
    m_axi_gmem_ARVALID <= read_train_U0_m_axi_gmem_ARVALID;
    m_axi_gmem_AWADDR <= ap_const_lv32_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;
    m_axi_gmem_RREADY <= read_train_U0_m_axi_gmem_RREADY;
    m_axi_gmem_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv64_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    n_regions_V_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_address0;
    n_regions_V_address1 <= ap_const_lv6_0;
    n_regions_V_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_ce0;
    n_regions_V_ce1 <= ap_const_logic_0;
    n_regions_V_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_d0;
    n_regions_V_d1 <= ap_const_lv8_0;
    n_regions_V_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_we0;
    n_regions_V_we1 <= ap_const_logic_0;
    outcomeInRam_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_address0;
    outcomeInRam_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_ce0;
    outcomeInRam_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_d0;
    outcomeInRam_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_we0;
    read_train_U0_ap_continue <= (ap_sync_channel_write_contr_uniId_V and ap_sync_channel_write_contr_taskId_V and ap_sync_channel_write_contr_command and ap_sync_channel_write_contr_checkId_V and ap_sync_channel_write_contr_AOV_7 and ap_sync_channel_write_contr_AOV_6 and ap_sync_channel_write_contr_AOV_5 and ap_sync_channel_write_contr_AOV_4 and ap_sync_channel_write_contr_AOV_3 and ap_sync_channel_write_contr_AOV_2 and ap_sync_channel_write_contr_AOV_1 and ap_sync_channel_write_contr_AOV);
    read_train_U0_ap_start <= ((ap_sync_reg_read_train_U0_ap_ready xor ap_const_logic_1) and ap_start);
    regions_1_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address0;
    regions_1_address1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address1;
    regions_1_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce0;
    regions_1_ce1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce1;
    regions_1_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d0;
    regions_1_d1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d1;
    regions_1_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we0;
    regions_1_we1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we1;
    regions_2_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address0;
    regions_2_address1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address1;
    regions_2_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce0;
    regions_2_ce1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce1;
    regions_2_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d0;
    regions_2_d1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d1;
    regions_2_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we0;
    regions_2_we1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we1;
    regions_3_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address0;
    regions_3_address1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address1;
    regions_3_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce0;
    regions_3_ce1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce1;
    regions_3_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d0;
    regions_3_d1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d1;
    regions_3_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we0;
    regions_3_we1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we1;
    regions_4_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address0;
    regions_4_address1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address1;
    regions_4_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce0;
    regions_4_ce1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce1;
    regions_4_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d0;
    regions_4_d1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d1;
    regions_4_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we0;
    regions_4_we1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we1;
    regions_5_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address0;
    regions_5_address1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address1;
    regions_5_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce0;
    regions_5_ce1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce1;
    regions_5_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d0;
    regions_5_d1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d1;
    regions_5_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we0;
    regions_5_we1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we1;
    regions_address0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_address0;
    regions_address1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_address1;
    regions_ce0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_ce0;
    regions_ce1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_ce1;
    regions_d0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_d0;
    regions_d1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_d1;
    regions_we0 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_we0;
    regions_we1 <= runTestAfterInit_Block_entry1119_proc7_U0_regions_we1;
    runTestAfterInit_Block_entry1119_proc7_U0_ap_continue <= ap_continue;
    runTestAfterInit_Block_entry1119_proc7_U0_ap_start <= ((ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready xor ap_const_logic_1) and contr_uniId_V_empty_n and contr_taskId_V_empty_n and contr_command_empty_n and contr_checkId_V_empty_n and contr_AOV_empty_n and contr_AOV_7_empty_n and contr_AOV_6_empty_n and contr_AOV_5_empty_n and contr_AOV_4_empty_n and contr_AOV_3_empty_n and contr_AOV_2_empty_n and contr_AOV_1_empty_n and ap_start);
    toScheduler_TDATA <= runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TDATA;
    toScheduler_TVALID <= runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TVALID;
end behav;
