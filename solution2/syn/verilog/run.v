// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="run_run,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=18.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.139999,HLS_SYN_LAT=33,HLS_SYN_TPT=none,HLS_SYN_MEM=64,HLS_SYN_DSP=0,HLS_SYN_FF=9015,HLS_SYN_LUT=11512,HLS_VERSION=2022_1}" *)

module run (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 11;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] inputAOV;
wire   [7:0] readyForData;
wire   [7:0] copyInputAOV;
wire   [7:0] accel_mode;
wire   [767:0] trainedRegion_i;
wire   [767:0] trainedRegion_o;
wire   [7:0] IOCheckIdx;
wire   [7:0] IORegionIdx;
wire   [7:0] n_regions_in_i;
reg   [7:0] n_regions_in_o;
reg   [11:0] regions_address0;
reg    regions_ce0;
reg    regions_we0;
reg   [31:0] regions_d0;
wire   [31:0] regions_q0;
reg   [11:0] regions_address1;
reg    regions_ce1;
reg    regions_we1;
reg   [31:0] regions_d1;
wire   [31:0] regions_q1;
reg   [11:0] regions_2_address0;
reg    regions_2_ce0;
reg    regions_2_we0;
reg   [31:0] regions_2_d0;
wire   [31:0] regions_2_q0;
reg   [11:0] regions_2_address1;
reg    regions_2_ce1;
reg    regions_2_we1;
reg   [31:0] regions_2_d1;
wire   [31:0] regions_2_q1;
reg   [11:0] regions_4_address0;
reg    regions_4_ce0;
reg    regions_4_we0;
reg   [31:0] regions_4_d0;
wire   [31:0] regions_4_q0;
reg   [11:0] regions_4_address1;
reg    regions_4_ce1;
reg    regions_4_we1;
reg   [31:0] regions_4_d1;
wire   [31:0] regions_4_q1;
reg   [11:0] regions_1_address0;
reg    regions_1_ce0;
reg    regions_1_we0;
reg   [31:0] regions_1_d0;
wire   [31:0] regions_1_q0;
reg   [11:0] regions_1_address1;
reg    regions_1_ce1;
reg    regions_1_we1;
reg   [31:0] regions_1_d1;
wire   [31:0] regions_1_q1;
reg   [11:0] regions_3_address0;
reg    regions_3_ce0;
reg    regions_3_we0;
reg   [31:0] regions_3_d0;
wire   [31:0] regions_3_q0;
reg   [11:0] regions_3_address1;
reg    regions_3_ce1;
reg    regions_3_we1;
reg   [31:0] regions_3_d1;
wire   [31:0] regions_3_q1;
reg   [11:0] regions_5_address0;
reg    regions_5_ce0;
reg    regions_5_we0;
reg   [31:0] regions_5_d0;
wire   [31:0] regions_5_q0;
reg   [11:0] regions_5_address1;
reg    regions_5_ce1;
reg    regions_5_we1;
reg   [31:0] regions_5_d1;
wire   [31:0] regions_5_q1;
reg   [5:0] n_regions_V_address0;
reg    n_regions_V_ce0;
reg    n_regions_V_we0;
wire   [7:0] n_regions_V_q0;
wire   [7:0] accel_mode_read_read_fu_268_p2;
reg   [63:0] inputAOV_read_reg_1978;
wire   [0:0] trunc_ln647_fu_1194_p1;
reg   [0:0] trunc_ln647_reg_1983;
wire   [11:0] shl_ln724_fu_1225_p2;
reg   [11:0] shl_ln724_reg_1993;
wire   [63:0] zext_ln587_fu_1257_p1;
reg   [63:0] zext_ln587_reg_2068;
reg   [11:0] regions_addr_2_reg_2073;
reg   [11:0] regions_addr_3_reg_2078;
reg   [11:0] regions_addr_4_reg_2083;
reg   [11:0] regions_addr_5_reg_2088;
reg   [11:0] regions_addr_6_reg_2093;
reg   [11:0] regions_addr_7_reg_2098;
reg   [11:0] regions_1_addr_10_reg_2103;
reg   [11:0] regions_1_addr_11_reg_2108;
reg   [11:0] regions_1_addr_12_reg_2113;
reg   [11:0] regions_1_addr_13_reg_2118;
reg   [11:0] regions_1_addr_14_reg_2123;
reg   [11:0] regions_1_addr_15_reg_2128;
reg   [11:0] regions_2_addr_2_reg_2133;
reg   [11:0] regions_2_addr_3_reg_2138;
reg   [11:0] regions_2_addr_4_reg_2143;
reg   [11:0] regions_2_addr_5_reg_2148;
reg   [11:0] regions_2_addr_6_reg_2153;
reg   [11:0] regions_2_addr_7_reg_2158;
reg   [11:0] regions_3_addr_10_reg_2163;
reg   [11:0] regions_3_addr_11_reg_2168;
reg   [11:0] regions_3_addr_12_reg_2173;
reg   [11:0] regions_3_addr_13_reg_2178;
reg   [11:0] regions_3_addr_14_reg_2183;
reg   [11:0] regions_3_addr_15_reg_2188;
reg   [11:0] regions_4_addr_2_reg_2193;
reg   [11:0] regions_4_addr_3_reg_2198;
reg   [11:0] regions_4_addr_4_reg_2203;
reg   [11:0] regions_4_addr_5_reg_2208;
reg   [11:0] regions_4_addr_6_reg_2213;
reg   [11:0] regions_4_addr_7_reg_2218;
reg   [11:0] regions_5_addr_10_reg_2223;
reg   [11:0] regions_5_addr_11_reg_2228;
reg   [11:0] regions_5_addr_12_reg_2233;
reg   [11:0] regions_5_addr_13_reg_2238;
reg   [11:0] regions_5_addr_14_reg_2243;
reg   [11:0] regions_5_addr_15_reg_2248;
wire   [31:0] bitcast_ln709_2_fu_1447_p1;
reg   [31:0] bitcast_ln709_2_reg_2253;
wire   [31:0] bitcast_ln709_3_fu_1461_p1;
reg   [31:0] bitcast_ln709_3_reg_2259;
wire   [31:0] bitcast_ln709_4_fu_1475_p1;
reg   [31:0] bitcast_ln709_4_reg_2265;
wire   [31:0] bitcast_ln709_5_fu_1489_p1;
reg   [31:0] bitcast_ln709_5_reg_2271;
wire   [31:0] bitcast_ln709_6_fu_1503_p1;
reg   [31:0] bitcast_ln709_6_reg_2277;
wire   [31:0] bitcast_ln709_7_fu_1517_p1;
reg   [31:0] bitcast_ln709_7_reg_2283;
wire   [31:0] bitcast_ln709_10_fu_1563_p1;
reg   [31:0] bitcast_ln709_10_reg_2289;
wire   [31:0] bitcast_ln709_11_fu_1577_p1;
reg   [31:0] bitcast_ln709_11_reg_2295;
wire   [31:0] bitcast_ln709_12_fu_1591_p1;
reg   [31:0] bitcast_ln709_12_reg_2301;
wire   [31:0] bitcast_ln709_13_fu_1605_p1;
reg   [31:0] bitcast_ln709_13_reg_2307;
wire   [31:0] bitcast_ln709_14_fu_1619_p1;
reg   [31:0] bitcast_ln709_14_reg_2313;
wire   [31:0] bitcast_ln709_15_fu_1633_p1;
reg   [31:0] bitcast_ln709_15_reg_2319;
wire   [31:0] bitcast_ln709_18_fu_1679_p1;
reg   [31:0] bitcast_ln709_18_reg_2325;
wire   [31:0] bitcast_ln709_19_fu_1693_p1;
reg   [31:0] bitcast_ln709_19_reg_2331;
wire   [31:0] bitcast_ln709_20_fu_1707_p1;
reg   [31:0] bitcast_ln709_20_reg_2337;
wire   [31:0] bitcast_ln709_21_fu_1721_p1;
reg   [31:0] bitcast_ln709_21_reg_2343;
wire   [31:0] bitcast_ln709_22_fu_1735_p1;
reg   [31:0] bitcast_ln709_22_reg_2349;
wire   [31:0] bitcast_ln709_23_fu_1749_p1;
reg   [31:0] bitcast_ln709_23_reg_2355;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_1140_p4;
reg   [31:0] tmp_22_reg_2421;
wire   [31:0] grp_fu_1149_p4;
reg   [31:0] tmp_23_reg_2426;
wire   [31:0] grp_fu_1158_p4;
reg   [31:0] tmp_30_reg_2431;
wire   [31:0] grp_fu_1167_p4;
reg   [31:0] tmp_31_reg_2436;
wire   [31:0] grp_fu_1176_p4;
reg   [31:0] tmp_38_reg_2441;
wire   [31:0] grp_fu_1185_p4;
reg   [31:0] tmp_39_reg_2446;
wire    ap_CS_fsm_state5;
reg   [31:0] tmp_24_reg_2511;
reg   [31:0] tmp_25_reg_2516;
reg   [31:0] tmp_32_reg_2521;
reg   [31:0] tmp_33_reg_2526;
reg   [31:0] tmp_40_reg_2531;
reg   [31:0] tmp_41_reg_2536;
wire    ap_CS_fsm_state6;
reg   [31:0] tmp_26_reg_2601;
reg   [31:0] tmp_27_reg_2606;
reg   [31:0] tmp_34_reg_2611;
reg   [31:0] tmp_35_reg_2616;
reg   [31:0] tmp_42_reg_2621;
reg   [31:0] tmp_43_reg_2626;
wire    grp_runTestAfterInit_fu_1109_m_axi_gmem_AWVALID;
wire   [63:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWADDR;
wire   [0:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWID;
wire   [31:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWLEN;
wire   [2:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWSIZE;
wire   [1:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWBURST;
wire   [1:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWLOCK;
wire   [3:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWCACHE;
wire   [2:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWPROT;
wire   [3:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWQOS;
wire   [3:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWREGION;
wire   [0:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_AWUSER;
wire    grp_runTestAfterInit_fu_1109_m_axi_gmem_WVALID;
wire   [511:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_WDATA;
wire   [63:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_WSTRB;
wire    grp_runTestAfterInit_fu_1109_m_axi_gmem_WLAST;
wire   [0:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_WID;
wire   [0:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_WUSER;
wire    grp_runTestAfterInit_fu_1109_m_axi_gmem_ARVALID;
wire   [63:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARADDR;
wire   [0:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARID;
wire   [31:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARLEN;
wire   [2:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARSIZE;
wire   [1:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARBURST;
wire   [1:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARLOCK;
wire   [3:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARCACHE;
wire   [2:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARPROT;
wire   [3:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARQOS;
wire   [3:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARREGION;
wire   [0:0] grp_runTestAfterInit_fu_1109_m_axi_gmem_ARUSER;
wire    grp_runTestAfterInit_fu_1109_m_axi_gmem_RREADY;
wire    grp_runTestAfterInit_fu_1109_m_axi_gmem_BREADY;
wire   [3:0] grp_runTestAfterInit_fu_1109_outcomeInRam_address0;
wire    grp_runTestAfterInit_fu_1109_outcomeInRam_ce0;
wire   [287:0] grp_runTestAfterInit_fu_1109_outcomeInRam_d0;
wire   [35:0] grp_runTestAfterInit_fu_1109_outcomeInRam_we0;
wire   [3:0] grp_runTestAfterInit_fu_1109_errorInTask_address0;
wire    grp_runTestAfterInit_fu_1109_errorInTask_ce0;
wire   [0:0] grp_runTestAfterInit_fu_1109_errorInTask_d0;
wire    grp_runTestAfterInit_fu_1109_errorInTask_we0;
wire   [5:0] grp_runTestAfterInit_fu_1109_n_regions_V_address0;
wire    grp_runTestAfterInit_fu_1109_n_regions_V_ce0;
wire   [7:0] grp_runTestAfterInit_fu_1109_n_regions_V_d0;
wire    grp_runTestAfterInit_fu_1109_n_regions_V_we0;
wire   [5:0] grp_runTestAfterInit_fu_1109_n_regions_V_address1;
wire    grp_runTestAfterInit_fu_1109_n_regions_V_ce1;
wire   [7:0] grp_runTestAfterInit_fu_1109_n_regions_V_d1;
wire    grp_runTestAfterInit_fu_1109_n_regions_V_we1;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_address0;
wire    grp_runTestAfterInit_fu_1109_regions_ce0;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_d0;
wire    grp_runTestAfterInit_fu_1109_regions_we0;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_address1;
wire    grp_runTestAfterInit_fu_1109_regions_ce1;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_d1;
wire    grp_runTestAfterInit_fu_1109_regions_we1;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_1_address0;
wire    grp_runTestAfterInit_fu_1109_regions_1_ce0;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_1_d0;
wire    grp_runTestAfterInit_fu_1109_regions_1_we0;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_1_address1;
wire    grp_runTestAfterInit_fu_1109_regions_1_ce1;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_1_d1;
wire    grp_runTestAfterInit_fu_1109_regions_1_we1;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_2_address0;
wire    grp_runTestAfterInit_fu_1109_regions_2_ce0;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_2_d0;
wire    grp_runTestAfterInit_fu_1109_regions_2_we0;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_2_address1;
wire    grp_runTestAfterInit_fu_1109_regions_2_ce1;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_2_d1;
wire    grp_runTestAfterInit_fu_1109_regions_2_we1;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_3_address0;
wire    grp_runTestAfterInit_fu_1109_regions_3_ce0;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_3_d0;
wire    grp_runTestAfterInit_fu_1109_regions_3_we0;
wire   [11:0] grp_runTestAfterInit_fu_1109_regions_3_address1;
wire    grp_runTestAfterInit_fu_1109_regions_3_ce1;
wire   [31:0] grp_runTestAfterInit_fu_1109_regions_3_d1;
wire    grp_runTestAfterInit_fu_1109_regions_3_we1;
wire    grp_runTestAfterInit_fu_1109_ap_start;
wire    grp_runTestAfterInit_fu_1109_ap_done;
wire    grp_runTestAfterInit_fu_1109_ap_ready;
wire    grp_runTestAfterInit_fu_1109_ap_idle;
reg    grp_runTestAfterInit_fu_1109_ap_continue;
wire    gmem_AWREADY;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [511:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    grp_runTestAfterInit_fu_1109_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_sync_grp_runTestAfterInit_fu_1109_ap_ready;
wire    ap_sync_grp_runTestAfterInit_fu_1109_ap_done;
reg    ap_block_state3_on_subcall_done;
reg    ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_ready;
reg    ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_done;
wire   [63:0] zext_ln724_2_fu_1231_p1;
wire   [63:0] zext_ln724_3_fu_1247_p1;
wire   [63:0] zext_ln587_1_fu_1198_p1;
wire   [63:0] zext_ln709_2_fu_1299_p1;
wire   [63:0] zext_ln709_3_fu_1315_p1;
wire   [63:0] zext_ln709_4_fu_1331_p1;
wire   [63:0] zext_ln709_5_fu_1347_p1;
wire   [63:0] zext_ln709_6_fu_1363_p1;
wire   [63:0] zext_ln709_7_fu_1379_p1;
wire   [63:0] zext_ln709_8_fu_1395_p1;
wire   [63:0] zext_ln709_9_fu_1411_p1;
wire   [63:0] zext_ln724_4_fu_1758_p1;
wire   [63:0] zext_ln724_5_fu_1773_p1;
wire   [63:0] zext_ln724_6_fu_1788_p1;
wire   [63:0] zext_ln724_7_fu_1803_p1;
wire   [63:0] zext_ln724_8_fu_1818_p1;
wire   [63:0] zext_ln724_9_fu_1833_p1;
wire    ap_CS_fsm_state10;
reg   [7:0] n_regions_in_o_preg;
wire    ap_CS_fsm_state7;
wire   [31:0] bitcast_ln709_fu_1277_p1;
wire   [31:0] bitcast_ln709_1_fu_1431_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [31:0] bitcast_ln709_8_fu_1531_p1;
wire   [31:0] bitcast_ln709_9_fu_1547_p1;
wire   [31:0] bitcast_ln709_16_fu_1647_p1;
wire   [31:0] bitcast_ln709_17_fu_1663_p1;
wire   [10:0] tmp_49_fu_1203_p3;
wire   [6:0] grp_fu_1130_p4;
wire   [11:0] zext_ln724_fu_1211_p1;
wire   [11:0] zext_ln724_1_fu_1215_p1;
wire   [11:0] add_ln724_fu_1219_p2;
wire   [11:0] or_ln724_fu_1241_p2;
wire   [10:0] tmp_s_fu_1261_p3;
wire   [31:0] trunc_ln709_fu_1273_p1;
wire   [11:0] zext_ln709_fu_1269_p1;
wire   [11:0] zext_ln709_1_fu_1283_p1;
wire   [11:0] add_ln709_fu_1287_p2;
wire   [11:0] shl_ln709_fu_1293_p2;
wire   [11:0] or_ln709_fu_1309_p2;
wire   [11:0] or_ln709_1_fu_1325_p2;
wire   [11:0] or_ln709_2_fu_1341_p2;
wire   [11:0] or_ln709_3_fu_1357_p2;
wire   [11:0] or_ln709_4_fu_1373_p2;
wire   [11:0] or_ln709_5_fu_1389_p2;
wire   [11:0] or_ln709_6_fu_1405_p2;
wire   [31:0] tmp_fu_1421_p4;
wire   [31:0] tmp_46_fu_1437_p4;
wire   [31:0] tmp_47_fu_1451_p4;
wire   [31:0] tmp_48_fu_1465_p4;
wire   [31:0] tmp_50_fu_1479_p4;
wire   [31:0] tmp_51_fu_1493_p4;
wire   [31:0] tmp_52_fu_1507_p4;
wire   [31:0] tmp_53_fu_1521_p4;
wire   [31:0] tmp_54_fu_1537_p4;
wire   [31:0] tmp_55_fu_1553_p4;
wire   [31:0] tmp_56_fu_1567_p4;
wire   [31:0] tmp_57_fu_1581_p4;
wire   [31:0] tmp_58_fu_1595_p4;
wire   [31:0] tmp_59_fu_1609_p4;
wire   [31:0] tmp_60_fu_1623_p4;
wire   [31:0] tmp_61_fu_1637_p4;
wire   [31:0] tmp_62_fu_1653_p4;
wire   [31:0] tmp_63_fu_1669_p4;
wire   [31:0] tmp_64_fu_1683_p4;
wire   [31:0] tmp_65_fu_1697_p4;
wire   [31:0] tmp_66_fu_1711_p4;
wire   [31:0] tmp_67_fu_1725_p4;
wire   [31:0] tmp_68_fu_1739_p4;
wire   [11:0] or_ln724_1_fu_1753_p2;
wire   [11:0] or_ln724_2_fu_1768_p2;
wire   [11:0] or_ln724_3_fu_1783_p2;
wire   [11:0] or_ln724_4_fu_1798_p2;
wire   [11:0] or_ln724_5_fu_1813_p2;
wire   [11:0] or_ln724_6_fu_1828_p2;
wire   [31:0] bitcast_ln724_23_fu_1917_p1;
wire   [31:0] bitcast_ln724_22_fu_1913_p1;
wire   [31:0] bitcast_ln724_21_fu_1910_p1;
wire   [31:0] bitcast_ln724_20_fu_1907_p1;
wire   [31:0] bitcast_ln724_19_fu_1904_p1;
wire   [31:0] bitcast_ln724_18_fu_1901_p1;
wire   [31:0] bitcast_ln724_17_fu_1898_p1;
wire   [31:0] bitcast_ln724_16_fu_1895_p1;
wire   [31:0] bitcast_ln724_15_fu_1891_p1;
wire   [31:0] bitcast_ln724_14_fu_1887_p1;
wire   [31:0] bitcast_ln724_13_fu_1884_p1;
wire   [31:0] bitcast_ln724_12_fu_1881_p1;
wire   [31:0] bitcast_ln724_11_fu_1878_p1;
wire   [31:0] bitcast_ln724_10_fu_1875_p1;
wire   [31:0] bitcast_ln724_9_fu_1872_p1;
wire   [31:0] bitcast_ln724_8_fu_1869_p1;
wire   [31:0] bitcast_ln724_7_fu_1865_p1;
wire   [31:0] bitcast_ln724_6_fu_1861_p1;
wire   [31:0] bitcast_ln724_5_fu_1858_p1;
wire   [31:0] bitcast_ln724_4_fu_1855_p1;
wire   [31:0] bitcast_ln724_3_fu_1852_p1;
wire   [31:0] bitcast_ln724_2_fu_1849_p1;
wire   [31:0] bitcast_ln724_1_fu_1846_p1;
wire   [31:0] bitcast_ln724_fu_1843_p1;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 12'd1;
#0 grp_runTestAfterInit_fu_1109_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_ready = 1'b0;
#0 ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_done = 1'b0;
#0 n_regions_in_o_preg = 8'd0;
end

run_regions_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
regions_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(regions_address0),
    .ce0(regions_ce0),
    .we0(regions_we0),
    .d0(regions_d0),
    .q0(regions_q0),
    .address1(regions_address1),
    .ce1(regions_ce1),
    .we1(regions_we1),
    .d1(regions_d1),
    .q1(regions_q1)
);

run_regions_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
regions_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(regions_2_address0),
    .ce0(regions_2_ce0),
    .we0(regions_2_we0),
    .d0(regions_2_d0),
    .q0(regions_2_q0),
    .address1(regions_2_address1),
    .ce1(regions_2_ce1),
    .we1(regions_2_we1),
    .d1(regions_2_d1),
    .q1(regions_2_q1)
);

run_regions_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
regions_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(regions_4_address0),
    .ce0(regions_4_ce0),
    .we0(regions_4_we0),
    .d0(regions_4_d0),
    .q0(regions_4_q0),
    .address1(regions_4_address1),
    .ce1(regions_4_ce1),
    .we1(regions_4_we1),
    .d1(regions_4_d1),
    .q1(regions_4_q1)
);

run_regions_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
regions_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(regions_1_address0),
    .ce0(regions_1_ce0),
    .we0(regions_1_we0),
    .d0(regions_1_d0),
    .q0(regions_1_q0),
    .address1(regions_1_address1),
    .ce1(regions_1_ce1),
    .we1(regions_1_we1),
    .d1(regions_1_d1),
    .q1(regions_1_q1)
);

run_regions_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
regions_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(regions_3_address0),
    .ce0(regions_3_ce0),
    .we0(regions_3_we0),
    .d0(regions_3_d0),
    .q0(regions_3_q0),
    .address1(regions_3_address1),
    .ce1(regions_3_ce1),
    .we1(regions_3_we1),
    .d1(regions_3_d1),
    .q1(regions_3_q1)
);

run_regions_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
regions_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(regions_5_address0),
    .ce0(regions_5_ce0),
    .we0(regions_5_we0),
    .d0(regions_5_d0),
    .q0(regions_5_q0),
    .address1(regions_5_address1),
    .ce1(regions_5_ce1),
    .we1(regions_5_we1),
    .d1(regions_5_d1),
    .q1(regions_5_q1)
);

run_n_regions_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
n_regions_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(n_regions_V_address0),
    .ce0(n_regions_V_ce0),
    .we0(n_regions_V_we0),
    .d0(n_regions_in_i),
    .q0(n_regions_V_q0)
);

run_runTestAfterInit grp_runTestAfterInit_fu_1109(
    .m_axi_gmem_AWVALID(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_runTestAfterInit_fu_1109_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_runTestAfterInit_fu_1109_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_runTestAfterInit_fu_1109_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_runTestAfterInit_fu_1109_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_runTestAfterInit_fu_1109_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_runTestAfterInit_fu_1109_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_runTestAfterInit_fu_1109_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_runTestAfterInit_fu_1109_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_runTestAfterInit_fu_1109_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .inputAOV(inputAOV_read_reg_1978),
    .outcomeInRam_address0(grp_runTestAfterInit_fu_1109_outcomeInRam_address0),
    .outcomeInRam_ce0(grp_runTestAfterInit_fu_1109_outcomeInRam_ce0),
    .outcomeInRam_d0(grp_runTestAfterInit_fu_1109_outcomeInRam_d0),
    .outcomeInRam_q0(288'd0),
    .outcomeInRam_we0(grp_runTestAfterInit_fu_1109_outcomeInRam_we0),
    .errorInTask_address0(grp_runTestAfterInit_fu_1109_errorInTask_address0),
    .errorInTask_ce0(grp_runTestAfterInit_fu_1109_errorInTask_ce0),
    .errorInTask_d0(grp_runTestAfterInit_fu_1109_errorInTask_d0),
    .errorInTask_q0(1'd0),
    .errorInTask_we0(grp_runTestAfterInit_fu_1109_errorInTask_we0),
    .n_regions_V_address0(grp_runTestAfterInit_fu_1109_n_regions_V_address0),
    .n_regions_V_ce0(grp_runTestAfterInit_fu_1109_n_regions_V_ce0),
    .n_regions_V_d0(grp_runTestAfterInit_fu_1109_n_regions_V_d0),
    .n_regions_V_q0(n_regions_V_q0),
    .n_regions_V_we0(grp_runTestAfterInit_fu_1109_n_regions_V_we0),
    .n_regions_V_address1(grp_runTestAfterInit_fu_1109_n_regions_V_address1),
    .n_regions_V_ce1(grp_runTestAfterInit_fu_1109_n_regions_V_ce1),
    .n_regions_V_d1(grp_runTestAfterInit_fu_1109_n_regions_V_d1),
    .n_regions_V_q1(8'd0),
    .n_regions_V_we1(grp_runTestAfterInit_fu_1109_n_regions_V_we1),
    .regions_address0(grp_runTestAfterInit_fu_1109_regions_address0),
    .regions_ce0(grp_runTestAfterInit_fu_1109_regions_ce0),
    .regions_d0(grp_runTestAfterInit_fu_1109_regions_d0),
    .regions_q0(regions_q0),
    .regions_we0(grp_runTestAfterInit_fu_1109_regions_we0),
    .regions_address1(grp_runTestAfterInit_fu_1109_regions_address1),
    .regions_ce1(grp_runTestAfterInit_fu_1109_regions_ce1),
    .regions_d1(grp_runTestAfterInit_fu_1109_regions_d1),
    .regions_q1(32'd0),
    .regions_we1(grp_runTestAfterInit_fu_1109_regions_we1),
    .regions_1_address0(grp_runTestAfterInit_fu_1109_regions_1_address0),
    .regions_1_ce0(grp_runTestAfterInit_fu_1109_regions_1_ce0),
    .regions_1_d0(grp_runTestAfterInit_fu_1109_regions_1_d0),
    .regions_1_q0(regions_1_q0),
    .regions_1_we0(grp_runTestAfterInit_fu_1109_regions_1_we0),
    .regions_1_address1(grp_runTestAfterInit_fu_1109_regions_1_address1),
    .regions_1_ce1(grp_runTestAfterInit_fu_1109_regions_1_ce1),
    .regions_1_d1(grp_runTestAfterInit_fu_1109_regions_1_d1),
    .regions_1_q1(32'd0),
    .regions_1_we1(grp_runTestAfterInit_fu_1109_regions_1_we1),
    .regions_2_address0(grp_runTestAfterInit_fu_1109_regions_2_address0),
    .regions_2_ce0(grp_runTestAfterInit_fu_1109_regions_2_ce0),
    .regions_2_d0(grp_runTestAfterInit_fu_1109_regions_2_d0),
    .regions_2_q0(regions_2_q0),
    .regions_2_we0(grp_runTestAfterInit_fu_1109_regions_2_we0),
    .regions_2_address1(grp_runTestAfterInit_fu_1109_regions_2_address1),
    .regions_2_ce1(grp_runTestAfterInit_fu_1109_regions_2_ce1),
    .regions_2_d1(grp_runTestAfterInit_fu_1109_regions_2_d1),
    .regions_2_q1(32'd0),
    .regions_2_we1(grp_runTestAfterInit_fu_1109_regions_2_we1),
    .regions_3_address0(grp_runTestAfterInit_fu_1109_regions_3_address0),
    .regions_3_ce0(grp_runTestAfterInit_fu_1109_regions_3_ce0),
    .regions_3_d0(grp_runTestAfterInit_fu_1109_regions_3_d0),
    .regions_3_q0(regions_3_q0),
    .regions_3_we0(grp_runTestAfterInit_fu_1109_regions_3_we0),
    .regions_3_address1(grp_runTestAfterInit_fu_1109_regions_3_address1),
    .regions_3_ce1(grp_runTestAfterInit_fu_1109_regions_3_ce1),
    .regions_3_d1(grp_runTestAfterInit_fu_1109_regions_3_d1),
    .regions_3_q1(32'd0),
    .regions_3_we1(grp_runTestAfterInit_fu_1109_regions_3_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .inputAOV_ap_vld(1'b1),
    .ap_start(grp_runTestAfterInit_fu_1109_ap_start),
    .ap_done(grp_runTestAfterInit_fu_1109_ap_done),
    .ap_ready(grp_runTestAfterInit_fu_1109_ap_ready),
    .ap_idle(grp_runTestAfterInit_fu_1109_ap_idle),
    .ap_continue(grp_runTestAfterInit_fu_1109_ap_continue)
);

run_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .errorInTask_address0(grp_runTestAfterInit_fu_1109_errorInTask_address0),
    .errorInTask_ce0(grp_runTestAfterInit_fu_1109_errorInTask_ce0),
    .errorInTask_we0(grp_runTestAfterInit_fu_1109_errorInTask_we0),
    .errorInTask_d0(grp_runTestAfterInit_fu_1109_errorInTask_d0),
    .inputAOV(inputAOV),
    .readyForData(readyForData),
    .copyInputAOV(copyInputAOV),
    .accel_mode(accel_mode),
    .trainedRegion_i(trainedRegion_i),
    .trainedRegion_o(trainedRegion_o),
    .IOCheckIdx(IOCheckIdx),
    .IORegionIdx(IORegionIdx),
    .n_regions_in_o(n_regions_in_o),
    .n_regions_in_i(n_regions_in_i),
    .outcomeInRam_address0(grp_runTestAfterInit_fu_1109_outcomeInRam_address0),
    .outcomeInRam_ce0(grp_runTestAfterInit_fu_1109_outcomeInRam_ce0),
    .outcomeInRam_we0(grp_runTestAfterInit_fu_1109_outcomeInRam_we0),
    .outcomeInRam_d0(grp_runTestAfterInit_fu_1109_outcomeInRam_d0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

run_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_DW( 512 ),
    .USER_AW( 64 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARADDR),
    .I_ARLEN(grp_runTestAfterInit_fu_1109_m_axi_gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(512'd0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U134(
    .din0(regions_q1),
    .din1(regions_1_q1),
    .din2(trunc_ln647_reg_1983),
    .dout(grp_fu_1140_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U135(
    .din0(regions_q0),
    .din1(regions_1_q0),
    .din2(trunc_ln647_reg_1983),
    .dout(grp_fu_1149_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U136(
    .din0(regions_2_q1),
    .din1(regions_3_q1),
    .din2(trunc_ln647_reg_1983),
    .dout(grp_fu_1158_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U137(
    .din0(regions_2_q0),
    .din1(regions_3_q0),
    .din2(trunc_ln647_reg_1983),
    .dout(grp_fu_1167_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U138(
    .din0(regions_4_q1),
    .din1(regions_5_q1),
    .din2(trunc_ln647_reg_1983),
    .dout(grp_fu_1176_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U139(
    .din0(regions_4_q0),
    .din1(regions_5_q0),
    .din2(trunc_ln647_reg_1983),
    .dout(grp_fu_1185_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_done <= 1'b0;
        end else if ((grp_runTestAfterInit_fu_1109_ap_done == 1'b1)) begin
            ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state3_on_subcall_done) & (8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_ready <= 1'b0;
        end else if ((grp_runTestAfterInit_fu_1109_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runTestAfterInit_fu_1109_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) | ((8'd3 == accel_mode) & (ap_sync_grp_runTestAfterInit_fu_1109_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_runTestAfterInit_fu_1109_ap_start_reg <= 1'b1;
        end else if ((grp_runTestAfterInit_fu_1109_ap_ready == 1'b1)) begin
            grp_runTestAfterInit_fu_1109_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        n_regions_in_o_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            n_regions_in_o_preg <= n_regions_V_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((8'd1 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        bitcast_ln709_10_reg_2289 <= bitcast_ln709_10_fu_1563_p1;
        bitcast_ln709_11_reg_2295 <= bitcast_ln709_11_fu_1577_p1;
        bitcast_ln709_12_reg_2301 <= bitcast_ln709_12_fu_1591_p1;
        bitcast_ln709_13_reg_2307 <= bitcast_ln709_13_fu_1605_p1;
        bitcast_ln709_14_reg_2313 <= bitcast_ln709_14_fu_1619_p1;
        bitcast_ln709_15_reg_2319 <= bitcast_ln709_15_fu_1633_p1;
        bitcast_ln709_18_reg_2325 <= bitcast_ln709_18_fu_1679_p1;
        bitcast_ln709_19_reg_2331 <= bitcast_ln709_19_fu_1693_p1;
        bitcast_ln709_20_reg_2337 <= bitcast_ln709_20_fu_1707_p1;
        bitcast_ln709_21_reg_2343 <= bitcast_ln709_21_fu_1721_p1;
        bitcast_ln709_22_reg_2349 <= bitcast_ln709_22_fu_1735_p1;
        bitcast_ln709_23_reg_2355 <= bitcast_ln709_23_fu_1749_p1;
        bitcast_ln709_2_reg_2253 <= bitcast_ln709_2_fu_1447_p1;
        bitcast_ln709_3_reg_2259 <= bitcast_ln709_3_fu_1461_p1;
        bitcast_ln709_4_reg_2265 <= bitcast_ln709_4_fu_1475_p1;
        bitcast_ln709_5_reg_2271 <= bitcast_ln709_5_fu_1489_p1;
        bitcast_ln709_6_reg_2277 <= bitcast_ln709_6_fu_1503_p1;
        bitcast_ln709_7_reg_2283 <= bitcast_ln709_7_fu_1517_p1;
        regions_1_addr_10_reg_2103[11 : 3] <= zext_ln709_4_fu_1331_p1[11 : 3];
        regions_1_addr_11_reg_2108[11 : 3] <= zext_ln709_5_fu_1347_p1[11 : 3];
        regions_1_addr_12_reg_2113[11 : 3] <= zext_ln709_6_fu_1363_p1[11 : 3];
        regions_1_addr_13_reg_2118[11 : 3] <= zext_ln709_7_fu_1379_p1[11 : 3];
        regions_1_addr_14_reg_2123[11 : 3] <= zext_ln709_8_fu_1395_p1[11 : 3];
        regions_1_addr_15_reg_2128[11 : 3] <= zext_ln709_9_fu_1411_p1[11 : 3];
        regions_2_addr_2_reg_2133[11 : 3] <= zext_ln709_4_fu_1331_p1[11 : 3];
        regions_2_addr_3_reg_2138[11 : 3] <= zext_ln709_5_fu_1347_p1[11 : 3];
        regions_2_addr_4_reg_2143[11 : 3] <= zext_ln709_6_fu_1363_p1[11 : 3];
        regions_2_addr_5_reg_2148[11 : 3] <= zext_ln709_7_fu_1379_p1[11 : 3];
        regions_2_addr_6_reg_2153[11 : 3] <= zext_ln709_8_fu_1395_p1[11 : 3];
        regions_2_addr_7_reg_2158[11 : 3] <= zext_ln709_9_fu_1411_p1[11 : 3];
        regions_3_addr_10_reg_2163[11 : 3] <= zext_ln709_4_fu_1331_p1[11 : 3];
        regions_3_addr_11_reg_2168[11 : 3] <= zext_ln709_5_fu_1347_p1[11 : 3];
        regions_3_addr_12_reg_2173[11 : 3] <= zext_ln709_6_fu_1363_p1[11 : 3];
        regions_3_addr_13_reg_2178[11 : 3] <= zext_ln709_7_fu_1379_p1[11 : 3];
        regions_3_addr_14_reg_2183[11 : 3] <= zext_ln709_8_fu_1395_p1[11 : 3];
        regions_3_addr_15_reg_2188[11 : 3] <= zext_ln709_9_fu_1411_p1[11 : 3];
        regions_4_addr_2_reg_2193[11 : 3] <= zext_ln709_4_fu_1331_p1[11 : 3];
        regions_4_addr_3_reg_2198[11 : 3] <= zext_ln709_5_fu_1347_p1[11 : 3];
        regions_4_addr_4_reg_2203[11 : 3] <= zext_ln709_6_fu_1363_p1[11 : 3];
        regions_4_addr_5_reg_2208[11 : 3] <= zext_ln709_7_fu_1379_p1[11 : 3];
        regions_4_addr_6_reg_2213[11 : 3] <= zext_ln709_8_fu_1395_p1[11 : 3];
        regions_4_addr_7_reg_2218[11 : 3] <= zext_ln709_9_fu_1411_p1[11 : 3];
        regions_5_addr_10_reg_2223[11 : 3] <= zext_ln709_4_fu_1331_p1[11 : 3];
        regions_5_addr_11_reg_2228[11 : 3] <= zext_ln709_5_fu_1347_p1[11 : 3];
        regions_5_addr_12_reg_2233[11 : 3] <= zext_ln709_6_fu_1363_p1[11 : 3];
        regions_5_addr_13_reg_2238[11 : 3] <= zext_ln709_7_fu_1379_p1[11 : 3];
        regions_5_addr_14_reg_2243[11 : 3] <= zext_ln709_8_fu_1395_p1[11 : 3];
        regions_5_addr_15_reg_2248[11 : 3] <= zext_ln709_9_fu_1411_p1[11 : 3];
        regions_addr_2_reg_2073[11 : 3] <= zext_ln709_4_fu_1331_p1[11 : 3];
        regions_addr_3_reg_2078[11 : 3] <= zext_ln709_5_fu_1347_p1[11 : 3];
        regions_addr_4_reg_2083[11 : 3] <= zext_ln709_6_fu_1363_p1[11 : 3];
        regions_addr_5_reg_2088[11 : 3] <= zext_ln709_7_fu_1379_p1[11 : 3];
        regions_addr_6_reg_2093[11 : 3] <= zext_ln709_8_fu_1395_p1[11 : 3];
        regions_addr_7_reg_2098[11 : 3] <= zext_ln709_9_fu_1411_p1[11 : 3];
        zext_ln587_reg_2068[7 : 0] <= zext_ln587_fu_1257_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        inputAOV_read_reg_1978 <= inputAOV;
        trunc_ln647_reg_1983 <= trunc_ln647_fu_1194_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        shl_ln724_reg_1993[11 : 3] <= shl_ln724_fu_1225_p2[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_22_reg_2421 <= grp_fu_1140_p4;
        tmp_23_reg_2426 <= grp_fu_1149_p4;
        tmp_30_reg_2431 <= grp_fu_1158_p4;
        tmp_31_reg_2436 <= grp_fu_1167_p4;
        tmp_38_reg_2441 <= grp_fu_1176_p4;
        tmp_39_reg_2446 <= grp_fu_1185_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_24_reg_2511 <= grp_fu_1140_p4;
        tmp_25_reg_2516 <= grp_fu_1149_p4;
        tmp_32_reg_2521 <= grp_fu_1158_p4;
        tmp_33_reg_2526 <= grp_fu_1167_p4;
        tmp_40_reg_2531 <= grp_fu_1176_p4;
        tmp_41_reg_2536 <= grp_fu_1185_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_26_reg_2601 <= grp_fu_1140_p4;
        tmp_27_reg_2606 <= grp_fu_1149_p4;
        tmp_34_reg_2611 <= grp_fu_1158_p4;
        tmp_35_reg_2616 <= grp_fu_1167_p4;
        tmp_42_reg_2621 <= grp_fu_1176_p4;
        tmp_43_reg_2626 <= grp_fu_1185_p4;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_ARVALID = grp_runTestAfterInit_fu_1109_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_RREADY = grp_runTestAfterInit_fu_1109_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_runTestAfterInit_fu_1109_ap_continue = 1'b1;
    end else begin
        grp_runTestAfterInit_fu_1109_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        n_regions_V_address0 = zext_ln587_reg_2068;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        n_regions_V_address0 = zext_ln587_1_fu_1198_p1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        n_regions_V_address0 = grp_runTestAfterInit_fu_1109_n_regions_V_address0;
    end else begin
        n_regions_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        n_regions_V_ce0 = 1'b1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        n_regions_V_ce0 = grp_runTestAfterInit_fu_1109_n_regions_V_ce0;
    end else begin
        n_regions_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        n_regions_V_we0 = 1'b1;
    end else begin
        n_regions_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        n_regions_in_o = n_regions_V_q0;
    end else begin
        n_regions_in_o = n_regions_in_o_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_1_address0 = regions_1_addr_13_reg_2118;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_1_address0 = regions_1_addr_11_reg_2108;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_1_address0 = regions_1_addr_15_reg_2128;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_1_address0 = zext_ln724_9_fu_1833_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_1_address0 = zext_ln724_7_fu_1803_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_1_address0 = zext_ln724_5_fu_1773_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_1_address0 = zext_ln709_3_fu_1315_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_1_address0 = zext_ln724_3_fu_1247_p1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_1_address0 = grp_runTestAfterInit_fu_1109_regions_1_address0;
    end else begin
        regions_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_1_address1 = regions_1_addr_12_reg_2113;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_1_address1 = regions_1_addr_10_reg_2103;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_1_address1 = regions_1_addr_14_reg_2123;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_1_address1 = zext_ln724_8_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_1_address1 = zext_ln724_6_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_1_address1 = zext_ln724_4_fu_1758_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_1_address1 = zext_ln709_2_fu_1299_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_1_address1 = zext_ln724_2_fu_1231_p1;
    end else begin
        regions_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_1_ce0 = 1'b1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_1_ce0 = grp_runTestAfterInit_fu_1109_regions_1_ce0;
    end else begin
        regions_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_1_ce1 = 1'b1;
    end else begin
        regions_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_1_d0 = bitcast_ln709_5_reg_2271;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_1_d0 = bitcast_ln709_3_reg_2259;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_1_d0 = bitcast_ln709_7_reg_2283;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_1_d0 = bitcast_ln709_1_fu_1431_p1;
    end else begin
        regions_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_1_d1 = bitcast_ln709_4_reg_2265;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_1_d1 = bitcast_ln709_2_reg_2253;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_1_d1 = bitcast_ln709_6_reg_2277;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_1_d1 = bitcast_ln709_fu_1277_p1;
    end else begin
        regions_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((trunc_ln647_reg_1983 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_1_we0 = 1'b1;
    end else begin
        regions_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((trunc_ln647_reg_1983 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_1_we1 = 1'b1;
    end else begin
        regions_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_2_address0 = regions_2_addr_7_reg_2158;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_2_address0 = regions_2_addr_5_reg_2148;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_2_address0 = regions_2_addr_3_reg_2138;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_2_address0 = zext_ln724_9_fu_1833_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_2_address0 = zext_ln724_7_fu_1803_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_2_address0 = zext_ln724_5_fu_1773_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_2_address0 = zext_ln709_3_fu_1315_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_2_address0 = zext_ln724_3_fu_1247_p1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_2_address0 = grp_runTestAfterInit_fu_1109_regions_2_address0;
    end else begin
        regions_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_2_address1 = regions_2_addr_6_reg_2153;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_2_address1 = regions_2_addr_4_reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_2_address1 = regions_2_addr_2_reg_2133;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_2_address1 = zext_ln724_8_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_2_address1 = zext_ln724_6_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_2_address1 = zext_ln724_4_fu_1758_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_2_address1 = zext_ln709_2_fu_1299_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_2_address1 = zext_ln724_2_fu_1231_p1;
    end else begin
        regions_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_2_ce0 = 1'b1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_2_ce0 = grp_runTestAfterInit_fu_1109_regions_2_ce0;
    end else begin
        regions_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_2_ce1 = 1'b1;
    end else begin
        regions_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_2_d0 = bitcast_ln709_15_reg_2319;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_2_d0 = bitcast_ln709_13_reg_2307;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_2_d0 = bitcast_ln709_11_reg_2295;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_2_d0 = bitcast_ln709_9_fu_1547_p1;
    end else begin
        regions_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_2_d1 = bitcast_ln709_14_reg_2313;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_2_d1 = bitcast_ln709_12_reg_2301;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_2_d1 = bitcast_ln709_10_reg_2289;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_2_d1 = bitcast_ln709_8_fu_1531_p1;
    end else begin
        regions_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((trunc_ln647_reg_1983 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_2_we0 = 1'b1;
    end else begin
        regions_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((trunc_ln647_reg_1983 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_2_we1 = 1'b1;
    end else begin
        regions_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_3_address0 = regions_3_addr_13_reg_2178;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_3_address0 = regions_3_addr_11_reg_2168;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_3_address0 = regions_3_addr_15_reg_2188;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_3_address0 = zext_ln724_9_fu_1833_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_3_address0 = zext_ln724_7_fu_1803_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_3_address0 = zext_ln724_5_fu_1773_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_3_address0 = zext_ln709_3_fu_1315_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_3_address0 = zext_ln724_3_fu_1247_p1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_3_address0 = grp_runTestAfterInit_fu_1109_regions_3_address0;
    end else begin
        regions_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_3_address1 = regions_3_addr_12_reg_2173;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_3_address1 = regions_3_addr_10_reg_2163;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_3_address1 = regions_3_addr_14_reg_2183;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_3_address1 = zext_ln724_8_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_3_address1 = zext_ln724_6_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_3_address1 = zext_ln724_4_fu_1758_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_3_address1 = zext_ln709_2_fu_1299_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_3_address1 = zext_ln724_2_fu_1231_p1;
    end else begin
        regions_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_3_ce0 = 1'b1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_3_ce0 = grp_runTestAfterInit_fu_1109_regions_3_ce0;
    end else begin
        regions_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_3_ce1 = 1'b1;
    end else begin
        regions_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_3_d0 = bitcast_ln709_13_reg_2307;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_3_d0 = bitcast_ln709_11_reg_2295;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_3_d0 = bitcast_ln709_15_reg_2319;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_3_d0 = bitcast_ln709_9_fu_1547_p1;
    end else begin
        regions_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_3_d1 = bitcast_ln709_12_reg_2301;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_3_d1 = bitcast_ln709_10_reg_2289;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_3_d1 = bitcast_ln709_14_reg_2313;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_3_d1 = bitcast_ln709_8_fu_1531_p1;
    end else begin
        regions_3_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((trunc_ln647_reg_1983 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_3_we0 = 1'b1;
    end else begin
        regions_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((trunc_ln647_reg_1983 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_3_we1 = 1'b1;
    end else begin
        regions_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_4_address0 = regions_4_addr_7_reg_2218;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_4_address0 = regions_4_addr_5_reg_2208;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_4_address0 = regions_4_addr_3_reg_2198;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_4_address0 = zext_ln724_9_fu_1833_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_4_address0 = zext_ln724_7_fu_1803_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_4_address0 = zext_ln724_5_fu_1773_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_4_address0 = zext_ln709_3_fu_1315_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_4_address0 = zext_ln724_3_fu_1247_p1;
    end else begin
        regions_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_4_address1 = regions_4_addr_6_reg_2213;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_4_address1 = regions_4_addr_4_reg_2203;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_4_address1 = regions_4_addr_2_reg_2193;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_4_address1 = zext_ln724_8_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_4_address1 = zext_ln724_6_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_4_address1 = zext_ln724_4_fu_1758_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_4_address1 = zext_ln709_2_fu_1299_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_4_address1 = zext_ln724_2_fu_1231_p1;
    end else begin
        regions_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_4_ce0 = 1'b1;
    end else begin
        regions_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_4_ce1 = 1'b1;
    end else begin
        regions_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_4_d0 = bitcast_ln709_23_reg_2355;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_4_d0 = bitcast_ln709_21_reg_2343;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_4_d0 = bitcast_ln709_19_reg_2331;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_4_d0 = bitcast_ln709_17_fu_1663_p1;
    end else begin
        regions_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_4_d1 = bitcast_ln709_22_reg_2349;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_4_d1 = bitcast_ln709_20_reg_2337;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_4_d1 = bitcast_ln709_18_reg_2325;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_4_d1 = bitcast_ln709_16_fu_1647_p1;
    end else begin
        regions_4_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((trunc_ln647_reg_1983 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_4_we0 = 1'b1;
    end else begin
        regions_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((trunc_ln647_reg_1983 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_4_we1 = 1'b1;
    end else begin
        regions_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_5_address0 = regions_5_addr_13_reg_2238;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_5_address0 = regions_5_addr_11_reg_2228;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_5_address0 = regions_5_addr_15_reg_2248;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_5_address0 = zext_ln724_9_fu_1833_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_5_address0 = zext_ln724_7_fu_1803_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_5_address0 = zext_ln724_5_fu_1773_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_5_address0 = zext_ln709_3_fu_1315_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_5_address0 = zext_ln724_3_fu_1247_p1;
    end else begin
        regions_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_5_address1 = regions_5_addr_12_reg_2233;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_5_address1 = regions_5_addr_10_reg_2223;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_5_address1 = regions_5_addr_14_reg_2243;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_5_address1 = zext_ln724_8_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_5_address1 = zext_ln724_6_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_5_address1 = zext_ln724_4_fu_1758_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_5_address1 = zext_ln709_2_fu_1299_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_5_address1 = zext_ln724_2_fu_1231_p1;
    end else begin
        regions_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_5_ce0 = 1'b1;
    end else begin
        regions_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_5_ce1 = 1'b1;
    end else begin
        regions_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_5_d0 = bitcast_ln709_21_reg_2343;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_5_d0 = bitcast_ln709_19_reg_2331;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_5_d0 = bitcast_ln709_23_reg_2355;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_5_d0 = bitcast_ln709_17_fu_1663_p1;
    end else begin
        regions_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_5_d1 = bitcast_ln709_20_reg_2337;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        regions_5_d1 = bitcast_ln709_18_reg_2325;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_5_d1 = bitcast_ln709_22_reg_2349;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_5_d1 = bitcast_ln709_16_fu_1647_p1;
    end else begin
        regions_5_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((trunc_ln647_reg_1983 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_5_we0 = 1'b1;
    end else begin
        regions_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((trunc_ln647_reg_1983 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_5_we1 = 1'b1;
    end else begin
        regions_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_address0 = regions_addr_7_reg_2098;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_address0 = regions_addr_5_reg_2088;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_address0 = regions_addr_3_reg_2078;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_address0 = zext_ln724_9_fu_1833_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_address0 = zext_ln724_7_fu_1803_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_address0 = zext_ln724_5_fu_1773_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_address0 = zext_ln709_3_fu_1315_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_address0 = zext_ln724_3_fu_1247_p1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_address0 = grp_runTestAfterInit_fu_1109_regions_address0;
    end else begin
        regions_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_address1 = regions_addr_6_reg_2093;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_address1 = regions_addr_4_reg_2083;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_address1 = regions_addr_2_reg_2073;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        regions_address1 = zext_ln724_8_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        regions_address1 = zext_ln724_6_fu_1788_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        regions_address1 = zext_ln724_4_fu_1758_p1;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_address1 = zext_ln709_2_fu_1299_p1;
    end else if (((8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_address1 = zext_ln724_2_fu_1231_p1;
    end else begin
        regions_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_ce0 = 1'b1;
    end else if (((8'd3 == accel_mode) & (1'b1 == ap_CS_fsm_state3))) begin
        regions_ce0 = grp_runTestAfterInit_fu_1109_regions_ce0;
    end else begin
        regions_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_ce1 = 1'b1;
    end else begin
        regions_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_d0 = bitcast_ln709_7_reg_2283;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_d0 = bitcast_ln709_5_reg_2271;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_d0 = bitcast_ln709_3_reg_2259;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_d0 = bitcast_ln709_1_fu_1431_p1;
    end else begin
        regions_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        regions_d1 = bitcast_ln709_6_reg_2277;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        regions_d1 = bitcast_ln709_4_reg_2265;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        regions_d1 = bitcast_ln709_2_reg_2253;
    end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        regions_d1 = bitcast_ln709_fu_1277_p1;
    end else begin
        regions_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((trunc_ln647_reg_1983 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_we0 = 1'b1;
    end else begin
        regions_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((trunc_ln647_reg_1983 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        regions_we1 = 1'b1;
    end else begin
        regions_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((8'd1 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (trunc_ln647_fu_1194_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((ap_start == 1'b1) & (8'd2 == accel_mode_read_read_fu_268_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(8'd3 == accel_mode) & ~(8'd1 == accel_mode_read_read_fu_268_p2) & ~(8'd2 == accel_mode_read_read_fu_268_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((8'd3 == accel_mode) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~(8'd1 == accel_mode_read_read_fu_268_p2) & ~(8'd2 == accel_mode_read_read_fu_268_p2) & (1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accel_mode_read_read_fu_268_p2 = accel_mode;

assign add_ln709_fu_1287_p2 = (zext_ln709_fu_1269_p1 + zext_ln709_1_fu_1283_p1);

assign add_ln724_fu_1219_p2 = (zext_ln724_fu_1211_p1 + zext_ln724_1_fu_1215_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((8'd3 == accel_mode) & ((ap_sync_grp_runTestAfterInit_fu_1109_ap_ready & ap_sync_grp_runTestAfterInit_fu_1109_ap_done) == 1'b0));
end

assign ap_sync_grp_runTestAfterInit_fu_1109_ap_done = (grp_runTestAfterInit_fu_1109_ap_done | ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_done);

assign ap_sync_grp_runTestAfterInit_fu_1109_ap_ready = (grp_runTestAfterInit_fu_1109_ap_ready | ap_sync_reg_grp_runTestAfterInit_fu_1109_ap_ready);

assign bitcast_ln709_10_fu_1563_p1 = tmp_55_fu_1553_p4;

assign bitcast_ln709_11_fu_1577_p1 = tmp_56_fu_1567_p4;

assign bitcast_ln709_12_fu_1591_p1 = tmp_57_fu_1581_p4;

assign bitcast_ln709_13_fu_1605_p1 = tmp_58_fu_1595_p4;

assign bitcast_ln709_14_fu_1619_p1 = tmp_59_fu_1609_p4;

assign bitcast_ln709_15_fu_1633_p1 = tmp_60_fu_1623_p4;

assign bitcast_ln709_16_fu_1647_p1 = tmp_61_fu_1637_p4;

assign bitcast_ln709_17_fu_1663_p1 = tmp_62_fu_1653_p4;

assign bitcast_ln709_18_fu_1679_p1 = tmp_63_fu_1669_p4;

assign bitcast_ln709_19_fu_1693_p1 = tmp_64_fu_1683_p4;

assign bitcast_ln709_1_fu_1431_p1 = tmp_fu_1421_p4;

assign bitcast_ln709_20_fu_1707_p1 = tmp_65_fu_1697_p4;

assign bitcast_ln709_21_fu_1721_p1 = tmp_66_fu_1711_p4;

assign bitcast_ln709_22_fu_1735_p1 = tmp_67_fu_1725_p4;

assign bitcast_ln709_23_fu_1749_p1 = tmp_68_fu_1739_p4;

assign bitcast_ln709_2_fu_1447_p1 = tmp_46_fu_1437_p4;

assign bitcast_ln709_3_fu_1461_p1 = tmp_47_fu_1451_p4;

assign bitcast_ln709_4_fu_1475_p1 = tmp_48_fu_1465_p4;

assign bitcast_ln709_5_fu_1489_p1 = tmp_50_fu_1479_p4;

assign bitcast_ln709_6_fu_1503_p1 = tmp_51_fu_1493_p4;

assign bitcast_ln709_7_fu_1517_p1 = tmp_52_fu_1507_p4;

assign bitcast_ln709_8_fu_1531_p1 = tmp_53_fu_1521_p4;

assign bitcast_ln709_9_fu_1547_p1 = tmp_54_fu_1537_p4;

assign bitcast_ln709_fu_1277_p1 = trunc_ln709_fu_1273_p1;

assign bitcast_ln724_10_fu_1875_p1 = tmp_32_reg_2521;

assign bitcast_ln724_11_fu_1878_p1 = tmp_33_reg_2526;

assign bitcast_ln724_12_fu_1881_p1 = tmp_34_reg_2611;

assign bitcast_ln724_13_fu_1884_p1 = tmp_35_reg_2616;

assign bitcast_ln724_14_fu_1887_p1 = grp_fu_1158_p4;

assign bitcast_ln724_15_fu_1891_p1 = grp_fu_1167_p4;

assign bitcast_ln724_16_fu_1895_p1 = tmp_38_reg_2441;

assign bitcast_ln724_17_fu_1898_p1 = tmp_39_reg_2446;

assign bitcast_ln724_18_fu_1901_p1 = tmp_40_reg_2531;

assign bitcast_ln724_19_fu_1904_p1 = tmp_41_reg_2536;

assign bitcast_ln724_1_fu_1846_p1 = tmp_23_reg_2426;

assign bitcast_ln724_20_fu_1907_p1 = tmp_42_reg_2621;

assign bitcast_ln724_21_fu_1910_p1 = tmp_43_reg_2626;

assign bitcast_ln724_22_fu_1913_p1 = grp_fu_1176_p4;

assign bitcast_ln724_23_fu_1917_p1 = grp_fu_1185_p4;

assign bitcast_ln724_2_fu_1849_p1 = tmp_24_reg_2511;

assign bitcast_ln724_3_fu_1852_p1 = tmp_25_reg_2516;

assign bitcast_ln724_4_fu_1855_p1 = tmp_26_reg_2601;

assign bitcast_ln724_5_fu_1858_p1 = tmp_27_reg_2606;

assign bitcast_ln724_6_fu_1861_p1 = grp_fu_1140_p4;

assign bitcast_ln724_7_fu_1865_p1 = grp_fu_1149_p4;

assign bitcast_ln724_8_fu_1869_p1 = tmp_30_reg_2431;

assign bitcast_ln724_9_fu_1872_p1 = tmp_31_reg_2436;

assign bitcast_ln724_fu_1843_p1 = tmp_22_reg_2421;

assign grp_fu_1130_p4 = {{IORegionIdx[7:1]}};

assign grp_runTestAfterInit_fu_1109_ap_start = grp_runTestAfterInit_fu_1109_ap_start_reg;

assign or_ln709_1_fu_1325_p2 = (shl_ln709_fu_1293_p2 | 12'd2);

assign or_ln709_2_fu_1341_p2 = (shl_ln709_fu_1293_p2 | 12'd3);

assign or_ln709_3_fu_1357_p2 = (shl_ln709_fu_1293_p2 | 12'd4);

assign or_ln709_4_fu_1373_p2 = (shl_ln709_fu_1293_p2 | 12'd5);

assign or_ln709_5_fu_1389_p2 = (shl_ln709_fu_1293_p2 | 12'd6);

assign or_ln709_6_fu_1405_p2 = (shl_ln709_fu_1293_p2 | 12'd7);

assign or_ln709_fu_1309_p2 = (shl_ln709_fu_1293_p2 | 12'd1);

assign or_ln724_1_fu_1753_p2 = (shl_ln724_reg_1993 | 12'd2);

assign or_ln724_2_fu_1768_p2 = (shl_ln724_reg_1993 | 12'd3);

assign or_ln724_3_fu_1783_p2 = (shl_ln724_reg_1993 | 12'd4);

assign or_ln724_4_fu_1798_p2 = (shl_ln724_reg_1993 | 12'd5);

assign or_ln724_5_fu_1813_p2 = (shl_ln724_reg_1993 | 12'd6);

assign or_ln724_6_fu_1828_p2 = (shl_ln724_reg_1993 | 12'd7);

assign or_ln724_fu_1241_p2 = (shl_ln724_fu_1225_p2 | 12'd1);

assign shl_ln709_fu_1293_p2 = add_ln709_fu_1287_p2 << 12'd3;

assign shl_ln724_fu_1225_p2 = add_ln724_fu_1219_p2 << 12'd3;

assign tmp_46_fu_1437_p4 = {{trainedRegion_i[95:64]}};

assign tmp_47_fu_1451_p4 = {{trainedRegion_i[127:96]}};

assign tmp_48_fu_1465_p4 = {{trainedRegion_i[159:128]}};

assign tmp_49_fu_1203_p3 = {{IOCheckIdx}, {3'd0}};

assign tmp_50_fu_1479_p4 = {{trainedRegion_i[191:160]}};

assign tmp_51_fu_1493_p4 = {{trainedRegion_i[223:192]}};

assign tmp_52_fu_1507_p4 = {{trainedRegion_i[255:224]}};

assign tmp_53_fu_1521_p4 = {{trainedRegion_i[287:256]}};

assign tmp_54_fu_1537_p4 = {{trainedRegion_i[319:288]}};

assign tmp_55_fu_1553_p4 = {{trainedRegion_i[351:320]}};

assign tmp_56_fu_1567_p4 = {{trainedRegion_i[383:352]}};

assign tmp_57_fu_1581_p4 = {{trainedRegion_i[415:384]}};

assign tmp_58_fu_1595_p4 = {{trainedRegion_i[447:416]}};

assign tmp_59_fu_1609_p4 = {{trainedRegion_i[479:448]}};

assign tmp_60_fu_1623_p4 = {{trainedRegion_i[511:480]}};

assign tmp_61_fu_1637_p4 = {{trainedRegion_i[543:512]}};

assign tmp_62_fu_1653_p4 = {{trainedRegion_i[575:544]}};

assign tmp_63_fu_1669_p4 = {{trainedRegion_i[607:576]}};

assign tmp_64_fu_1683_p4 = {{trainedRegion_i[639:608]}};

assign tmp_65_fu_1697_p4 = {{trainedRegion_i[671:640]}};

assign tmp_66_fu_1711_p4 = {{trainedRegion_i[703:672]}};

assign tmp_67_fu_1725_p4 = {{trainedRegion_i[735:704]}};

assign tmp_68_fu_1739_p4 = {{trainedRegion_i[767:736]}};

assign tmp_fu_1421_p4 = {{trainedRegion_i[63:32]}};

assign tmp_s_fu_1261_p3 = {{IOCheckIdx}, {3'd0}};

assign trainedRegion_o = {{{{{{{{{{{{{{{{{{{{{{{{bitcast_ln724_23_fu_1917_p1}, {bitcast_ln724_22_fu_1913_p1}}, {bitcast_ln724_21_fu_1910_p1}}, {bitcast_ln724_20_fu_1907_p1}}, {bitcast_ln724_19_fu_1904_p1}}, {bitcast_ln724_18_fu_1901_p1}}, {bitcast_ln724_17_fu_1898_p1}}, {bitcast_ln724_16_fu_1895_p1}}, {bitcast_ln724_15_fu_1891_p1}}, {bitcast_ln724_14_fu_1887_p1}}, {bitcast_ln724_13_fu_1884_p1}}, {bitcast_ln724_12_fu_1881_p1}}, {bitcast_ln724_11_fu_1878_p1}}, {bitcast_ln724_10_fu_1875_p1}}, {bitcast_ln724_9_fu_1872_p1}}, {bitcast_ln724_8_fu_1869_p1}}, {bitcast_ln724_7_fu_1865_p1}}, {bitcast_ln724_6_fu_1861_p1}}, {bitcast_ln724_5_fu_1858_p1}}, {bitcast_ln724_4_fu_1855_p1}}, {bitcast_ln724_3_fu_1852_p1}}, {bitcast_ln724_2_fu_1849_p1}}, {bitcast_ln724_1_fu_1846_p1}}, {bitcast_ln724_fu_1843_p1}};

assign trunc_ln647_fu_1194_p1 = IORegionIdx[0:0];

assign trunc_ln709_fu_1273_p1 = trainedRegion_i[31:0];

assign zext_ln587_1_fu_1198_p1 = IOCheckIdx;

assign zext_ln587_fu_1257_p1 = IOCheckIdx;

assign zext_ln709_1_fu_1283_p1 = grp_fu_1130_p4;

assign zext_ln709_2_fu_1299_p1 = shl_ln709_fu_1293_p2;

assign zext_ln709_3_fu_1315_p1 = or_ln709_fu_1309_p2;

assign zext_ln709_4_fu_1331_p1 = or_ln709_1_fu_1325_p2;

assign zext_ln709_5_fu_1347_p1 = or_ln709_2_fu_1341_p2;

assign zext_ln709_6_fu_1363_p1 = or_ln709_3_fu_1357_p2;

assign zext_ln709_7_fu_1379_p1 = or_ln709_4_fu_1373_p2;

assign zext_ln709_8_fu_1395_p1 = or_ln709_5_fu_1389_p2;

assign zext_ln709_9_fu_1411_p1 = or_ln709_6_fu_1405_p2;

assign zext_ln709_fu_1269_p1 = tmp_s_fu_1261_p3;

assign zext_ln724_1_fu_1215_p1 = grp_fu_1130_p4;

assign zext_ln724_2_fu_1231_p1 = shl_ln724_fu_1225_p2;

assign zext_ln724_3_fu_1247_p1 = or_ln724_fu_1241_p2;

assign zext_ln724_4_fu_1758_p1 = or_ln724_1_fu_1753_p2;

assign zext_ln724_5_fu_1773_p1 = or_ln724_2_fu_1768_p2;

assign zext_ln724_6_fu_1788_p1 = or_ln724_3_fu_1783_p2;

assign zext_ln724_7_fu_1803_p1 = or_ln724_4_fu_1798_p2;

assign zext_ln724_8_fu_1818_p1 = or_ln724_5_fu_1813_p2;

assign zext_ln724_9_fu_1833_p1 = or_ln724_6_fu_1828_p2;

assign zext_ln724_fu_1211_p1 = tmp_49_fu_1203_p3;

always @ (posedge ap_clk) begin
    shl_ln724_reg_1993[2:0] <= 3'b000;
    zext_ln587_reg_2068[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    regions_addr_2_reg_2073[2:0] <= 3'b010;
    regions_addr_3_reg_2078[2:0] <= 3'b011;
    regions_addr_4_reg_2083[2:0] <= 3'b100;
    regions_addr_5_reg_2088[2:0] <= 3'b101;
    regions_addr_6_reg_2093[2:0] <= 3'b110;
    regions_addr_7_reg_2098[2:0] <= 3'b111;
    regions_1_addr_10_reg_2103[2:0] <= 3'b010;
    regions_1_addr_11_reg_2108[2:0] <= 3'b011;
    regions_1_addr_12_reg_2113[2:0] <= 3'b100;
    regions_1_addr_13_reg_2118[2:0] <= 3'b101;
    regions_1_addr_14_reg_2123[2:0] <= 3'b110;
    regions_1_addr_15_reg_2128[2:0] <= 3'b111;
    regions_2_addr_2_reg_2133[2:0] <= 3'b010;
    regions_2_addr_3_reg_2138[2:0] <= 3'b011;
    regions_2_addr_4_reg_2143[2:0] <= 3'b100;
    regions_2_addr_5_reg_2148[2:0] <= 3'b101;
    regions_2_addr_6_reg_2153[2:0] <= 3'b110;
    regions_2_addr_7_reg_2158[2:0] <= 3'b111;
    regions_3_addr_10_reg_2163[2:0] <= 3'b010;
    regions_3_addr_11_reg_2168[2:0] <= 3'b011;
    regions_3_addr_12_reg_2173[2:0] <= 3'b100;
    regions_3_addr_13_reg_2178[2:0] <= 3'b101;
    regions_3_addr_14_reg_2183[2:0] <= 3'b110;
    regions_3_addr_15_reg_2188[2:0] <= 3'b111;
    regions_4_addr_2_reg_2193[2:0] <= 3'b010;
    regions_4_addr_3_reg_2198[2:0] <= 3'b011;
    regions_4_addr_4_reg_2203[2:0] <= 3'b100;
    regions_4_addr_5_reg_2208[2:0] <= 3'b101;
    regions_4_addr_6_reg_2213[2:0] <= 3'b110;
    regions_4_addr_7_reg_2218[2:0] <= 3'b111;
    regions_5_addr_10_reg_2223[2:0] <= 3'b010;
    regions_5_addr_11_reg_2228[2:0] <= 3'b011;
    regions_5_addr_12_reg_2233[2:0] <= 3'b100;
    regions_5_addr_13_reg_2238[2:0] <= 3'b101;
    regions_5_addr_14_reg_2243[2:0] <= 3'b110;
    regions_5_addr_15_reg_2248[2:0] <= 3'b111;
end

endmodule //run
