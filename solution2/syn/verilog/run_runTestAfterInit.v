// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_runTestAfterInit (
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        inputAOV,
        p_read,
        copyInputAOV_out,
        outcomeInRam_address0,
        outcomeInRam_ce0,
        outcomeInRam_d0,
        outcomeInRam_q0,
        outcomeInRam_we0,
        toScheduler_TDATA,
        errorInTask_address0,
        errorInTask_ce0,
        errorInTask_d0,
        errorInTask_q0,
        errorInTask_we0,
        regions_address0,
        regions_ce0,
        regions_d0,
        regions_q0,
        regions_we0,
        regions_address1,
        regions_ce1,
        regions_d1,
        regions_q1,
        regions_we1,
        regions_1_address0,
        regions_1_ce0,
        regions_1_d0,
        regions_1_q0,
        regions_1_we0,
        regions_1_address1,
        regions_1_ce1,
        regions_1_d1,
        regions_1_q1,
        regions_1_we1,
        regions_2_address0,
        regions_2_ce0,
        regions_2_d0,
        regions_2_q0,
        regions_2_we0,
        regions_2_address1,
        regions_2_ce1,
        regions_2_d1,
        regions_2_q1,
        regions_2_we1,
        regions_3_address0,
        regions_3_ce0,
        regions_3_d0,
        regions_3_q0,
        regions_3_we0,
        regions_3_address1,
        regions_3_ce1,
        regions_3_d1,
        regions_3_q1,
        regions_3_we1,
        regions_4_address0,
        regions_4_ce0,
        regions_4_d0,
        regions_4_q0,
        regions_4_we0,
        regions_4_address1,
        regions_4_ce1,
        regions_4_d1,
        regions_4_q1,
        regions_4_we1,
        regions_5_address0,
        regions_5_ce0,
        regions_5_d0,
        regions_5_q0,
        regions_5_we0,
        regions_5_address1,
        regions_5_ce1,
        regions_5_d1,
        regions_5_q1,
        regions_5_we1,
        n_regions_V_address0,
        n_regions_V_ce0,
        n_regions_V_d0,
        n_regions_V_q0,
        n_regions_V_we0,
        n_regions_V_address1,
        n_regions_V_ce1,
        n_regions_V_d1,
        n_regions_V_q1,
        n_regions_V_we1,
        ap_clk,
        ap_rst,
        inputAOV_ap_vld,
        p_read_ap_vld,
        ap_start,
        copyInputAOV_out_ap_vld,
        toScheduler_TVALID,
        toScheduler_TREADY,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] inputAOV;
input  [0:0] p_read;
output  [0:0] copyInputAOV_out;
output  [3:0] outcomeInRam_address0;
output   outcomeInRam_ce0;
output  [287:0] outcomeInRam_d0;
input  [287:0] outcomeInRam_q0;
output  [35:0] outcomeInRam_we0;
output  [7:0] toScheduler_TDATA;
output  [3:0] errorInTask_address0;
output   errorInTask_ce0;
output  [0:0] errorInTask_d0;
input  [0:0] errorInTask_q0;
output   errorInTask_we0;
output  [11:0] regions_address0;
output   regions_ce0;
output  [31:0] regions_d0;
input  [31:0] regions_q0;
output   regions_we0;
output  [11:0] regions_address1;
output   regions_ce1;
output  [31:0] regions_d1;
input  [31:0] regions_q1;
output   regions_we1;
output  [11:0] regions_1_address0;
output   regions_1_ce0;
output  [31:0] regions_1_d0;
input  [31:0] regions_1_q0;
output   regions_1_we0;
output  [11:0] regions_1_address1;
output   regions_1_ce1;
output  [31:0] regions_1_d1;
input  [31:0] regions_1_q1;
output   regions_1_we1;
output  [11:0] regions_2_address0;
output   regions_2_ce0;
output  [31:0] regions_2_d0;
input  [31:0] regions_2_q0;
output   regions_2_we0;
output  [11:0] regions_2_address1;
output   regions_2_ce1;
output  [31:0] regions_2_d1;
input  [31:0] regions_2_q1;
output   regions_2_we1;
output  [11:0] regions_3_address0;
output   regions_3_ce0;
output  [31:0] regions_3_d0;
input  [31:0] regions_3_q0;
output   regions_3_we0;
output  [11:0] regions_3_address1;
output   regions_3_ce1;
output  [31:0] regions_3_d1;
input  [31:0] regions_3_q1;
output   regions_3_we1;
output  [11:0] regions_4_address0;
output   regions_4_ce0;
output  [31:0] regions_4_d0;
input  [31:0] regions_4_q0;
output   regions_4_we0;
output  [11:0] regions_4_address1;
output   regions_4_ce1;
output  [31:0] regions_4_d1;
input  [31:0] regions_4_q1;
output   regions_4_we1;
output  [11:0] regions_5_address0;
output   regions_5_ce0;
output  [31:0] regions_5_d0;
input  [31:0] regions_5_q0;
output   regions_5_we0;
output  [11:0] regions_5_address1;
output   regions_5_ce1;
output  [31:0] regions_5_d1;
input  [31:0] regions_5_q1;
output   regions_5_we1;
output  [5:0] n_regions_V_address0;
output   n_regions_V_ce0;
output  [7:0] n_regions_V_d0;
input  [7:0] n_regions_V_q0;
output   n_regions_V_we0;
output  [5:0] n_regions_V_address1;
output   n_regions_V_ce1;
output  [7:0] n_regions_V_d1;
input  [7:0] n_regions_V_q1;
output   n_regions_V_we1;
input   ap_clk;
input   ap_rst;
input   inputAOV_ap_vld;
input   p_read_ap_vld;
input   ap_start;
output   copyInputAOV_out_ap_vld;
output   toScheduler_TVALID;
input   toScheduler_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    read_train_U0_ap_start;
wire    read_train_U0_ap_done;
wire    read_train_U0_ap_continue;
wire    read_train_U0_ap_idle;
wire    read_train_U0_ap_ready;
wire    read_train_U0_m_axi_gmem_AWVALID;
wire   [63:0] read_train_U0_m_axi_gmem_AWADDR;
wire   [0:0] read_train_U0_m_axi_gmem_AWID;
wire   [31:0] read_train_U0_m_axi_gmem_AWLEN;
wire   [2:0] read_train_U0_m_axi_gmem_AWSIZE;
wire   [1:0] read_train_U0_m_axi_gmem_AWBURST;
wire   [1:0] read_train_U0_m_axi_gmem_AWLOCK;
wire   [3:0] read_train_U0_m_axi_gmem_AWCACHE;
wire   [2:0] read_train_U0_m_axi_gmem_AWPROT;
wire   [3:0] read_train_U0_m_axi_gmem_AWQOS;
wire   [3:0] read_train_U0_m_axi_gmem_AWREGION;
wire   [0:0] read_train_U0_m_axi_gmem_AWUSER;
wire    read_train_U0_m_axi_gmem_WVALID;
wire   [511:0] read_train_U0_m_axi_gmem_WDATA;
wire   [63:0] read_train_U0_m_axi_gmem_WSTRB;
wire    read_train_U0_m_axi_gmem_WLAST;
wire   [0:0] read_train_U0_m_axi_gmem_WID;
wire   [0:0] read_train_U0_m_axi_gmem_WUSER;
wire    read_train_U0_m_axi_gmem_ARVALID;
wire   [63:0] read_train_U0_m_axi_gmem_ARADDR;
wire   [0:0] read_train_U0_m_axi_gmem_ARID;
wire   [31:0] read_train_U0_m_axi_gmem_ARLEN;
wire   [2:0] read_train_U0_m_axi_gmem_ARSIZE;
wire   [1:0] read_train_U0_m_axi_gmem_ARBURST;
wire   [1:0] read_train_U0_m_axi_gmem_ARLOCK;
wire   [3:0] read_train_U0_m_axi_gmem_ARCACHE;
wire   [2:0] read_train_U0_m_axi_gmem_ARPROT;
wire   [3:0] read_train_U0_m_axi_gmem_ARQOS;
wire   [3:0] read_train_U0_m_axi_gmem_ARREGION;
wire   [0:0] read_train_U0_m_axi_gmem_ARUSER;
wire    read_train_U0_m_axi_gmem_RREADY;
wire    read_train_U0_m_axi_gmem_BREADY;
wire    read_train_U0_copyInputAOV_read;
wire   [0:0] read_train_U0_copyInputAOV_in_c_din;
wire    read_train_U0_copyInputAOV_in_c_write;
wire   [7:0] read_train_U0_ap_return_0;
wire   [7:0] read_train_U0_ap_return_1;
wire   [15:0] read_train_U0_ap_return_2;
wire   [7:0] read_train_U0_ap_return_3;
wire   [31:0] read_train_U0_ap_return_4;
wire   [31:0] read_train_U0_ap_return_5;
wire   [31:0] read_train_U0_ap_return_6;
wire   [31:0] read_train_U0_ap_return_7;
wire   [31:0] read_train_U0_ap_return_8;
wire   [31:0] read_train_U0_ap_return_9;
wire   [31:0] read_train_U0_ap_return_10;
wire   [31:0] read_train_U0_ap_return_11;
wire    ap_channel_done_contr_AOV_7;
wire    contr_AOV_7_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_7;
wire    ap_sync_channel_write_contr_AOV_7;
wire    ap_channel_done_contr_AOV_6;
wire    contr_AOV_6_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_6;
wire    ap_sync_channel_write_contr_AOV_6;
wire    ap_channel_done_contr_AOV_5;
wire    contr_AOV_5_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_5;
wire    ap_sync_channel_write_contr_AOV_5;
wire    ap_channel_done_contr_AOV_4;
wire    contr_AOV_4_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_4;
wire    ap_sync_channel_write_contr_AOV_4;
wire    ap_channel_done_contr_AOV_3;
wire    contr_AOV_3_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_3;
wire    ap_sync_channel_write_contr_AOV_3;
wire    ap_channel_done_contr_AOV_2;
wire    contr_AOV_2_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_2;
wire    ap_sync_channel_write_contr_AOV_2;
wire    ap_channel_done_contr_AOV_1;
wire    contr_AOV_1_full_n;
reg    ap_sync_reg_channel_write_contr_AOV_1;
wire    ap_sync_channel_write_contr_AOV_1;
wire    ap_channel_done_contr_AOV;
wire    contr_AOV_full_n;
reg    ap_sync_reg_channel_write_contr_AOV;
wire    ap_sync_channel_write_contr_AOV;
wire    ap_channel_done_contr_checkId_V;
wire    contr_checkId_V_full_n;
reg    ap_sync_reg_channel_write_contr_checkId_V;
wire    ap_sync_channel_write_contr_checkId_V;
wire    ap_channel_done_contr_taskId_V;
wire    contr_taskId_V_full_n;
reg    ap_sync_reg_channel_write_contr_taskId_V;
wire    ap_sync_channel_write_contr_taskId_V;
wire    ap_channel_done_contr_uniId_V;
wire    contr_uniId_V_full_n;
reg    ap_sync_reg_channel_write_contr_uniId_V;
wire    ap_sync_channel_write_contr_uniId_V;
wire    ap_channel_done_contr_command;
wire    contr_command_full_n;
reg    ap_sync_reg_channel_write_contr_command;
wire    ap_sync_channel_write_contr_command;
wire    runTestAfterInit_Block_entry1119_proc7_U0_ap_start;
wire    runTestAfterInit_Block_entry1119_proc7_U0_ap_done;
wire    runTestAfterInit_Block_entry1119_proc7_U0_ap_continue;
wire    runTestAfterInit_Block_entry1119_proc7_U0_ap_idle;
wire    runTestAfterInit_Block_entry1119_proc7_U0_ap_ready;
wire   [3:0] runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_we0;
wire   [0:0] runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_d0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_in_read;
wire   [0:0] runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out;
wire    runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out_ap_vld;
wire   [7:0] runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TDATA;
wire    runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TVALID;
wire   [3:0] runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_ce0;
wire   [35:0] runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_we0;
wire   [287:0] runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_d0;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_we0;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_d0;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_address1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_ce1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_we1;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_d1;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we0;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d0;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we1;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d1;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we0;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d0;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we1;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d1;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we0;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d0;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we1;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d1;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we0;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d0;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we1;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d1;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we0;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d0;
wire   [11:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce1;
wire    runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we1;
wire   [31:0] runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d1;
wire   [5:0] runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_address0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_ce0;
wire    runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_we0;
wire   [7:0] runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_d0;
wire    copyInputAOV_in_c_full_n;
wire   [0:0] copyInputAOV_in_c_dout;
wire   [1:0] copyInputAOV_in_c_num_data_valid;
wire   [1:0] copyInputAOV_in_c_fifo_cap;
wire    copyInputAOV_in_c_empty_n;
wire   [7:0] contr_command_dout;
wire   [1:0] contr_command_num_data_valid;
wire   [1:0] contr_command_fifo_cap;
wire    contr_command_empty_n;
wire   [15:0] contr_uniId_V_dout;
wire   [1:0] contr_uniId_V_num_data_valid;
wire   [1:0] contr_uniId_V_fifo_cap;
wire    contr_uniId_V_empty_n;
wire   [7:0] contr_taskId_V_dout;
wire   [1:0] contr_taskId_V_num_data_valid;
wire   [1:0] contr_taskId_V_fifo_cap;
wire    contr_taskId_V_empty_n;
wire   [7:0] contr_checkId_V_dout;
wire   [1:0] contr_checkId_V_num_data_valid;
wire   [1:0] contr_checkId_V_fifo_cap;
wire    contr_checkId_V_empty_n;
wire   [31:0] contr_AOV_dout;
wire   [1:0] contr_AOV_num_data_valid;
wire   [1:0] contr_AOV_fifo_cap;
wire    contr_AOV_empty_n;
wire   [31:0] contr_AOV_1_dout;
wire   [1:0] contr_AOV_1_num_data_valid;
wire   [1:0] contr_AOV_1_fifo_cap;
wire    contr_AOV_1_empty_n;
wire   [31:0] contr_AOV_2_dout;
wire   [1:0] contr_AOV_2_num_data_valid;
wire   [1:0] contr_AOV_2_fifo_cap;
wire    contr_AOV_2_empty_n;
wire   [31:0] contr_AOV_3_dout;
wire   [1:0] contr_AOV_3_num_data_valid;
wire   [1:0] contr_AOV_3_fifo_cap;
wire    contr_AOV_3_empty_n;
wire   [31:0] contr_AOV_4_dout;
wire   [1:0] contr_AOV_4_num_data_valid;
wire   [1:0] contr_AOV_4_fifo_cap;
wire    contr_AOV_4_empty_n;
wire   [31:0] contr_AOV_5_dout;
wire   [1:0] contr_AOV_5_num_data_valid;
wire   [1:0] contr_AOV_5_fifo_cap;
wire    contr_AOV_5_empty_n;
wire   [31:0] contr_AOV_6_dout;
wire   [1:0] contr_AOV_6_num_data_valid;
wire   [1:0] contr_AOV_6_fifo_cap;
wire    contr_AOV_6_empty_n;
wire   [31:0] contr_AOV_7_dout;
wire   [1:0] contr_AOV_7_num_data_valid;
wire   [1:0] contr_AOV_7_fifo_cap;
wire    contr_AOV_7_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_read_train_U0_ap_ready;
wire    ap_sync_read_train_U0_ap_ready;
reg    ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready;
wire    ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_contr_AOV_7 = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_6 = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_5 = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_4 = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_3 = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_2 = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV_1 = 1'b0;
#0 ap_sync_reg_channel_write_contr_AOV = 1'b0;
#0 ap_sync_reg_channel_write_contr_checkId_V = 1'b0;
#0 ap_sync_reg_channel_write_contr_taskId_V = 1'b0;
#0 ap_sync_reg_channel_write_contr_uniId_V = 1'b0;
#0 ap_sync_reg_channel_write_contr_command = 1'b0;
#0 ap_sync_reg_read_train_U0_ap_ready = 1'b0;
#0 ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready = 1'b0;
end

run_read_train read_train_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(read_train_U0_ap_start),
    .ap_done(read_train_U0_ap_done),
    .ap_continue(read_train_U0_ap_continue),
    .ap_idle(read_train_U0_ap_idle),
    .ap_ready(read_train_U0_ap_ready),
    .m_axi_gmem_AWVALID(read_train_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(read_train_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(read_train_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(read_train_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(read_train_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(read_train_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(read_train_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(read_train_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(read_train_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(read_train_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(read_train_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(read_train_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(read_train_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(read_train_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(read_train_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(read_train_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(read_train_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(read_train_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(read_train_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(read_train_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(read_train_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(read_train_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(read_train_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(read_train_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(read_train_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(read_train_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(read_train_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(read_train_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(read_train_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(read_train_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(read_train_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RFIFONUM(m_axi_gmem_RFIFONUM),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(read_train_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .inputAOV(inputAOV),
    .copyInputAOV_read(read_train_U0_copyInputAOV_read),
    .copyInputAOV_in_c_din(read_train_U0_copyInputAOV_in_c_din),
    .copyInputAOV_in_c_num_data_valid(copyInputAOV_in_c_num_data_valid),
    .copyInputAOV_in_c_fifo_cap(copyInputAOV_in_c_fifo_cap),
    .copyInputAOV_in_c_full_n(copyInputAOV_in_c_full_n),
    .copyInputAOV_in_c_write(read_train_U0_copyInputAOV_in_c_write),
    .ap_return_0(read_train_U0_ap_return_0),
    .ap_return_1(read_train_U0_ap_return_1),
    .ap_return_2(read_train_U0_ap_return_2),
    .ap_return_3(read_train_U0_ap_return_3),
    .ap_return_4(read_train_U0_ap_return_4),
    .ap_return_5(read_train_U0_ap_return_5),
    .ap_return_6(read_train_U0_ap_return_6),
    .ap_return_7(read_train_U0_ap_return_7),
    .ap_return_8(read_train_U0_ap_return_8),
    .ap_return_9(read_train_U0_ap_return_9),
    .ap_return_10(read_train_U0_ap_return_10),
    .ap_return_11(read_train_U0_ap_return_11)
);

run_runTestAfterInit_Block_entry1119_proc7 runTestAfterInit_Block_entry1119_proc7_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(runTestAfterInit_Block_entry1119_proc7_U0_ap_start),
    .ap_done(runTestAfterInit_Block_entry1119_proc7_U0_ap_done),
    .ap_continue(runTestAfterInit_Block_entry1119_proc7_U0_ap_continue),
    .ap_idle(runTestAfterInit_Block_entry1119_proc7_U0_ap_idle),
    .ap_ready(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready),
    .p_read(contr_command_dout),
    .p_read1(contr_taskId_V_dout),
    .errorInTask_address0(runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_address0),
    .errorInTask_ce0(runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_ce0),
    .errorInTask_we0(runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_we0),
    .errorInTask_d0(runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_d0),
    .errorInTask_q0(errorInTask_q0),
    .p_read2(contr_checkId_V_dout),
    .p_read3(contr_AOV_dout),
    .p_read4(contr_AOV_1_dout),
    .p_read5(contr_AOV_2_dout),
    .p_read6(contr_AOV_3_dout),
    .p_read7(contr_AOV_4_dout),
    .p_read8(contr_AOV_5_dout),
    .p_read9(contr_AOV_6_dout),
    .p_read10(contr_AOV_7_dout),
    .copyInputAOV_in_dout(copyInputAOV_in_c_dout),
    .copyInputAOV_in_num_data_valid(copyInputAOV_in_c_num_data_valid),
    .copyInputAOV_in_fifo_cap(copyInputAOV_in_c_fifo_cap),
    .copyInputAOV_in_empty_n(copyInputAOV_in_c_empty_n),
    .copyInputAOV_in_read(runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_in_read),
    .copyInputAOV_out(runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out),
    .copyInputAOV_out_ap_vld(runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out_ap_vld),
    .p_read311(contr_uniId_V_dout),
    .toScheduler_TDATA(runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TDATA),
    .toScheduler_TVALID(runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TVALID),
    .toScheduler_TREADY(toScheduler_TREADY),
    .outcomeInRam_address0(runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_address0),
    .outcomeInRam_ce0(runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_ce0),
    .outcomeInRam_we0(runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_we0),
    .outcomeInRam_d0(runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_d0),
    .regions_address0(runTestAfterInit_Block_entry1119_proc7_U0_regions_address0),
    .regions_ce0(runTestAfterInit_Block_entry1119_proc7_U0_regions_ce0),
    .regions_we0(runTestAfterInit_Block_entry1119_proc7_U0_regions_we0),
    .regions_d0(runTestAfterInit_Block_entry1119_proc7_U0_regions_d0),
    .regions_q0(regions_q0),
    .regions_address1(runTestAfterInit_Block_entry1119_proc7_U0_regions_address1),
    .regions_ce1(runTestAfterInit_Block_entry1119_proc7_U0_regions_ce1),
    .regions_we1(runTestAfterInit_Block_entry1119_proc7_U0_regions_we1),
    .regions_d1(runTestAfterInit_Block_entry1119_proc7_U0_regions_d1),
    .regions_q1(regions_q1),
    .regions_1_address0(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address0),
    .regions_1_ce0(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce0),
    .regions_1_we0(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we0),
    .regions_1_d0(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d0),
    .regions_1_q0(regions_1_q0),
    .regions_1_address1(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address1),
    .regions_1_ce1(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce1),
    .regions_1_we1(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we1),
    .regions_1_d1(runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d1),
    .regions_1_q1(regions_1_q1),
    .regions_2_address0(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address0),
    .regions_2_ce0(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce0),
    .regions_2_we0(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we0),
    .regions_2_d0(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d0),
    .regions_2_q0(regions_2_q0),
    .regions_2_address1(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address1),
    .regions_2_ce1(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce1),
    .regions_2_we1(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we1),
    .regions_2_d1(runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d1),
    .regions_2_q1(regions_2_q1),
    .regions_3_address0(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address0),
    .regions_3_ce0(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce0),
    .regions_3_we0(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we0),
    .regions_3_d0(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d0),
    .regions_3_q0(regions_3_q0),
    .regions_3_address1(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address1),
    .regions_3_ce1(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce1),
    .regions_3_we1(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we1),
    .regions_3_d1(runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d1),
    .regions_3_q1(regions_3_q1),
    .regions_4_address0(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address0),
    .regions_4_ce0(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce0),
    .regions_4_we0(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we0),
    .regions_4_d0(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d0),
    .regions_4_q0(regions_4_q0),
    .regions_4_address1(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address1),
    .regions_4_ce1(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce1),
    .regions_4_we1(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we1),
    .regions_4_d1(runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d1),
    .regions_4_q1(regions_4_q1),
    .regions_5_address0(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address0),
    .regions_5_ce0(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce0),
    .regions_5_we0(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we0),
    .regions_5_d0(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d0),
    .regions_5_q0(regions_5_q0),
    .regions_5_address1(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address1),
    .regions_5_ce1(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce1),
    .regions_5_we1(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we1),
    .regions_5_d1(runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d1),
    .regions_5_q1(regions_5_q1),
    .n_regions_V_address0(runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_address0),
    .n_regions_V_ce0(runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_ce0),
    .n_regions_V_we0(runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_we0),
    .n_regions_V_d0(runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_d0),
    .n_regions_V_q0(n_regions_V_q0)
);

run_fifo_w1_d2_S copyInputAOV_in_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_copyInputAOV_in_c_din),
    .if_full_n(copyInputAOV_in_c_full_n),
    .if_write(read_train_U0_copyInputAOV_in_c_write),
    .if_dout(copyInputAOV_in_c_dout),
    .if_num_data_valid(copyInputAOV_in_c_num_data_valid),
    .if_fifo_cap(copyInputAOV_in_c_fifo_cap),
    .if_empty_n(copyInputAOV_in_c_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_in_read)
);

run_fifo_w8_d2_S contr_command_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_3),
    .if_full_n(contr_command_full_n),
    .if_write(ap_channel_done_contr_command),
    .if_dout(contr_command_dout),
    .if_num_data_valid(contr_command_num_data_valid),
    .if_fifo_cap(contr_command_fifo_cap),
    .if_empty_n(contr_command_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w16_d2_S contr_uniId_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_2),
    .if_full_n(contr_uniId_V_full_n),
    .if_write(ap_channel_done_contr_uniId_V),
    .if_dout(contr_uniId_V_dout),
    .if_num_data_valid(contr_uniId_V_num_data_valid),
    .if_fifo_cap(contr_uniId_V_fifo_cap),
    .if_empty_n(contr_uniId_V_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w8_d2_S contr_taskId_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_1),
    .if_full_n(contr_taskId_V_full_n),
    .if_write(ap_channel_done_contr_taskId_V),
    .if_dout(contr_taskId_V_dout),
    .if_num_data_valid(contr_taskId_V_num_data_valid),
    .if_fifo_cap(contr_taskId_V_fifo_cap),
    .if_empty_n(contr_taskId_V_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w8_d2_S contr_checkId_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_0),
    .if_full_n(contr_checkId_V_full_n),
    .if_write(ap_channel_done_contr_checkId_V),
    .if_dout(contr_checkId_V_dout),
    .if_num_data_valid(contr_checkId_V_num_data_valid),
    .if_fifo_cap(contr_checkId_V_fifo_cap),
    .if_empty_n(contr_checkId_V_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_4),
    .if_full_n(contr_AOV_full_n),
    .if_write(ap_channel_done_contr_AOV),
    .if_dout(contr_AOV_dout),
    .if_num_data_valid(contr_AOV_num_data_valid),
    .if_fifo_cap(contr_AOV_fifo_cap),
    .if_empty_n(contr_AOV_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_5),
    .if_full_n(contr_AOV_1_full_n),
    .if_write(ap_channel_done_contr_AOV_1),
    .if_dout(contr_AOV_1_dout),
    .if_num_data_valid(contr_AOV_1_num_data_valid),
    .if_fifo_cap(contr_AOV_1_fifo_cap),
    .if_empty_n(contr_AOV_1_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_6),
    .if_full_n(contr_AOV_2_full_n),
    .if_write(ap_channel_done_contr_AOV_2),
    .if_dout(contr_AOV_2_dout),
    .if_num_data_valid(contr_AOV_2_num_data_valid),
    .if_fifo_cap(contr_AOV_2_fifo_cap),
    .if_empty_n(contr_AOV_2_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_7),
    .if_full_n(contr_AOV_3_full_n),
    .if_write(ap_channel_done_contr_AOV_3),
    .if_dout(contr_AOV_3_dout),
    .if_num_data_valid(contr_AOV_3_num_data_valid),
    .if_fifo_cap(contr_AOV_3_fifo_cap),
    .if_empty_n(contr_AOV_3_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_8),
    .if_full_n(contr_AOV_4_full_n),
    .if_write(ap_channel_done_contr_AOV_4),
    .if_dout(contr_AOV_4_dout),
    .if_num_data_valid(contr_AOV_4_num_data_valid),
    .if_fifo_cap(contr_AOV_4_fifo_cap),
    .if_empty_n(contr_AOV_4_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_9),
    .if_full_n(contr_AOV_5_full_n),
    .if_write(ap_channel_done_contr_AOV_5),
    .if_dout(contr_AOV_5_dout),
    .if_num_data_valid(contr_AOV_5_num_data_valid),
    .if_fifo_cap(contr_AOV_5_fifo_cap),
    .if_empty_n(contr_AOV_5_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_10),
    .if_full_n(contr_AOV_6_full_n),
    .if_write(ap_channel_done_contr_AOV_6),
    .if_dout(contr_AOV_6_dout),
    .if_num_data_valid(contr_AOV_6_num_data_valid),
    .if_fifo_cap(contr_AOV_6_fifo_cap),
    .if_empty_n(contr_AOV_6_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

run_fifo_w32_d2_S contr_AOV_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_train_U0_ap_return_11),
    .if_full_n(contr_AOV_7_full_n),
    .if_write(ap_channel_done_contr_AOV_7),
    .if_dout(contr_AOV_7_dout),
    .if_num_data_valid(contr_AOV_7_num_data_valid),
    .if_fifo_cap(contr_AOV_7_fifo_cap),
    .if_empty_n(contr_AOV_7_empty_n),
    .if_read(runTestAfterInit_Block_entry1119_proc7_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV <= ap_sync_channel_write_contr_AOV;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_1 <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_1 <= ap_sync_channel_write_contr_AOV_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_2 <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_2 <= ap_sync_channel_write_contr_AOV_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_3 <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_3 <= ap_sync_channel_write_contr_AOV_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_4 <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_4 <= ap_sync_channel_write_contr_AOV_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_5 <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_5 <= ap_sync_channel_write_contr_AOV_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_6 <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_6 <= ap_sync_channel_write_contr_AOV_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_AOV_7 <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_AOV_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_AOV_7 <= ap_sync_channel_write_contr_AOV_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_checkId_V <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_checkId_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_checkId_V <= ap_sync_channel_write_contr_checkId_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_command <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_command <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_command <= ap_sync_channel_write_contr_command;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_taskId_V <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_taskId_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_taskId_V <= ap_sync_channel_write_contr_taskId_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_contr_uniId_V <= 1'b0;
    end else begin
        if (((read_train_U0_ap_done & read_train_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_contr_uniId_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_contr_uniId_V <= ap_sync_channel_write_contr_uniId_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_read_train_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_train_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_train_U0_ap_ready <= ap_sync_read_train_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready <= ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready;
        end
    end
end

assign ap_channel_done_contr_AOV = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV ^ 1'b1));

assign ap_channel_done_contr_AOV_1 = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_1 ^ 1'b1));

assign ap_channel_done_contr_AOV_2 = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_2 ^ 1'b1));

assign ap_channel_done_contr_AOV_3 = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_3 ^ 1'b1));

assign ap_channel_done_contr_AOV_4 = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_4 ^ 1'b1));

assign ap_channel_done_contr_AOV_5 = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_5 ^ 1'b1));

assign ap_channel_done_contr_AOV_6 = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_6 ^ 1'b1));

assign ap_channel_done_contr_AOV_7 = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_AOV_7 ^ 1'b1));

assign ap_channel_done_contr_checkId_V = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_checkId_V ^ 1'b1));

assign ap_channel_done_contr_command = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_command ^ 1'b1));

assign ap_channel_done_contr_taskId_V = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_taskId_V ^ 1'b1));

assign ap_channel_done_contr_uniId_V = (read_train_U0_ap_done & (ap_sync_reg_channel_write_contr_uniId_V ^ 1'b1));

assign ap_done = runTestAfterInit_Block_entry1119_proc7_U0_ap_done;

assign ap_idle = (runTestAfterInit_Block_entry1119_proc7_U0_ap_idle & read_train_U0_ap_idle & (contr_AOV_7_empty_n ^ 1'b1) & (contr_AOV_6_empty_n ^ 1'b1) & (contr_AOV_5_empty_n ^ 1'b1) & (contr_AOV_4_empty_n ^ 1'b1) & (contr_AOV_3_empty_n ^ 1'b1) & (contr_AOV_2_empty_n ^ 1'b1) & (contr_AOV_1_empty_n ^ 1'b1) & (contr_AOV_empty_n ^ 1'b1) & (contr_checkId_V_empty_n ^ 1'b1) & (contr_taskId_V_empty_n ^ 1'b1) & (contr_uniId_V_empty_n ^ 1'b1) & (contr_command_empty_n ^ 1'b1));

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_contr_AOV = ((contr_AOV_full_n & ap_channel_done_contr_AOV) | ap_sync_reg_channel_write_contr_AOV);

assign ap_sync_channel_write_contr_AOV_1 = ((contr_AOV_1_full_n & ap_channel_done_contr_AOV_1) | ap_sync_reg_channel_write_contr_AOV_1);

assign ap_sync_channel_write_contr_AOV_2 = ((contr_AOV_2_full_n & ap_channel_done_contr_AOV_2) | ap_sync_reg_channel_write_contr_AOV_2);

assign ap_sync_channel_write_contr_AOV_3 = ((contr_AOV_3_full_n & ap_channel_done_contr_AOV_3) | ap_sync_reg_channel_write_contr_AOV_3);

assign ap_sync_channel_write_contr_AOV_4 = ((contr_AOV_4_full_n & ap_channel_done_contr_AOV_4) | ap_sync_reg_channel_write_contr_AOV_4);

assign ap_sync_channel_write_contr_AOV_5 = ((contr_AOV_5_full_n & ap_channel_done_contr_AOV_5) | ap_sync_reg_channel_write_contr_AOV_5);

assign ap_sync_channel_write_contr_AOV_6 = ((contr_AOV_6_full_n & ap_channel_done_contr_AOV_6) | ap_sync_reg_channel_write_contr_AOV_6);

assign ap_sync_channel_write_contr_AOV_7 = ((contr_AOV_7_full_n & ap_channel_done_contr_AOV_7) | ap_sync_reg_channel_write_contr_AOV_7);

assign ap_sync_channel_write_contr_checkId_V = ((contr_checkId_V_full_n & ap_channel_done_contr_checkId_V) | ap_sync_reg_channel_write_contr_checkId_V);

assign ap_sync_channel_write_contr_command = ((contr_command_full_n & ap_channel_done_contr_command) | ap_sync_reg_channel_write_contr_command);

assign ap_sync_channel_write_contr_taskId_V = ((contr_taskId_V_full_n & ap_channel_done_contr_taskId_V) | ap_sync_reg_channel_write_contr_taskId_V);

assign ap_sync_channel_write_contr_uniId_V = ((contr_uniId_V_full_n & ap_channel_done_contr_uniId_V) | ap_sync_reg_channel_write_contr_uniId_V);

assign ap_sync_read_train_U0_ap_ready = (read_train_U0_ap_ready | ap_sync_reg_read_train_U0_ap_ready);

assign ap_sync_ready = (ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready & ap_sync_read_train_U0_ap_ready);

assign ap_sync_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready = (runTestAfterInit_Block_entry1119_proc7_U0_ap_ready | ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready);

assign copyInputAOV_out = runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out;

assign copyInputAOV_out_ap_vld = runTestAfterInit_Block_entry1119_proc7_U0_copyInputAOV_out_ap_vld;

assign errorInTask_address0 = runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_address0;

assign errorInTask_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_ce0;

assign errorInTask_d0 = runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_d0;

assign errorInTask_we0 = runTestAfterInit_Block_entry1119_proc7_U0_errorInTask_we0;

assign m_axi_gmem_ARADDR = read_train_U0_m_axi_gmem_ARADDR;

assign m_axi_gmem_ARBURST = read_train_U0_m_axi_gmem_ARBURST;

assign m_axi_gmem_ARCACHE = read_train_U0_m_axi_gmem_ARCACHE;

assign m_axi_gmem_ARID = read_train_U0_m_axi_gmem_ARID;

assign m_axi_gmem_ARLEN = read_train_U0_m_axi_gmem_ARLEN;

assign m_axi_gmem_ARLOCK = read_train_U0_m_axi_gmem_ARLOCK;

assign m_axi_gmem_ARPROT = read_train_U0_m_axi_gmem_ARPROT;

assign m_axi_gmem_ARQOS = read_train_U0_m_axi_gmem_ARQOS;

assign m_axi_gmem_ARREGION = read_train_U0_m_axi_gmem_ARREGION;

assign m_axi_gmem_ARSIZE = read_train_U0_m_axi_gmem_ARSIZE;

assign m_axi_gmem_ARUSER = read_train_U0_m_axi_gmem_ARUSER;

assign m_axi_gmem_ARVALID = read_train_U0_m_axi_gmem_ARVALID;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_RREADY = read_train_U0_m_axi_gmem_RREADY;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign n_regions_V_address0 = runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_address0;

assign n_regions_V_address1 = 6'd0;

assign n_regions_V_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_ce0;

assign n_regions_V_ce1 = 1'b0;

assign n_regions_V_d0 = runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_d0;

assign n_regions_V_d1 = 8'd0;

assign n_regions_V_we0 = runTestAfterInit_Block_entry1119_proc7_U0_n_regions_V_we0;

assign n_regions_V_we1 = 1'b0;

assign outcomeInRam_address0 = runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_address0;

assign outcomeInRam_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_ce0;

assign outcomeInRam_d0 = runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_d0;

assign outcomeInRam_we0 = runTestAfterInit_Block_entry1119_proc7_U0_outcomeInRam_we0;

assign read_train_U0_ap_continue = (ap_sync_channel_write_contr_uniId_V & ap_sync_channel_write_contr_taskId_V & ap_sync_channel_write_contr_command & ap_sync_channel_write_contr_checkId_V & ap_sync_channel_write_contr_AOV_7 & ap_sync_channel_write_contr_AOV_6 & ap_sync_channel_write_contr_AOV_5 & ap_sync_channel_write_contr_AOV_4 & ap_sync_channel_write_contr_AOV_3 & ap_sync_channel_write_contr_AOV_2 & ap_sync_channel_write_contr_AOV_1 & ap_sync_channel_write_contr_AOV);

assign read_train_U0_ap_start = ((ap_sync_reg_read_train_U0_ap_ready ^ 1'b1) & ap_start);

assign read_train_U0_copyInputAOV_read = p_read;

assign regions_1_address0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address0;

assign regions_1_address1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_address1;

assign regions_1_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce0;

assign regions_1_ce1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_ce1;

assign regions_1_d0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d0;

assign regions_1_d1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_d1;

assign regions_1_we0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we0;

assign regions_1_we1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_1_we1;

assign regions_2_address0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address0;

assign regions_2_address1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_address1;

assign regions_2_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce0;

assign regions_2_ce1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_ce1;

assign regions_2_d0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d0;

assign regions_2_d1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_d1;

assign regions_2_we0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we0;

assign regions_2_we1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_2_we1;

assign regions_3_address0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address0;

assign regions_3_address1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_address1;

assign regions_3_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce0;

assign regions_3_ce1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_ce1;

assign regions_3_d0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d0;

assign regions_3_d1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_d1;

assign regions_3_we0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we0;

assign regions_3_we1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_3_we1;

assign regions_4_address0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address0;

assign regions_4_address1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_address1;

assign regions_4_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce0;

assign regions_4_ce1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_ce1;

assign regions_4_d0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d0;

assign regions_4_d1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_d1;

assign regions_4_we0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we0;

assign regions_4_we1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_4_we1;

assign regions_5_address0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address0;

assign regions_5_address1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_address1;

assign regions_5_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce0;

assign regions_5_ce1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_ce1;

assign regions_5_d0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d0;

assign regions_5_d1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_d1;

assign regions_5_we0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we0;

assign regions_5_we1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_5_we1;

assign regions_address0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_address0;

assign regions_address1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_address1;

assign regions_ce0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_ce0;

assign regions_ce1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_ce1;

assign regions_d0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_d0;

assign regions_d1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_d1;

assign regions_we0 = runTestAfterInit_Block_entry1119_proc7_U0_regions_we0;

assign regions_we1 = runTestAfterInit_Block_entry1119_proc7_U0_regions_we1;

assign runTestAfterInit_Block_entry1119_proc7_U0_ap_continue = ap_continue;

assign runTestAfterInit_Block_entry1119_proc7_U0_ap_start = ((ap_sync_reg_runTestAfterInit_Block_entry1119_proc7_U0_ap_ready ^ 1'b1) & contr_uniId_V_empty_n & contr_taskId_V_empty_n & contr_command_empty_n & contr_checkId_V_empty_n & contr_AOV_empty_n & contr_AOV_7_empty_n & contr_AOV_6_empty_n & contr_AOV_5_empty_n & contr_AOV_4_empty_n & contr_AOV_3_empty_n & contr_AOV_2_empty_n & contr_AOV_1_empty_n & ap_start);

assign toScheduler_TDATA = runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TDATA;

assign toScheduler_TVALID = runTestAfterInit_Block_entry1119_proc7_U0_toScheduler_TVALID;

endmodule //run_runTestAfterInit
