// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_insert_point2_Pipeline_insert_point_label6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        trunc_ln251_5,
        trunc_ln251_7,
        tmp_190,
        regions_min_0_address0,
        regions_min_0_ce0,
        regions_min_0_we0,
        regions_min_0_d0,
        regions_min_0_q0,
        regions_min_0_address1,
        regions_min_0_ce1,
        regions_min_0_q1,
        tmp_203,
        tmp_192,
        regions_min_1_address0,
        regions_min_1_ce0,
        regions_min_1_we0,
        regions_min_1_d0,
        regions_min_1_q0,
        regions_min_1_address1,
        regions_min_1_ce1,
        regions_min_1_q1,
        tmp_205,
        tmp_194,
        regions_max_0_address0,
        regions_max_0_ce0,
        regions_max_0_we0,
        regions_max_0_d0,
        regions_max_0_q0,
        regions_max_0_address1,
        regions_max_0_ce1,
        regions_max_0_q1,
        tmp_207,
        tmp_196,
        regions_max_1_address0,
        regions_max_1_ce0,
        regions_max_1_we0,
        regions_max_1_d0,
        regions_max_1_q0,
        regions_max_1_address1,
        regions_max_1_ce1,
        regions_max_1_q1,
        tmp_209,
        tmp_211,
        regions_center_0_address0,
        regions_center_0_ce0,
        regions_center_0_we0,
        regions_center_0_d0,
        tmp_213,
        regions_center_1_address0,
        regions_center_1_ce0,
        regions_center_1_we0,
        regions_center_1_d0,
        grp_fu_2725_p_din0,
        grp_fu_2725_p_din1,
        grp_fu_2725_p_opcode,
        grp_fu_2725_p_dout0,
        grp_fu_2725_p_ce,
        grp_fu_2729_p_din0,
        grp_fu_2729_p_din1,
        grp_fu_2729_p_dout0,
        grp_fu_2729_p_ce,
        grp_fu_2713_p_din0,
        grp_fu_2713_p_din1,
        grp_fu_2713_p_opcode,
        grp_fu_2713_p_dout0,
        grp_fu_2713_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] trunc_ln251_5;
input  [0:0] trunc_ln251_7;
input  [11:0] tmp_190;
output  [11:0] regions_min_0_address0;
output   regions_min_0_ce0;
output   regions_min_0_we0;
output  [31:0] regions_min_0_d0;
input  [31:0] regions_min_0_q0;
output  [11:0] regions_min_0_address1;
output   regions_min_0_ce1;
input  [31:0] regions_min_0_q1;
input  [11:0] tmp_203;
input  [11:0] tmp_192;
output  [11:0] regions_min_1_address0;
output   regions_min_1_ce0;
output   regions_min_1_we0;
output  [31:0] regions_min_1_d0;
input  [31:0] regions_min_1_q0;
output  [11:0] regions_min_1_address1;
output   regions_min_1_ce1;
input  [31:0] regions_min_1_q1;
input  [11:0] tmp_205;
input  [11:0] tmp_194;
output  [11:0] regions_max_0_address0;
output   regions_max_0_ce0;
output   regions_max_0_we0;
output  [31:0] regions_max_0_d0;
input  [31:0] regions_max_0_q0;
output  [11:0] regions_max_0_address1;
output   regions_max_0_ce1;
input  [31:0] regions_max_0_q1;
input  [11:0] tmp_207;
input  [11:0] tmp_196;
output  [11:0] regions_max_1_address0;
output   regions_max_1_ce0;
output   regions_max_1_we0;
output  [31:0] regions_max_1_d0;
input  [31:0] regions_max_1_q0;
output  [11:0] regions_max_1_address1;
output   regions_max_1_ce1;
input  [31:0] regions_max_1_q1;
input  [11:0] tmp_209;
input  [11:0] tmp_211;
output  [11:0] regions_center_0_address0;
output   regions_center_0_ce0;
output   regions_center_0_we0;
output  [31:0] regions_center_0_d0;
input  [11:0] tmp_213;
output  [11:0] regions_center_1_address0;
output   regions_center_1_ce0;
output   regions_center_1_we0;
output  [31:0] regions_center_1_d0;
output  [31:0] grp_fu_2725_p_din0;
output  [31:0] grp_fu_2725_p_din1;
output  [0:0] grp_fu_2725_p_opcode;
input  [31:0] grp_fu_2725_p_dout0;
output   grp_fu_2725_p_ce;
output  [31:0] grp_fu_2729_p_din0;
output  [31:0] grp_fu_2729_p_din1;
input  [31:0] grp_fu_2729_p_dout0;
output   grp_fu_2729_p_ce;
output  [31:0] grp_fu_2713_p_din0;
output  [31:0] grp_fu_2713_p_din1;
output  [4:0] grp_fu_2713_p_opcode;
input  [0:0] grp_fu_2713_p_dout0;
output   grp_fu_2713_p_ce;

reg ap_idle;
reg[11:0] regions_min_0_address0;
reg regions_min_0_ce0;
reg regions_min_0_we0;
reg regions_min_0_ce1;
reg[11:0] regions_min_1_address0;
reg regions_min_1_ce0;
reg regions_min_1_we0;
reg regions_min_1_ce1;
reg[11:0] regions_max_0_address0;
reg regions_max_0_ce0;
reg regions_max_0_we0;
reg regions_max_0_ce1;
reg[11:0] regions_max_1_address0;
reg regions_max_1_ce0;
reg regions_max_1_we0;
reg regions_max_1_ce1;
reg regions_center_0_ce0;
reg regions_center_0_we0;
reg regions_center_1_ce0;
reg regions_center_1_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln348_reg_683;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] empty_212_reg_282;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln251_5_read_reg_677;
wire   [0:0] icmp_ln348_fu_325_p2;
reg   [0:0] icmp_ln348_reg_683_pp0_iter1_reg;
reg   [0:0] icmp_ln348_reg_683_pp0_iter2_reg;
reg   [0:0] icmp_ln348_reg_683_pp0_iter3_reg;
wire   [11:0] zext_ln349_fu_337_p1;
reg   [11:0] zext_ln349_reg_687;
reg   [11:0] zext_ln349_reg_687_pp0_iter1_reg;
reg   [11:0] zext_ln349_reg_687_pp0_iter2_reg;
reg   [11:0] zext_ln349_reg_687_pp0_iter3_reg;
reg   [11:0] zext_ln349_reg_687_pp0_iter4_reg;
reg   [11:0] regions_min_0_addr_1_reg_698;
reg   [11:0] regions_min_0_addr_1_reg_698_pp0_iter1_reg;
reg   [11:0] regions_min_1_addr_1_reg_708;
reg   [11:0] regions_min_1_addr_1_reg_708_pp0_iter1_reg;
reg   [11:0] regions_max_0_addr_1_reg_718;
reg   [11:0] regions_max_0_addr_1_reg_718_pp0_iter1_reg;
reg   [11:0] regions_max_1_addr_1_reg_728;
reg   [11:0] regions_max_1_addr_1_reg_728_pp0_iter1_reg;
wire   [31:0] tmp_s_fu_434_p4;
reg   [31:0] tmp_s_reg_733;
wire   [31:0] tmp_61_fu_444_p4;
reg   [31:0] tmp_61_reg_742;
wire   [31:0] tmp_65_fu_454_p4;
reg   [31:0] tmp_65_reg_749;
wire   [31:0] tmp_66_fu_463_p4;
reg   [31:0] tmp_66_reg_758;
wire   [0:0] and_ln349_1_fu_548_p2;
reg   [0:0] and_ln349_1_reg_765;
wire   [0:0] and_ln352_1_fu_630_p2;
reg   [31:0] add_reg_773;
reg   [31:0] conv_reg_778;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_212_reg_282;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_212_reg_282;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_reg_292;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_reg_292;
reg   [31:0] ap_phi_reg_pp0_iter2_empty_reg_292;
wire   [63:0] zext_ln349_1_fu_347_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln349_2_fu_358_p1;
wire   [63:0] zext_ln349_3_fu_369_p1;
wire   [63:0] zext_ln349_4_fu_380_p1;
wire   [63:0] zext_ln352_fu_391_p1;
wire   [63:0] zext_ln352_1_fu_402_p1;
wire   [63:0] zext_ln352_2_fu_413_p1;
wire   [63:0] zext_ln352_3_fu_424_p1;
wire   [63:0] zext_ln355_fu_640_p1;
wire   [63:0] zext_ln355_1_fu_649_p1;
reg   [3:0] i_fu_80;
wire   [3:0] add_ln348_fu_331_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_3;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_313_p0;
reg   [31:0] grp_fu_313_p1;
wire   [11:0] add_ln349_fu_341_p2;
wire   [11:0] add_ln349_1_fu_352_p2;
wire   [11:0] add_ln349_2_fu_363_p2;
wire   [11:0] add_ln349_3_fu_374_p2;
wire   [11:0] add_ln352_fu_385_p2;
wire   [11:0] add_ln352_1_fu_396_p2;
wire   [11:0] add_ln352_2_fu_407_p2;
wire   [11:0] add_ln352_3_fu_418_p2;
wire   [31:0] bitcast_ln349_fu_472_p1;
wire   [31:0] bitcast_ln349_1_fu_489_p1;
wire   [7:0] tmp_62_fu_475_p4;
wire   [22:0] trunc_ln349_fu_485_p1;
wire   [0:0] icmp_ln349_1_fu_512_p2;
wire   [0:0] icmp_ln349_fu_506_p2;
wire   [7:0] tmp_63_fu_492_p4;
wire   [22:0] trunc_ln349_1_fu_502_p1;
wire   [0:0] icmp_ln349_3_fu_530_p2;
wire   [0:0] icmp_ln349_2_fu_524_p2;
wire   [0:0] or_ln349_fu_518_p2;
wire   [0:0] or_ln349_1_fu_536_p2;
wire   [0:0] and_ln349_fu_542_p2;
wire   [31:0] bitcast_ln352_fu_554_p1;
wire   [31:0] bitcast_ln352_1_fu_571_p1;
wire   [7:0] tmp_67_fu_557_p4;
wire   [22:0] trunc_ln352_fu_567_p1;
wire   [0:0] icmp_ln352_1_fu_594_p2;
wire   [0:0] icmp_ln352_fu_588_p2;
wire   [7:0] tmp_68_fu_574_p4;
wire   [22:0] trunc_ln352_1_fu_584_p1;
wire   [0:0] icmp_ln352_3_fu_612_p2;
wire   [0:0] icmp_ln352_2_fu_606_p2;
wire   [0:0] or_ln352_fu_600_p2;
wire   [0:0] or_ln352_1_fu_618_p2;
wire   [0:0] and_ln352_fu_624_p2;
wire   [11:0] add_ln355_fu_636_p2;
wire   [11:0] add_ln355_1_fu_645_p2;
wire    ap_block_pp0_stage0_00001;
reg   [4:0] grp_fu_313_opcode;
wire    ap_block_pp0_stage1_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter4_stage0;
reg    ap_idle_pp0_0to3;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to5;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_268;
reg    ap_condition_523;
reg    ap_condition_526;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U218(
    .din0(regions_min_0_q1),
    .din1(regions_min_1_q1),
    .din2(trunc_ln251_7),
    .dout(tmp_s_fu_434_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U219(
    .din0(regions_min_0_q0),
    .din1(regions_min_1_q0),
    .din2(trunc_ln251_5),
    .dout(tmp_61_fu_444_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U220(
    .din0(regions_max_0_q1),
    .din1(regions_max_1_q1),
    .din2(trunc_ln251_7),
    .dout(tmp_65_fu_454_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U221(
    .din0(regions_max_0_q0),
    .din1(regions_max_1_q0),
    .din2(trunc_ln251_5),
    .dout(tmp_66_fu_463_p4)
);

run_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln348_reg_683 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln349_1_fu_548_p2))) begin
        ap_phi_reg_pp0_iter1_empty_212_reg_282 <= tmp_61_reg_742;
    end else if (((1'd1 == and_ln349_1_fu_548_p2) & (icmp_ln348_reg_683 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_empty_212_reg_282 <= tmp_s_reg_733;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_empty_212_reg_282 <= ap_phi_reg_pp0_iter0_empty_212_reg_282;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_268)) begin
        if (((1'd0 == and_ln352_1_fu_630_p2) & (icmp_ln348_reg_683_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter2_empty_reg_292 <= tmp_66_reg_758;
        end else if (((1'd1 == and_ln352_1_fu_630_p2) & (icmp_ln348_reg_683_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter2_empty_reg_292 <= tmp_65_reg_749;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_empty_reg_292 <= ap_phi_reg_pp0_iter1_empty_reg_292;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln348_fu_325_p2 == 1'd0))) begin
            i_fu_80 <= add_ln348_fu_331_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_reg_773 <= grp_fu_2725_p_dout0;
        conv_reg_778 <= grp_fu_2729_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln348_reg_683 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln349_1_reg_765 <= and_ln349_1_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_empty_reg_292 <= ap_phi_reg_pp0_iter0_empty_reg_292;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_212_reg_282 <= ap_phi_reg_pp0_iter1_empty_212_reg_282;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln348_reg_683 <= icmp_ln348_fu_325_p2;
        icmp_ln348_reg_683_pp0_iter1_reg <= icmp_ln348_reg_683;
        icmp_ln348_reg_683_pp0_iter2_reg <= icmp_ln348_reg_683_pp0_iter1_reg;
        icmp_ln348_reg_683_pp0_iter3_reg <= icmp_ln348_reg_683_pp0_iter2_reg;
        regions_max_0_addr_1_reg_718_pp0_iter1_reg <= regions_max_0_addr_1_reg_718;
        regions_max_1_addr_1_reg_728_pp0_iter1_reg <= regions_max_1_addr_1_reg_728;
        regions_min_0_addr_1_reg_698_pp0_iter1_reg <= regions_min_0_addr_1_reg_698;
        regions_min_1_addr_1_reg_708_pp0_iter1_reg <= regions_min_1_addr_1_reg_708;
        zext_ln349_reg_687_pp0_iter1_reg[3 : 0] <= zext_ln349_reg_687[3 : 0];
        zext_ln349_reg_687_pp0_iter2_reg[3 : 0] <= zext_ln349_reg_687_pp0_iter1_reg[3 : 0];
        zext_ln349_reg_687_pp0_iter3_reg[3 : 0] <= zext_ln349_reg_687_pp0_iter2_reg[3 : 0];
        zext_ln349_reg_687_pp0_iter4_reg[3 : 0] <= zext_ln349_reg_687_pp0_iter3_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln348_fu_325_p2 == 1'd0))) begin
        regions_max_0_addr_1_reg_718 <= zext_ln352_1_fu_402_p1;
        regions_max_1_addr_1_reg_728 <= zext_ln352_3_fu_424_p1;
        regions_min_0_addr_1_reg_698 <= zext_ln349_2_fu_358_p1;
        regions_min_1_addr_1_reg_708 <= zext_ln349_4_fu_380_p1;
        zext_ln349_reg_687[3 : 0] <= zext_ln349_fu_337_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln348_reg_683 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_61_reg_742 <= tmp_61_fu_444_p4;
        tmp_65_reg_749 <= tmp_65_fu_454_p4;
        tmp_66_reg_758 <= tmp_66_fu_463_p4;
        tmp_s_reg_733 <= tmp_s_fu_434_p4;
    end
end

always @ (*) begin
    if (((icmp_ln348_reg_683 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln348_reg_683_pp0_iter3_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to5 = 1'b1;
    end else begin
        ap_idle_pp0_1to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_80;
    end
end

always @ (*) begin
    if ((icmp_ln348_reg_683 == 1'd0)) begin
        if ((1'b1 == ap_condition_526)) begin
            grp_fu_313_opcode = 5'd2;
        end else if ((1'b1 == ap_condition_523)) begin
            grp_fu_313_opcode = 5'd4;
        end else begin
            grp_fu_313_opcode = 'bx;
        end
    end else begin
        grp_fu_313_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_313_p0 = tmp_65_reg_749;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_313_p0 = tmp_s_fu_434_p4;
    end else begin
        grp_fu_313_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_313_p1 = tmp_66_reg_758;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_313_p1 = tmp_61_fu_444_p4;
    end else begin
        grp_fu_313_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_center_0_ce0 = 1'b1;
    end else begin
        regions_center_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln251_5_read_reg_677 == 1'd0))) begin
        regions_center_0_we0 = 1'b1;
    end else begin
        regions_center_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_center_1_ce0 = 1'b1;
    end else begin
        regions_center_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln251_5_read_reg_677 == 1'd1))) begin
        regions_center_1_we0 = 1'b1;
    end else begin
        regions_center_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        regions_max_0_address0 = regions_max_0_addr_1_reg_718_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_max_0_address0 = zext_ln352_1_fu_402_p1;
    end else begin
        regions_max_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        regions_max_0_ce0 = 1'b1;
    end else begin
        regions_max_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_max_0_ce1 = 1'b1;
    end else begin
        regions_max_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln352_1_fu_630_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln251_5_read_reg_677 == 1'd0))) begin
        regions_max_0_we0 = 1'b1;
    end else begin
        regions_max_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        regions_max_1_address0 = regions_max_1_addr_1_reg_728_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_max_1_address0 = zext_ln352_3_fu_424_p1;
    end else begin
        regions_max_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        regions_max_1_ce0 = 1'b1;
    end else begin
        regions_max_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_max_1_ce1 = 1'b1;
    end else begin
        regions_max_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln352_1_fu_630_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln251_5_read_reg_677 == 1'd1))) begin
        regions_max_1_we0 = 1'b1;
    end else begin
        regions_max_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        regions_min_0_address0 = regions_min_0_addr_1_reg_698_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_min_0_address0 = zext_ln349_2_fu_358_p1;
    end else begin
        regions_min_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        regions_min_0_ce0 = 1'b1;
    end else begin
        regions_min_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_min_0_ce1 = 1'b1;
    end else begin
        regions_min_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln349_1_reg_765) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln251_5_read_reg_677 == 1'd0))) begin
        regions_min_0_we0 = 1'b1;
    end else begin
        regions_min_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        regions_min_1_address0 = regions_min_1_addr_1_reg_708_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_min_1_address0 = zext_ln349_4_fu_380_p1;
    end else begin
        regions_min_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        regions_min_1_ce0 = 1'b1;
    end else begin
        regions_min_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regions_min_1_ce1 = 1'b1;
    end else begin
        regions_min_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln349_1_reg_765) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln251_5_read_reg_677 == 1'd1))) begin
        regions_min_1_we0 = 1'b1;
    end else begin
        regions_min_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to5 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln348_fu_331_p2 = (ap_sig_allocacmp_i_3 + 4'd1);

assign add_ln349_1_fu_352_p2 = (tmp_203 + zext_ln349_fu_337_p1);

assign add_ln349_2_fu_363_p2 = (tmp_192 + zext_ln349_fu_337_p1);

assign add_ln349_3_fu_374_p2 = (tmp_205 + zext_ln349_fu_337_p1);

assign add_ln349_fu_341_p2 = (tmp_190 + zext_ln349_fu_337_p1);

assign add_ln352_1_fu_396_p2 = (tmp_207 + zext_ln349_fu_337_p1);

assign add_ln352_2_fu_407_p2 = (tmp_196 + zext_ln349_fu_337_p1);

assign add_ln352_3_fu_418_p2 = (tmp_209 + zext_ln349_fu_337_p1);

assign add_ln352_fu_385_p2 = (tmp_194 + zext_ln349_fu_337_p1);

assign add_ln355_1_fu_645_p2 = (tmp_213 + zext_ln349_reg_687_pp0_iter4_reg);

assign add_ln355_fu_636_p2 = (tmp_211 + zext_ln349_reg_687_pp0_iter4_reg);

assign and_ln349_1_fu_548_p2 = (grp_fu_2713_p_dout0 & and_ln349_fu_542_p2);

assign and_ln349_fu_542_p2 = (or_ln349_fu_518_p2 & or_ln349_1_fu_536_p2);

assign and_ln352_1_fu_630_p2 = (grp_fu_2713_p_dout0 & and_ln352_fu_624_p2);

assign and_ln352_fu_624_p2 = (or_ln352_fu_600_p2 & or_ln352_1_fu_618_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_268 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_523 = ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_526 = ((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_empty_212_reg_282 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_reg_292 = 'bx;

assign bitcast_ln349_1_fu_489_p1 = tmp_61_reg_742;

assign bitcast_ln349_fu_472_p1 = tmp_s_reg_733;

assign bitcast_ln352_1_fu_571_p1 = tmp_66_reg_758;

assign bitcast_ln352_fu_554_p1 = tmp_65_reg_749;

assign grp_fu_2713_p_ce = 1'b1;

assign grp_fu_2713_p_din0 = grp_fu_313_p0;

assign grp_fu_2713_p_din1 = grp_fu_313_p1;

assign grp_fu_2713_p_opcode = grp_fu_313_opcode;

assign grp_fu_2725_p_ce = 1'b1;

assign grp_fu_2725_p_din0 = ap_phi_reg_pp0_iter2_empty_reg_292;

assign grp_fu_2725_p_din1 = empty_212_reg_282;

assign grp_fu_2725_p_opcode = 2'd0;

assign grp_fu_2729_p_ce = 1'b1;

assign grp_fu_2729_p_din0 = add_reg_773;

assign grp_fu_2729_p_din1 = 32'd1056964608;

assign icmp_ln348_fu_325_p2 = ((ap_sig_allocacmp_i_3 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln349_1_fu_512_p2 = ((trunc_ln349_fu_485_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln349_2_fu_524_p2 = ((tmp_63_fu_492_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln349_3_fu_530_p2 = ((trunc_ln349_1_fu_502_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln349_fu_506_p2 = ((tmp_62_fu_475_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln352_1_fu_594_p2 = ((trunc_ln352_fu_567_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln352_2_fu_606_p2 = ((tmp_68_fu_574_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln352_3_fu_612_p2 = ((trunc_ln352_1_fu_584_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_588_p2 = ((tmp_67_fu_557_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln349_1_fu_536_p2 = (icmp_ln349_3_fu_530_p2 | icmp_ln349_2_fu_524_p2);

assign or_ln349_fu_518_p2 = (icmp_ln349_fu_506_p2 | icmp_ln349_1_fu_512_p2);

assign or_ln352_1_fu_618_p2 = (icmp_ln352_3_fu_612_p2 | icmp_ln352_2_fu_606_p2);

assign or_ln352_fu_600_p2 = (icmp_ln352_fu_588_p2 | icmp_ln352_1_fu_594_p2);

assign regions_center_0_address0 = zext_ln355_fu_640_p1;

assign regions_center_0_d0 = conv_reg_778;

assign regions_center_1_address0 = zext_ln355_1_fu_649_p1;

assign regions_center_1_d0 = conv_reg_778;

assign regions_max_0_address1 = zext_ln352_fu_391_p1;

assign regions_max_0_d0 = tmp_65_reg_749;

assign regions_max_1_address1 = zext_ln352_2_fu_413_p1;

assign regions_max_1_d0 = tmp_65_reg_749;

assign regions_min_0_address1 = zext_ln349_1_fu_347_p1;

assign regions_min_0_d0 = tmp_s_reg_733;

assign regions_min_1_address1 = zext_ln349_3_fu_369_p1;

assign regions_min_1_d0 = tmp_s_reg_733;

assign tmp_62_fu_475_p4 = {{bitcast_ln349_fu_472_p1[30:23]}};

assign tmp_63_fu_492_p4 = {{bitcast_ln349_1_fu_489_p1[30:23]}};

assign tmp_67_fu_557_p4 = {{bitcast_ln352_fu_554_p1[30:23]}};

assign tmp_68_fu_574_p4 = {{bitcast_ln352_1_fu_571_p1[30:23]}};

assign trunc_ln251_5_read_reg_677 = trunc_ln251_5;

assign trunc_ln349_1_fu_502_p1 = bitcast_ln349_1_fu_489_p1[22:0];

assign trunc_ln349_fu_485_p1 = bitcast_ln349_fu_472_p1[22:0];

assign trunc_ln352_1_fu_584_p1 = bitcast_ln352_1_fu_571_p1[22:0];

assign trunc_ln352_fu_567_p1 = bitcast_ln352_fu_554_p1[22:0];

assign zext_ln349_1_fu_347_p1 = add_ln349_fu_341_p2;

assign zext_ln349_2_fu_358_p1 = add_ln349_1_fu_352_p2;

assign zext_ln349_3_fu_369_p1 = add_ln349_2_fu_363_p2;

assign zext_ln349_4_fu_380_p1 = add_ln349_3_fu_374_p2;

assign zext_ln349_fu_337_p1 = ap_sig_allocacmp_i_3;

assign zext_ln352_1_fu_402_p1 = add_ln352_1_fu_396_p2;

assign zext_ln352_2_fu_413_p1 = add_ln352_2_fu_407_p2;

assign zext_ln352_3_fu_424_p1 = add_ln352_3_fu_418_p2;

assign zext_ln352_fu_391_p1 = add_ln352_fu_385_p2;

assign zext_ln355_1_fu_649_p1 = add_ln355_1_fu_645_p2;

assign zext_ln355_fu_640_p1 = add_ln355_fu_636_p2;

always @ (posedge ap_clk) begin
    zext_ln349_reg_687[11:4] <= 8'b00000000;
    zext_ln349_reg_687_pp0_iter1_reg[11:4] <= 8'b00000000;
    zext_ln349_reg_687_pp0_iter2_reg[11:4] <= 8'b00000000;
    zext_ln349_reg_687_pp0_iter3_reg[11:4] <= 8'b00000000;
    zext_ln349_reg_687_pp0_iter4_reg[11:4] <= 8'b00000000;
end

endmodule //run_insert_point2_Pipeline_insert_point_label6
