

================================================================
== Vitis HLS Report for 'run_test_Pipeline_VITIS_LOOP_55_2'
================================================================
* Date:           Mon Oct 17 15:14:54 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        detector_solid
* Solution:       solution2 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  18.00 ns|  10.273 ns|     4.86 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       46|  0.198 us|  0.828 us|   11|   46|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_55_2  |        9|       44|         5|          5|          1|  1 ~ 8|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 5, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 8 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read1012 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read10"   --->   Operation 9 'read' 'p_read1012' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read911 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read9"   --->   Operation 10 'read' 'p_read911' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read810 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read8"   --->   Operation 11 'read' 'p_read810' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read79 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read7"   --->   Operation 12 'read' 'p_read79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read68 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read6"   --->   Operation 13 'read' 'p_read68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read57 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read5"   --->   Operation 14 'read' 'p_read57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read46 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read4"   --->   Operation 15 'read' 'p_read46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read35 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_read3"   --->   Operation 16 'read' 'p_read35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln1_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %trunc_ln1"   --->   Operation 17 'read' 'trunc_ln1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_11_read = read i12 @_ssdm_op_Read.ap_auto.i12, i12 %tmp_11"   --->   Operation 18 'read' 'tmp_11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i64 0, i64 %j"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body3.i.split.i"   --->   Operation 20 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.80>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%j_1 = load i64 %j" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 21 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln59 = trunc i64 %j_1" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 22 'trunc' 'trunc_ln59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.54ns)   --->   "%add_ln59 = add i12 %tmp_11_read, i12 %trunc_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 23 'add' 'add_ln59' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i12 %add_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 24 'zext' 'zext_ln59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%regions_addr = getelementptr i32 %regions, i64 0, i64 %zext_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 25 'getelementptr' 'regions_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%regions_2_addr = getelementptr i32 %regions_2, i64 0, i64 %zext_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 26 'getelementptr' 'regions_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%regions_3_addr = getelementptr i32 %regions_3, i64 0, i64 %zext_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 27 'getelementptr' 'regions_3_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%regions_4_addr = getelementptr i32 %regions_4, i64 0, i64 %zext_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 28 'getelementptr' 'regions_4_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [2/2] (3.25ns)   --->   "%regions_load = load i12 %regions_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 29 'load' 'regions_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 30 [2/2] (3.25ns)   --->   "%regions_2_load = load i12 %regions_2_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 30 'load' 'regions_2_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 31 [1/1] (2.30ns)   --->   "%tmp_1_i = mux i32 @_ssdm_op_Mux.ap_auto.8f32.i64, i32 %p_read35, i32 %p_read46, i32 %p_read57, i32 %p_read68, i32 %p_read79, i32 %p_read810, i32 %p_read911, i32 %p_read1012, i64 %j_1" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 31 'mux' 'tmp_1_i' <Predicate = true> <Delay = 2.30> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 10.2>
ST_3 : Operation 32 [1/2] (3.25ns)   --->   "%regions_load = load i12 %regions_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 32 'load' 'regions_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 33 [1/2] (3.25ns)   --->   "%regions_2_load = load i12 %regions_2_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 33 'load' 'regions_2_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_3 : Operation 34 [1/1] (1.58ns)   --->   "%tmp_i = mux i32 @_ssdm_op_Mux.ap_auto.2float.i1, i32 %regions_load, i32 %regions_2_load, i1 %trunc_ln1_read" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 34 'mux' 'tmp_i' <Predicate = true> <Delay = 1.58> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%bitcast_ln59 = bitcast i32 %tmp_i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 35 'bitcast' 'bitcast_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 36 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln59_1 = trunc i32 %bitcast_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 37 'trunc' 'trunc_ln59_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.55ns)   --->   "%icmp_ln59 = icmp_ne  i8 %tmp, i8 255" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 38 'icmp' 'icmp_ln59' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (2.44ns)   --->   "%icmp_ln59_1 = icmp_eq  i23 %trunc_ln59_1, i23 0" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 39 'icmp' 'icmp_ln59_1' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [2/2] (5.43ns)   --->   "%tmp_6 = fcmp_ole  i32 %tmp_i, i32 %tmp_1_i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 40 'fcmp' 'tmp_6' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.11>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 41 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%speclooptripcount_ln57 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1, i64 8, i64 4" [detector_solid/abs_solid_detector.cpp:57]   --->   Operation 42 'speclooptripcount' 'speclooptripcount_ln57' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%specloopname_ln55 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [detector_solid/abs_solid_detector.cpp:55]   --->   Operation 43 'specloopname' 'specloopname_ln55' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%bitcast_ln59_1 = bitcast i32 %tmp_1_i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 44 'bitcast' 'bitcast_ln59_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_1, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 45 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln59_2 = trunc i32 %bitcast_ln59_1" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 46 'trunc' 'trunc_ln59_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_1)   --->   "%or_ln59 = or i1 %icmp_ln59_1, i1 %icmp_ln59" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 47 'or' 'or_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (1.55ns)   --->   "%icmp_ln59_2 = icmp_ne  i8 %tmp_5, i8 255" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 48 'icmp' 'icmp_ln59_2' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (2.44ns)   --->   "%icmp_ln59_3 = icmp_eq  i23 %trunc_ln59_2, i23 0" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 49 'icmp' 'icmp_ln59_3' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_1)   --->   "%or_ln59_1 = or i1 %icmp_ln59_3, i1 %icmp_ln59_2" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 50 'or' 'or_ln59_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/2] (5.43ns)   --->   "%tmp_6 = fcmp_ole  i32 %tmp_i, i32 %tmp_1_i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 51 'fcmp' 'tmp_6' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_1)   --->   "%and_ln59 = and i1 %or_ln59, i1 %or_ln59_1" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 52 'and' 'and_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln59_1 = and i1 %and_ln59, i1 %tmp_6" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 53 'and' 'and_ln59_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (3.52ns)   --->   "%add_ln55 = add i64 %j_1, i64 1" [detector_solid/abs_solid_detector.cpp:55]   --->   Operation 54 'add' 'add_ln55' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (1.70ns)   --->   "%br_ln59 = br i1 %and_ln59_1, void %for.body3.i.split.i.for.inc19.i.i_crit_edge.exitStub, void %land.lhs.true.i.i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 55 'br' 'br_ln59' <Predicate = true> <Delay = 1.70>
ST_4 : Operation 56 [2/2] (3.25ns)   --->   "%regions_3_load = load i12 %regions_3_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 56 'load' 'regions_3_load' <Predicate = (and_ln59_1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_4 : Operation 57 [2/2] (3.25ns)   --->   "%regions_4_load = load i12 %regions_4_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 57 'load' 'regions_4_load' <Predicate = (and_ln59_1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 5 <SV = 4> <Delay = 10.2>
ST_5 : Operation 58 [1/2] (3.25ns)   --->   "%regions_3_load = load i12 %regions_3_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 58 'load' 'regions_3_load' <Predicate = (and_ln59_1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_5 : Operation 59 [1/2] (3.25ns)   --->   "%regions_4_load = load i12 %regions_4_addr" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 59 'load' 'regions_4_load' <Predicate = (and_ln59_1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_5 : Operation 60 [1/1] (1.58ns)   --->   "%tmp_2_i = mux i32 @_ssdm_op_Mux.ap_auto.2float.i1, i32 %regions_3_load, i32 %regions_4_load, i1 %trunc_ln1_read" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 60 'mux' 'tmp_2_i' <Predicate = (and_ln59_1)> <Delay = 1.58> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%bitcast_ln59_2 = bitcast i32 %tmp_2_i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 61 'bitcast' 'bitcast_ln59_2' <Predicate = (and_ln59_1)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_2, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 62 'partselect' 'tmp_7' <Predicate = (and_ln59_1)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln59_3 = trunc i32 %bitcast_ln59_2" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 63 'trunc' 'trunc_ln59_3' <Predicate = (and_ln59_1)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (1.55ns)   --->   "%icmp_ln59_4 = icmp_ne  i8 %tmp_7, i8 255" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 64 'icmp' 'icmp_ln59_4' <Predicate = (and_ln59_1)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (2.44ns)   --->   "%icmp_ln59_5 = icmp_eq  i23 %trunc_ln59_3, i23 0" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 65 'icmp' 'icmp_ln59_5' <Predicate = (and_ln59_1)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [2/2] (5.43ns)   --->   "%tmp_9 = fcmp_oge  i32 %tmp_2_i, i32 %tmp_1_i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 66 'fcmp' 'tmp_9' <Predicate = (and_ln59_1)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.11>
ST_6 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_2)   --->   "%or_ln59_2 = or i1 %icmp_ln59_5, i1 %icmp_ln59_4" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 67 'or' 'or_ln59_2' <Predicate = (and_ln59_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/2] (5.43ns)   --->   "%tmp_9 = fcmp_oge  i32 %tmp_2_i, i32 %tmp_1_i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 68 'fcmp' 'tmp_9' <Predicate = (and_ln59_1)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln59_2 = and i1 %or_ln59_2, i1 %tmp_9" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 69 'and' 'and_ln59_2' <Predicate = (and_ln59_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (1.70ns)   --->   "%br_ln59 = br i1 %and_ln59_2, void %for.body3.i.split.i.for.inc19.i.i_crit_edge.exitStub, void %if.then.i.i" [detector_solid/abs_solid_detector.cpp:59]   --->   Operation 70 'br' 'br_ln59' <Predicate = (and_ln59_1)> <Delay = 1.70>
ST_6 : Operation 71 [1/1] (2.77ns)   --->   "%icmp_ln60 = icmp_eq  i64 %j_1, i64 7" [detector_solid/abs_solid_detector.cpp:60]   --->   Operation 71 'icmp' 'icmp_ln60' <Predicate = (and_ln59_1 & and_ln59_2)> <Delay = 2.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (1.70ns)   --->   "%br_ln60 = br i1 %icmp_ln60, void %for.inc.i4.i, void %for.body3.i.split.i.for.inc19.i.i_crit_edge.exitStub" [detector_solid/abs_solid_detector.cpp:60]   --->   Operation 72 'br' 'br_ln60' <Predicate = (and_ln59_1 & and_ln59_2)> <Delay = 1.70>
ST_6 : Operation 73 [1/1] (1.58ns)   --->   "%store_ln55 = store i64 %add_ln55, i64 %j" [detector_solid/abs_solid_detector.cpp:55]   --->   Operation 73 'store' 'store_ln55' <Predicate = (and_ln59_1 & and_ln59_2 & !icmp_ln60)> <Delay = 1.58>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln55 = br void %for.body3.i.split.i" [detector_solid/abs_solid_detector.cpp:55]   --->   Operation 74 'br' 'br_ln55' <Predicate = (and_ln59_1 & and_ln59_2 & !icmp_ln60)> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%merge = phi i2 0, void %for.body3.i.split.i, i2 1, void %if.then.i.i, i2 2, void %land.lhs.true.i.i"   --->   Operation 75 'phi' 'merge' <Predicate = (icmp_ln60) | (!and_ln59_2) | (!and_ln59_1)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i2 %merge"   --->   Operation 76 'ret' 'ret_ln0' <Predicate = (icmp_ln60) | (!and_ln59_2) | (!and_ln59_1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 18ns, clock uncertainty: 4.86ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('j') [15]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'j' [26]  (1.59 ns)

 <State 2>: 4.8ns
The critical path consists of the following:
	'load' operation ('j', detector_solid/abs_solid_detector.cpp:59) on local variable 'j' [29]  (0 ns)
	'add' operation ('add_ln59', detector_solid/abs_solid_detector.cpp:59) [31]  (1.55 ns)
	'getelementptr' operation ('regions_addr', detector_solid/abs_solid_detector.cpp:59) [33]  (0 ns)
	'load' operation ('regions_load', detector_solid/abs_solid_detector.cpp:59) on array 'regions' [40]  (3.25 ns)

 <State 3>: 10.3ns
The critical path consists of the following:
	'load' operation ('regions_load', detector_solid/abs_solid_detector.cpp:59) on array 'regions' [40]  (3.25 ns)
	'mux' operation ('tmp_i', detector_solid/abs_solid_detector.cpp:59) [42]  (1.59 ns)
	'fcmp' operation ('tmp_6', detector_solid/abs_solid_detector.cpp:59) [56]  (5.43 ns)

 <State 4>: 8.12ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', detector_solid/abs_solid_detector.cpp:59) [56]  (5.43 ns)
	'and' operation ('and_ln59_1', detector_solid/abs_solid_detector.cpp:59) [58]  (0.978 ns)
	multiplexor before 'phi' operation ('merge') [81]  (1.71 ns)

 <State 5>: 10.3ns
The critical path consists of the following:
	'load' operation ('regions_3_load', detector_solid/abs_solid_detector.cpp:59) on array 'regions_3' [62]  (3.25 ns)
	'mux' operation ('tmp_2_i', detector_solid/abs_solid_detector.cpp:59) [64]  (1.59 ns)
	'fcmp' operation ('tmp_9', detector_solid/abs_solid_detector.cpp:59) [71]  (5.43 ns)

 <State 6>: 8.12ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', detector_solid/abs_solid_detector.cpp:59) [71]  (5.43 ns)
	'and' operation ('and_ln59_2', detector_solid/abs_solid_detector.cpp:59) [72]  (0.978 ns)
	multiplexor before 'phi' operation ('merge') [81]  (1.71 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
