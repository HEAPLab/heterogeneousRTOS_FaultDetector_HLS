

================================================================
== Vitis HLS Report for 'find_region'
================================================================
* Date:           Wed Sep 21 00:46:53 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        detector_solid
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  20.00 ns|  14.098 ns|     5.40 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        9|        9|  0.180 us|  0.180 us|    8|    8|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|    423|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        -|    -|       -|      -|    -|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       -|    190|    -|
|Register         |        -|    -|     258|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        0|    0|     258|    613|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      280|  220|  106400|  53200|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        0|    0|      ~0|      1|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    +---------------------------------+-----------------------------+---------+----+---+----+-----+
    |             Instance            |            Module           | BRAM_18K| DSP| FF| LUT| URAM|
    +---------------------------------+-----------------------------+---------+----+---+----+-----+
    |fcmp_32ns_32ns_1_2_no_dsp_1_U14  |fcmp_32ns_32ns_1_2_no_dsp_1  |        0|   0|  0|   0|    0|
    |fcmp_32ns_32ns_1_2_no_dsp_1_U15  |fcmp_32ns_32ns_1_2_no_dsp_1  |        0|   0|  0|   0|    0|
    +---------------------------------+-----------------------------+---------+----+---+----+-----+
    |Total                            |                             |        0|   0|  0|   0|    0|
    +---------------------------------+-----------------------------+---------+----+---+----+-----+

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +---------------------------+----------+----+---+----+------------+------------+
    |       Variable Name       | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +---------------------------+----------+----+---+----+------------+------------+
    |and_ln65_10_fu_452_p2      |       and|   0|  0|   2|           1|           1|
    |and_ln65_11_fu_518_p2      |       and|   0|  0|   2|           1|           1|
    |and_ln65_12_fu_582_p2      |       and|   0|  0|   2|           1|           1|
    |and_ln65_1_fu_458_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_2_fu_216_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_3_fu_263_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_4_fu_267_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_5_fu_546_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_6_fu_550_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_7_fu_355_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_8_fu_462_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_9_fu_359_p2       |       and|   0|  0|   2|           1|           1|
    |and_ln65_fu_212_p2         |       and|   0|  0|   2|           1|           1|
    |and_ln65_fu_446_p2         |       and|   0|  0|   2|           1|           1|
    |and_ln65_fu_512_p2         |       and|   0|  0|   2|           1|           1|
    |and_ln65_fu_576_p2         |       and|   0|  0|   2|           1|           1|
    |icmp_ln65_10_fu_418_p2     |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln65_11_fu_424_p2     |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_12_fu_382_p2     |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln65_13_fu_388_p2     |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_14_fu_488_p2     |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln65_15_fu_494_p2     |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_1_fu_164_p2      |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_2_fu_194_p2      |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln65_3_fu_200_p2      |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_4_fu_239_p2      |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln65_5_fu_245_p2      |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_6_fu_290_p2      |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln65_7_fu_296_p2      |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_8_fu_337_p2      |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln65_9_fu_343_p2      |      icmp|   0|  0|  15|          23|           1|
    |icmp_ln65_fu_158_p2        |      icmp|   0|  0|  11|           8|           2|
    |idx_fu_599_p2              |        or|   0|  0|   2|           1|           1|
    |or_ln65_10_fu_529_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_11_fu_535_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_12_fu_540_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_13_fu_257_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_14_fu_308_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_15_fu_314_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_16_fu_558_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_17_fu_588_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_18_fu_594_p2       |        or|   0|  0|   2|           1|           1|
    |or_ln65_1_fu_206_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_2_fu_251_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_3_fu_302_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_4_fu_349_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_5_fu_466_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_6_fu_430_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_7_fu_554_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_8_fu_524_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_9_fu_394_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln65_fu_170_p2          |        or|   0|  0|   2|           1|           1|
    |or_ln70_10_fu_1023_p2      |        or|   0|  0|   2|           1|           1|
    |or_ln70_1_fu_699_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_2_fu_735_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_3_fu_771_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_4_fu_807_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_5_fu_843_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_6_fu_879_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_7_fu_915_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_8_fu_951_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_9_fu_987_p2        |        or|   0|  0|   2|           1|           1|
    |or_ln70_fu_663_p2          |        or|   0|  0|   2|           1|           1|
    |ap_return                  |    select|   0|  0|   5|           1|           5|
    |idx_10_fu_896_p3           |    select|   0|  0|   5|           1|           5|
    |idx_11_fu_932_p3           |    select|   0|  0|   5|           1|           5|
    |idx_12_fu_968_p3           |    select|   0|  0|   5|           1|           5|
    |idx_13_fu_1004_p3          |    select|   0|  0|   5|           1|           5|
    |idx_1_fu_607_p3            |    select|   0|  0|   2|           1|           2|
    |idx_2_fu_622_p3            |    select|   0|  0|   3|           1|           3|
    |idx_3_fu_644_p3            |    select|   0|  0|   4|           1|           4|
    |idx_4_fu_680_p3            |    select|   0|  0|   4|           1|           4|
    |idx_5_fu_716_p3            |    select|   0|  0|   4|           1|           4|
    |idx_6_fu_752_p3            |    select|   0|  0|   4|           1|           4|
    |idx_7_fu_788_p3            |    select|   0|  0|   5|           1|           5|
    |idx_8_fu_824_p3            |    select|   0|  0|   5|           1|           5|
    |idx_9_fu_860_p3            |    select|   0|  0|   5|           1|           5|
    |select_ln70_10_fu_992_p3   |    select|   0|  0|   4|           1|           3|
    |select_ln70_11_fu_1028_p3  |    select|   0|  0|   4|           1|           2|
    |select_ln70_1_fu_668_p3    |    select|   0|  0|   3|           1|           3|
    |select_ln70_2_fu_704_p3    |    select|   0|  0|   3|           1|           3|
    |select_ln70_3_fu_740_p3    |    select|   0|  0|   3|           1|           2|
    |select_ln70_4_fu_776_p3    |    select|   0|  0|   5|           1|           5|
    |select_ln70_5_fu_812_p3    |    select|   0|  0|   4|           1|           4|
    |select_ln70_6_fu_848_p3    |    select|   0|  0|   4|           1|           4|
    |select_ln70_7_fu_884_p3    |    select|   0|  0|   4|           1|           4|
    |select_ln70_8_fu_920_p3    |    select|   0|  0|   4|           1|           4|
    |select_ln70_9_fu_956_p3    |    select|   0|  0|   4|           1|           3|
    |select_ln70_fu_633_p3      |    select|   0|  0|   4|           1|           4|
    |ap_enable_pp0              |       xor|   0|  0|   2|           1|           2|
    |xor_ln65_fu_434_p2         |       xor|   0|  0|   2|           1|           2|
    |xor_ln65_fu_440_p2         |       xor|   0|  0|   2|           1|           2|
    |xor_ln65_fu_500_p2         |       xor|   0|  0|   2|           1|           2|
    |xor_ln65_fu_506_p2         |       xor|   0|  0|   2|           1|           2|
    |xor_ln65_fu_564_p2         |       xor|   0|  0|   2|           1|           2|
    |xor_ln65_fu_570_p2         |       xor|   0|  0|   2|           1|           2|
    +---------------------------+----------+----+---+----+------------+------------+
    |Total                      |          |   0|  0| 423|         328|         187|
    +---------------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +-------------------------+----+-----------+-----+-----------+
    |           Name          | LUT| Input Size| Bits| Total Bits|
    +-------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                |  48|          9|    1|          9|
    |ap_enable_reg_pp0_iter0  |   9|          2|    1|          2|
    |ap_enable_reg_pp0_iter1  |   9|          2|    1|          2|
    |grp_fu_114_opcode        |  14|          3|    5|         15|
    |grp_fu_114_p0            |  48|          9|   32|        288|
    |grp_fu_120_opcode        |  14|          3|    5|         15|
    |grp_fu_120_p0            |  48|          9|   32|        288|
    +-------------------------+----+-----------+-----+-----------+
    |Total                    | 190|         37|   77|        619|
    +-------------------------+----+-----------+-----+-----------+

    * Register: 
    +-----------------------------+----+----+-----+-----------+
    |             Name            | FF | LUT| Bits| Const Bits|
    +-----------------------------+----+----+-----+-----------+
    |and_ln65_10_reg_1189         |   1|   0|    1|          0|
    |ap_CS_fsm                    |   8|   0|    8|          0|
    |ap_enable_reg_pp0_iter0_reg  |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1      |   1|   0|    1|          0|
    |ap_port_reg_d_read_23        |  32|   0|   32|          0|
    |ap_port_reg_d_read_24        |  32|   0|   32|          0|
    |ap_port_reg_d_read_25        |  32|   0|   32|          0|
    |ap_port_reg_d_read_26        |  32|   0|   32|          0|
    |ap_port_reg_d_read_27        |  32|   0|   32|          0|
    |ap_port_reg_d_read_28        |  32|   0|   32|          0|
    |ap_port_reg_d_read_29        |  32|   0|   32|          0|
    |icmp_ln65_10_reg_1179        |   1|   0|    1|          0|
    |icmp_ln65_11_reg_1184        |   1|   0|    1|          0|
    |icmp_ln65_12_reg_1158        |   1|   0|    1|          0|
    |icmp_ln65_13_reg_1163        |   1|   0|    1|          0|
    |icmp_ln65_14_reg_1200        |   1|   0|    1|          0|
    |icmp_ln65_15_reg_1205        |   1|   0|    1|          0|
    |idx_reg_1215                 |   1|   0|    1|          0|
    |or_ln65_12_reg_1210          |   1|   0|    1|          0|
    |or_ln65_13_reg_1098          |   1|   0|    1|          0|
    |or_ln65_15_reg_1120          |   1|   0|    1|          0|
    |or_ln65_1_reg_1075           |   1|   0|    1|          0|
    |or_ln65_2_reg_1092           |   1|   0|    1|          0|
    |or_ln65_3_reg_1114           |   1|   0|    1|          0|
    |or_ln65_4_reg_1141           |   1|   0|    1|          0|
    |or_ln65_9_reg_1168           |   1|   0|    1|          0|
    |or_ln65_reg_1053             |   1|   0|    1|          0|
    |tmp_24_reg_1070              |   1|   0|    1|          0|
    |tmp_27_reg_1087              |   1|   0|    1|          0|
    |tmp_30_reg_1109              |   1|   0|    1|          0|
    |tmp_32_reg_1131              |   1|   0|    1|          0|
    |tmp_33_reg_1136              |   1|   0|    1|          0|
    |tmp_35_reg_1153              |   1|   0|    1|          0|
    |tmp_s_reg_1065               |   1|   0|    1|          0|
    +-----------------------------+----+----+-----+-----------+
    |Total                        | 258|   0|  258|          0|
    +-----------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------+-----+-----+------------+--------------+--------------+
| RTL Ports | Dir | Bits|  Protocol  | Source Object|    C Type    |
+-----------+-----+-----+------------+--------------+--------------+
|ap_clk     |   in|    1|  ap_ctrl_hs|   find_region|  return value|
|ap_rst     |   in|    1|  ap_ctrl_hs|   find_region|  return value|
|ap_start   |   in|    1|  ap_ctrl_hs|   find_region|  return value|
|ap_done    |  out|    1|  ap_ctrl_hs|   find_region|  return value|
|ap_idle    |  out|    1|  ap_ctrl_hs|   find_region|  return value|
|ap_ready   |  out|    1|  ap_ctrl_hs|   find_region|  return value|
|ap_ce      |   in|    1|  ap_ctrl_hs|   find_region|  return value|
|ap_return  |  out|    5|  ap_ctrl_hs|   find_region|  return value|
|d_read     |   in|   32|     ap_none|        d_read|        scalar|
|d_read_23  |   in|   32|     ap_none|     d_read_23|        scalar|
|d_read_24  |   in|   32|     ap_none|     d_read_24|        scalar|
|d_read_25  |   in|   32|     ap_none|     d_read_25|        scalar|
|d_read_26  |   in|   32|     ap_none|     d_read_26|        scalar|
|d_read_27  |   in|   32|     ap_none|     d_read_27|        scalar|
|d_read_28  |   in|   32|     ap_none|     d_read_28|        scalar|
|d_read_29  |   in|   32|     ap_none|     d_read_29|        scalar|
+-----------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 8, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.43>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%d_read_15 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 11 'read' 'd_read_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%bitcast_ln65 = bitcast i32 %d_read_15" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 12 'bitcast' 'bitcast_ln65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 13 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i32 %bitcast_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 14 'trunc' 'trunc_ln65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.55ns)   --->   "%icmp_ln65 = icmp_ne  i8 %tmp, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 15 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (2.44ns)   --->   "%icmp_ln65_1 = icmp_eq  i23 %trunc_ln65, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 16 'icmp' 'icmp_ln65_1' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.97ns)   --->   "%or_ln65 = or i1 %icmp_ln65_1, i1 %icmp_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 17 'or' 'or_ln65' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [2/2] (5.43ns)   --->   "%tmp_s = fcmp_olt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 18 'fcmp' 'tmp_s' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [2/2] (5.43ns)   --->   "%tmp_24 = fcmp_ogt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 19 'fcmp' 'tmp_24' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.43>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%d_read_7 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_23" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 20 'read' 'd_read_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/2] (5.43ns)   --->   "%tmp_s = fcmp_olt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 21 'fcmp' 'tmp_s' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/2] (5.43ns)   --->   "%tmp_24 = fcmp_ogt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 22 'fcmp' 'tmp_24' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%bitcast_ln65_1 = bitcast i32 %d_read_7" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 23 'bitcast' 'bitcast_ln65_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_1, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 24 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln65_1 = trunc i32 %bitcast_ln65_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 25 'trunc' 'trunc_ln65_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.55ns)   --->   "%icmp_ln65_2 = icmp_ne  i8 %tmp_25, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 26 'icmp' 'icmp_ln65_2' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (2.44ns)   --->   "%icmp_ln65_3 = icmp_eq  i23 %trunc_ln65_1, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 27 'icmp' 'icmp_ln65_3' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.97ns)   --->   "%or_ln65_1 = or i1 %icmp_ln65_3, i1 %icmp_ln65_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 28 'or' 'or_ln65_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [2/2] (5.43ns)   --->   "%tmp_26 = fcmp_olt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 29 'fcmp' 'tmp_26' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [2/2] (5.43ns)   --->   "%tmp_27 = fcmp_ogt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 30 'fcmp' 'tmp_27' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.40>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%d_read_6 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_24" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 31 'read' 'd_read_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_13)   --->   "%and_ln65 = and i1 %or_ln65, i1 %tmp_s" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 32 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/2] (5.43ns)   --->   "%tmp_26 = fcmp_olt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 33 'fcmp' 'tmp_26' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_13)   --->   "%and_ln65_2 = and i1 %or_ln65_1, i1 %tmp_26" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 34 'and' 'and_ln65_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/2] (5.43ns)   --->   "%tmp_27 = fcmp_ogt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 35 'fcmp' 'tmp_27' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%bitcast_ln65_2 = bitcast i32 %d_read_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 36 'bitcast' 'bitcast_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_28 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_2, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 37 'partselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln65_2 = trunc i32 %bitcast_ln65_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 38 'trunc' 'trunc_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.55ns)   --->   "%icmp_ln65_4 = icmp_ne  i8 %tmp_28, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 39 'icmp' 'icmp_ln65_4' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (2.44ns)   --->   "%icmp_ln65_5 = icmp_eq  i23 %trunc_ln65_2, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 40 'icmp' 'icmp_ln65_5' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.97ns)   --->   "%or_ln65_2 = or i1 %icmp_ln65_5, i1 %icmp_ln65_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 41 'or' 'or_ln65_2' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [2/2] (5.43ns)   --->   "%tmp_29 = fcmp_olt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 42 'fcmp' 'tmp_29' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [2/2] (5.43ns)   --->   "%tmp_30 = fcmp_ogt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 43 'fcmp' 'tmp_30' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_13 = or i1 %and_ln65_2, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 44 'or' 'or_ln65_13' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.40>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%d_read_5 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_25" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 45 'read' 'd_read_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_15)   --->   "%and_ln65_3 = and i1 %or_ln65_1, i1 %tmp_27" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 46 'and' 'and_ln65_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/2] (5.43ns)   --->   "%tmp_29 = fcmp_olt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 47 'fcmp' 'tmp_29' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_15)   --->   "%and_ln65_4 = and i1 %or_ln65_2, i1 %tmp_29" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 48 'and' 'and_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/2] (5.43ns)   --->   "%tmp_30 = fcmp_ogt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 49 'fcmp' 'tmp_30' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%bitcast_ln65_3 = bitcast i32 %d_read_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 50 'bitcast' 'bitcast_ln65_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_31 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_3, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 51 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln65_3 = trunc i32 %bitcast_ln65_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 52 'trunc' 'trunc_ln65_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (1.55ns)   --->   "%icmp_ln65_6 = icmp_ne  i8 %tmp_31, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 53 'icmp' 'icmp_ln65_6' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (2.44ns)   --->   "%icmp_ln65_7 = icmp_eq  i23 %trunc_ln65_3, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 54 'icmp' 'icmp_ln65_7' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.97ns)   --->   "%or_ln65_3 = or i1 %icmp_ln65_7, i1 %icmp_ln65_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 55 'or' 'or_ln65_3' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [2/2] (5.43ns)   --->   "%tmp_32 = fcmp_olt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 56 'fcmp' 'tmp_32' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [2/2] (5.43ns)   --->   "%tmp_33 = fcmp_ogt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 57 'fcmp' 'tmp_33' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_15)   --->   "%or_ln65_14 = or i1 %and_ln65_4, i1 %and_ln65_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 58 'or' 'or_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_15 = or i1 %or_ln65_14, i1 %or_ln65_13" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 59 'or' 'or_ln65_15' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.43>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%d_read_4 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_26" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 60 'read' 'd_read_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/2] (5.43ns)   --->   "%tmp_32 = fcmp_olt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 61 'fcmp' 'tmp_32' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/2] (5.43ns)   --->   "%tmp_33 = fcmp_ogt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 62 'fcmp' 'tmp_33' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%bitcast_ln65_4 = bitcast i32 %d_read_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 63 'bitcast' 'bitcast_ln65_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_34 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_4, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 64 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln65_4 = trunc i32 %bitcast_ln65_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 65 'trunc' 'trunc_ln65_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (1.55ns)   --->   "%icmp_ln65_8 = icmp_ne  i8 %tmp_34, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 66 'icmp' 'icmp_ln65_8' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (2.44ns)   --->   "%icmp_ln65_9 = icmp_eq  i23 %trunc_ln65_4, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 67 'icmp' 'icmp_ln65_9' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.97ns)   --->   "%or_ln65_4 = or i1 %icmp_ln65_9, i1 %icmp_ln65_8" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 68 'or' 'or_ln65_4' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [2/2] (5.43ns)   --->   "%tmp_35 = fcmp_olt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 69 'fcmp' 'tmp_35' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [2/2] (5.43ns)   --->   "%tmp_36 = fcmp_ogt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 70 'fcmp' 'tmp_36' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.40>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%d_read_2 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_28" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 71 'read' 'd_read_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_9)   --->   "%and_ln65_7 = and i1 %or_ln65_3, i1 %tmp_33" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 72 'and' 'and_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/2] (5.43ns)   --->   "%tmp_35 = fcmp_olt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 73 'fcmp' 'tmp_35' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/2] (5.43ns)   --->   "%tmp_36 = fcmp_ogt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 74 'fcmp' 'tmp_36' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_9)   --->   "%and_ln65_9 = and i1 %or_ln65_4, i1 %tmp_36" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 75 'and' 'and_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%bitcast_ln65_6 = bitcast i32 %d_read_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 76 'bitcast' 'bitcast_ln65_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_38 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_6, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 77 'partselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln65_6 = trunc i32 %bitcast_ln65_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 78 'trunc' 'trunc_ln65_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (1.55ns)   --->   "%icmp_ln65_12 = icmp_ne  i8 %tmp_38, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 79 'icmp' 'icmp_ln65_12' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (2.44ns)   --->   "%icmp_ln65_13 = icmp_eq  i23 %trunc_ln65_6, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 80 'icmp' 'icmp_ln65_13' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 81 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 82 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_9 = or i1 %and_ln65_7, i1 %and_ln65_9" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 83 'or' 'or_ln65_9' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.40>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%d_read_3 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_27" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 84 'read' 'd_read_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%bitcast_ln65_5 = bitcast i32 %d_read_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 85 'bitcast' 'bitcast_ln65_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_37 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_5, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 86 'partselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln65_5 = trunc i32 %bitcast_ln65_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 87 'trunc' 'trunc_ln65_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (1.55ns)   --->   "%icmp_ln65_10 = icmp_ne  i8 %tmp_37, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 88 'icmp' 'icmp_ln65_10' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 89 [1/1] (2.44ns)   --->   "%icmp_ln65_11 = icmp_eq  i23 %trunc_ln65_5, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 89 'icmp' 'icmp_ln65_11' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%or_ln65_6 = or i1 %icmp_ln65_13, i1 %icmp_ln65_12" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 90 'or' 'or_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 91 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 92 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 93 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 94 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%and_ln65 = and i1 %xor_ln65, i1 %xor_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 95 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 96 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln65_10 = and i1 %or_ln65_6, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 96 'and' 'and_ln65_10' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 97 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 98 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 98 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.38>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%d_read_1 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_29" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 99 'read' 'd_read_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%and_ln65_1 = and i1 %or_ln65, i1 %tmp_24" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 100 'and' 'and_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%and_ln65_8 = and i1 %or_ln65_4, i1 %tmp_35" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 101 'and' 'and_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%or_ln65_5 = or i1 %icmp_ln65_11, i1 %icmp_ln65_10" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 102 'or' 'or_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%bitcast_ln65_7 = bitcast i32 %d_read_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 103 'bitcast' 'bitcast_ln65_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_39 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_7, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 104 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln65_7 = trunc i32 %bitcast_ln65_7" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 105 'trunc' 'trunc_ln65_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (1.55ns)   --->   "%icmp_ln65_14 = icmp_ne  i8 %tmp_39, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 106 'icmp' 'icmp_ln65_14' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 107 [1/1] (2.44ns)   --->   "%icmp_ln65_15 = icmp_eq  i23 %trunc_ln65_7, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 107 'icmp' 'icmp_ln65_15' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 108 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 108 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 109 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 109 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 110 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 111 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%and_ln65 = and i1 %xor_ln65, i1 %xor_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 112 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%and_ln65_11 = and i1 %or_ln65_5, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 113 'and' 'and_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_8 = or i1 %and_ln65_11, i1 %and_ln65_10" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 114 'or' 'or_ln65_8' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%or_ln65_10 = or i1 %and_ln65_8, i1 %and_ln65_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 115 'or' 'or_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%or_ln65_11 = or i1 %or_ln65_10, i1 %or_ln65_9" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 116 'or' 'or_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 117 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_12 = or i1 %or_ln65_11, i1 %or_ln65_8" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 117 'or' 'or_ln65_12' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 118 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 118 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 119 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 119 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 8.36>
ST_9 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%and_ln65_5 = and i1 %or_ln65_2, i1 %tmp_30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 120 'and' 'and_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%and_ln65_6 = and i1 %or_ln65_3, i1 %tmp_32" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 121 'and' 'and_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%or_ln65_7 = or i1 %icmp_ln65_15, i1 %icmp_ln65_14" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 122 'or' 'or_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%or_ln65_16 = or i1 %and_ln65_6, i1 %and_ln65_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 123 'or' 'or_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 124 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 124 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 125 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 126 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 127 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%and_ln65 = and i1 %xor_ln65, i1 %xor_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 128 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 129 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln65_12 = and i1 %or_ln65_7, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 129 'and' 'and_ln65_12' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%or_ln65_17 = or i1 %and_ln65_12, i1 %or_ln65_16" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 130 'or' 'or_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 131 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_18 = or i1 %or_ln65_17, i1 %or_ln65_15" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 131 'or' 'or_ln65_18' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 132 [1/1] (0.97ns) (out node of the LUT)   --->   "%idx = or i1 %or_ln65_18, i1 %or_ln65_12" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 132 'or' 'idx' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 14.0>
ST_10 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 133 'zext' 'zext_ln70' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 134 [1/1] (0.99ns)   --->   "%idx_1 = select i1 %idx, i2 3, i2 %zext_ln70" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 134 'select' 'idx_1' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%sext_ln46 = sext i2 %idx_1" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 135 'sext' 'sext_ln46' <Predicate = (idx)> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i2 %idx_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 136 'zext' 'zext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.99ns)   --->   "%idx_2 = select i1 %idx, i3 %sext_ln46, i3 %zext_ln70_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 137 'select' 'idx_2' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%sext_ln46_1 = sext i3 %idx_2" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 138 'sext' 'sext_ln46_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node idx_3)   --->   "%select_ln70 = select i1 %idx, i3 4, i3 %zext_ln70_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 139 'select' 'select_ln70' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node idx_3)   --->   "%zext_ln70_2 = zext i3 %select_ln70" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 140 'zext' 'zext_ln70_2' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_3 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 141 'select' 'idx_3' <Predicate = (!idx)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%trunc_ln46 = trunc i4 %idx_3" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 142 'trunc' 'trunc_ln46' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%tmp_40 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_3, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 143 'bitselect' 'tmp_40' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%or_ln70 = or i1 %tmp_40, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 144 'or' 'or_ln70' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%select_ln70_1 = select i1 %or_ln70, i3 5, i3 %trunc_ln46" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 145 'select' 'select_ln70_1' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%zext_ln70_3 = zext i3 %select_ln70_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 146 'zext' 'zext_ln70_3' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 147 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_4 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 147 'select' 'idx_4' <Predicate = (!idx)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%trunc_ln46_1 = trunc i4 %idx_4" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 148 'trunc' 'trunc_ln46_1' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%tmp_41 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_4, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 149 'bitselect' 'tmp_41' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%or_ln70_1 = or i1 %tmp_41, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 150 'or' 'or_ln70_1' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%select_ln70_2 = select i1 %or_ln70_1, i3 6, i3 %trunc_ln46_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 151 'select' 'select_ln70_2' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%zext_ln70_4 = zext i3 %select_ln70_2" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 152 'zext' 'zext_ln70_4' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 153 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_5 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 153 'select' 'idx_5' <Predicate = (!idx)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%trunc_ln46_2 = trunc i4 %idx_5" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 154 'trunc' 'trunc_ln46_2' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%tmp_42 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_5, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 155 'bitselect' 'tmp_42' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%or_ln70_2 = or i1 %tmp_42, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 156 'or' 'or_ln70_2' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%select_ln70_3 = select i1 %or_ln70_2, i3 7, i3 %trunc_ln46_2" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 157 'select' 'select_ln70_3' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%zext_ln70_5 = zext i3 %select_ln70_3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 158 'zext' 'zext_ln70_5' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 159 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_6 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 159 'select' 'idx_6' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "%sext_ln46_2 = sext i4 %idx_6" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 160 'sext' 'sext_ln46_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%tmp_43 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_6, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 161 'bitselect' 'tmp_43' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%or_ln70_3 = or i1 %tmp_43, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 162 'or' 'or_ln70_3' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%select_ln70_4 = select i1 %or_ln70_3, i4 8, i4 %idx_6" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 163 'select' 'select_ln70_4' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%zext_ln70_6 = zext i4 %select_ln70_4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 164 'zext' 'zext_ln70_6' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 165 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_7 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 165 'select' 'idx_7' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%trunc_ln46_3 = trunc i5 %idx_7" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 166 'trunc' 'trunc_ln46_3' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%tmp_44 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_7, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 167 'bitselect' 'tmp_44' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%or_ln70_4 = or i1 %tmp_44, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 168 'or' 'or_ln70_4' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%select_ln70_5 = select i1 %or_ln70_4, i4 9, i4 %trunc_ln46_3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 169 'select' 'select_ln70_5' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%zext_ln70_7 = zext i4 %select_ln70_5" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 170 'zext' 'zext_ln70_7' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 171 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_8 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_7" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 171 'select' 'idx_8' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%trunc_ln46_4 = trunc i5 %idx_8" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 172 'trunc' 'trunc_ln46_4' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%tmp_45 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_8, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 173 'bitselect' 'tmp_45' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%or_ln70_5 = or i1 %tmp_45, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 174 'or' 'or_ln70_5' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%select_ln70_6 = select i1 %or_ln70_5, i4 10, i4 %trunc_ln46_4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 175 'select' 'select_ln70_6' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%zext_ln70_8 = zext i4 %select_ln70_6" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 176 'zext' 'zext_ln70_8' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 177 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_9 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_8" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 177 'select' 'idx_9' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%trunc_ln46_5 = trunc i5 %idx_9" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 178 'trunc' 'trunc_ln46_5' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%tmp_46 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_9, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 179 'bitselect' 'tmp_46' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%or_ln70_6 = or i1 %tmp_46, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 180 'or' 'or_ln70_6' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%select_ln70_7 = select i1 %or_ln70_6, i4 11, i4 %trunc_ln46_5" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 181 'select' 'select_ln70_7' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%zext_ln70_9 = zext i4 %select_ln70_7" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 182 'zext' 'zext_ln70_9' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_10 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_9" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 183 'select' 'idx_10' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%trunc_ln46_6 = trunc i5 %idx_10" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 184 'trunc' 'trunc_ln46_6' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%tmp_47 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_10, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 185 'bitselect' 'tmp_47' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%or_ln70_7 = or i1 %tmp_47, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 186 'or' 'or_ln70_7' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%select_ln70_8 = select i1 %or_ln70_7, i4 12, i4 %trunc_ln46_6" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 187 'select' 'select_ln70_8' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%zext_ln70_10 = zext i4 %select_ln70_8" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 188 'zext' 'zext_ln70_10' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 189 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_11 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_10" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 189 'select' 'idx_11' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%trunc_ln46_7 = trunc i5 %idx_11" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 190 'trunc' 'trunc_ln46_7' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%tmp_48 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_11, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 191 'bitselect' 'tmp_48' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%or_ln70_8 = or i1 %tmp_48, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 192 'or' 'or_ln70_8' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%select_ln70_9 = select i1 %or_ln70_8, i4 13, i4 %trunc_ln46_7" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 193 'select' 'select_ln70_9' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%zext_ln70_11 = zext i4 %select_ln70_9" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 194 'zext' 'zext_ln70_11' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 195 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_12 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_11" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 195 'select' 'idx_12' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%trunc_ln46_8 = trunc i5 %idx_12" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 196 'trunc' 'trunc_ln46_8' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%tmp_49 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_12, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 197 'bitselect' 'tmp_49' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%or_ln70_9 = or i1 %tmp_49, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 198 'or' 'or_ln70_9' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%select_ln70_10 = select i1 %or_ln70_9, i4 14, i4 %trunc_ln46_8" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 199 'select' 'select_ln70_10' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%zext_ln70_12 = zext i4 %select_ln70_10" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 200 'zext' 'zext_ln70_12' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 201 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_13 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_12" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 201 'select' 'idx_13' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%trunc_ln46_9 = trunc i5 %idx_13" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 202 'trunc' 'trunc_ln46_9' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%tmp_50 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_13, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 203 'bitselect' 'tmp_50' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%or_ln70_10 = or i1 %tmp_50, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 204 'or' 'or_ln70_10' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%select_ln70_11 = select i1 %or_ln70_10, i4 15, i4 %trunc_ln46_9" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 205 'select' 'select_ln70_11' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%zext_ln75 = zext i4 %select_ln70_11" [detector_solid/abs_solid_detector.cpp:75]   --->   Operation 206 'zext' 'zext_ln75' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 207 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln65 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln75" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 207 'select' 'select_ln65' <Predicate = true> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 208 [1/1] (0.00ns)   --->   "%ret_ln75 = ret i5 %select_ln65" [detector_solid/abs_solid_detector.cpp:75]   --->   Operation 208 'ret' 'ret_ln75' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ d_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_read_23]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_read_24]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_read_25]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_read_26]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_read_27]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_read_28]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_read_29]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
d_read_15      (read      ) [ 00100000000]
bitcast_ln65   (bitcast   ) [ 00000000000]
tmp            (partselect) [ 00000000000]
trunc_ln65     (trunc     ) [ 00000000000]
icmp_ln65      (icmp      ) [ 00000000000]
icmp_ln65_1    (icmp      ) [ 00000000000]
or_ln65        (or        ) [ 00111111100]
d_read_7       (read      ) [ 00010000000]
tmp_s          (fcmp      ) [ 00010000000]
tmp_24         (fcmp      ) [ 00011111100]
bitcast_ln65_1 (bitcast   ) [ 00000000000]
tmp_25         (partselect) [ 00000000000]
trunc_ln65_1   (trunc     ) [ 00000000000]
icmp_ln65_2    (icmp      ) [ 00000000000]
icmp_ln65_3    (icmp      ) [ 00000000000]
or_ln65_1      (or        ) [ 00011000000]
d_read_6       (read      ) [ 00001000000]
and_ln65       (and       ) [ 00000000000]
tmp_26         (fcmp      ) [ 00000000000]
and_ln65_2     (and       ) [ 00000000000]
tmp_27         (fcmp      ) [ 00001000000]
bitcast_ln65_2 (bitcast   ) [ 00000000000]
tmp_28         (partselect) [ 00000000000]
trunc_ln65_2   (trunc     ) [ 00000000000]
icmp_ln65_4    (icmp      ) [ 00000000000]
icmp_ln65_5    (icmp      ) [ 00000000000]
or_ln65_2      (or        ) [ 01001111110]
or_ln65_13     (or        ) [ 00001000000]
d_read_5       (read      ) [ 00000100000]
and_ln65_3     (and       ) [ 00000000000]
tmp_29         (fcmp      ) [ 00000000000]
and_ln65_4     (and       ) [ 00000000000]
tmp_30         (fcmp      ) [ 01000111110]
bitcast_ln65_3 (bitcast   ) [ 00000000000]
tmp_31         (partselect) [ 00000000000]
trunc_ln65_3   (trunc     ) [ 00000000000]
icmp_ln65_6    (icmp      ) [ 00000000000]
icmp_ln65_7    (icmp      ) [ 00000000000]
or_ln65_3      (or        ) [ 01000111110]
or_ln65_14     (or        ) [ 00000000000]
or_ln65_15     (or        ) [ 01000111110]
d_read_4       (read      ) [ 00000010000]
tmp_32         (fcmp      ) [ 01000011110]
tmp_33         (fcmp      ) [ 00000010000]
bitcast_ln65_4 (bitcast   ) [ 00000000000]
tmp_34         (partselect) [ 00000000000]
trunc_ln65_4   (trunc     ) [ 00000000000]
icmp_ln65_8    (icmp      ) [ 00000000000]
icmp_ln65_9    (icmp      ) [ 00000000000]
or_ln65_4      (or        ) [ 00000011100]
d_read_2       (read      ) [ 00000001000]
and_ln65_7     (and       ) [ 00000000000]
tmp_35         (fcmp      ) [ 00000001100]
tmp_36         (fcmp      ) [ 00000000000]
and_ln65_9     (and       ) [ 00000000000]
bitcast_ln65_6 (bitcast   ) [ 00000000000]
tmp_38         (partselect) [ 00000000000]
trunc_ln65_6   (trunc     ) [ 00000000000]
icmp_ln65_12   (icmp      ) [ 00000001000]
icmp_ln65_13   (icmp      ) [ 00000001000]
or_ln65_9      (or        ) [ 00000001100]
d_read_3       (read      ) [ 00000000100]
bitcast_ln65_5 (bitcast   ) [ 00000000000]
tmp_37         (partselect) [ 00000000000]
trunc_ln65_5   (trunc     ) [ 00000000000]
icmp_ln65_10   (icmp      ) [ 00000000100]
icmp_ln65_11   (icmp      ) [ 00000000100]
or_ln65_6      (or        ) [ 00000000000]
fcmp_ln65      (fcmp      ) [ 00000000000]
fcmp_ln65      (fcmp      ) [ 00000000000]
xor_ln65       (xor       ) [ 00000000000]
xor_ln65       (xor       ) [ 00000000000]
and_ln65       (and       ) [ 00000000000]
and_ln65_10    (and       ) [ 00000000100]
d_read_1       (read      ) [ 01000000010]
and_ln65_1     (and       ) [ 00000000000]
and_ln65_8     (and       ) [ 00000000000]
or_ln65_5      (or        ) [ 00000000000]
bitcast_ln65_7 (bitcast   ) [ 00000000000]
tmp_39         (partselect) [ 00000000000]
trunc_ln65_7   (trunc     ) [ 00000000000]
icmp_ln65_14   (icmp      ) [ 01000000010]
icmp_ln65_15   (icmp      ) [ 01000000010]
fcmp_ln65      (fcmp      ) [ 00000000000]
fcmp_ln65      (fcmp      ) [ 00000000000]
xor_ln65       (xor       ) [ 00000000000]
xor_ln65       (xor       ) [ 00000000000]
and_ln65       (and       ) [ 00000000000]
and_ln65_11    (and       ) [ 00000000000]
or_ln65_8      (or        ) [ 00000000000]
or_ln65_10     (or        ) [ 00000000000]
or_ln65_11     (or        ) [ 00000000000]
or_ln65_12     (or        ) [ 01000000010]
and_ln65_5     (and       ) [ 00000000000]
and_ln65_6     (and       ) [ 00000000000]
or_ln65_7      (or        ) [ 00000000000]
or_ln65_16     (or        ) [ 00000000000]
fcmp_ln65      (fcmp      ) [ 00000000000]
fcmp_ln65      (fcmp      ) [ 00000000000]
xor_ln65       (xor       ) [ 00000000000]
xor_ln65       (xor       ) [ 00000000000]
and_ln65       (and       ) [ 00000000000]
and_ln65_12    (and       ) [ 00000000000]
or_ln65_17     (or        ) [ 00000000000]
or_ln65_18     (or        ) [ 00000000000]
idx            (or        ) [ 00100000001]
zext_ln70      (zext      ) [ 00000000000]
idx_1          (select    ) [ 00000000000]
sext_ln46      (sext      ) [ 00000000000]
zext_ln70_1    (zext      ) [ 00000000000]
idx_2          (select    ) [ 00000000000]
sext_ln46_1    (sext      ) [ 00000000000]
select_ln70    (select    ) [ 00000000000]
zext_ln70_2    (zext      ) [ 00000000000]
idx_3          (select    ) [ 00000000000]
trunc_ln46     (trunc     ) [ 00000000000]
tmp_40         (bitselect ) [ 00000000000]
or_ln70        (or        ) [ 00000000000]
select_ln70_1  (select    ) [ 00000000000]
zext_ln70_3    (zext      ) [ 00000000000]
idx_4          (select    ) [ 00000000000]
trunc_ln46_1   (trunc     ) [ 00000000000]
tmp_41         (bitselect ) [ 00000000000]
or_ln70_1      (or        ) [ 00000000000]
select_ln70_2  (select    ) [ 00000000000]
zext_ln70_4    (zext      ) [ 00000000000]
idx_5          (select    ) [ 00000000000]
trunc_ln46_2   (trunc     ) [ 00000000000]
tmp_42         (bitselect ) [ 00000000000]
or_ln70_2      (or        ) [ 00000000000]
select_ln70_3  (select    ) [ 00000000000]
zext_ln70_5    (zext      ) [ 00000000000]
idx_6          (select    ) [ 00000000000]
sext_ln46_2    (sext      ) [ 00000000000]
tmp_43         (bitselect ) [ 00000000000]
or_ln70_3      (or        ) [ 00000000000]
select_ln70_4  (select    ) [ 00000000000]
zext_ln70_6    (zext      ) [ 00000000000]
idx_7          (select    ) [ 00000000000]
trunc_ln46_3   (trunc     ) [ 00000000000]
tmp_44         (bitselect ) [ 00000000000]
or_ln70_4      (or        ) [ 00000000000]
select_ln70_5  (select    ) [ 00000000000]
zext_ln70_7    (zext      ) [ 00000000000]
idx_8          (select    ) [ 00000000000]
trunc_ln46_4   (trunc     ) [ 00000000000]
tmp_45         (bitselect ) [ 00000000000]
or_ln70_5      (or        ) [ 00000000000]
select_ln70_6  (select    ) [ 00000000000]
zext_ln70_8    (zext      ) [ 00000000000]
idx_9          (select    ) [ 00000000000]
trunc_ln46_5   (trunc     ) [ 00000000000]
tmp_46         (bitselect ) [ 00000000000]
or_ln70_6      (or        ) [ 00000000000]
select_ln70_7  (select    ) [ 00000000000]
zext_ln70_9    (zext      ) [ 00000000000]
idx_10         (select    ) [ 00000000000]
trunc_ln46_6   (trunc     ) [ 00000000000]
tmp_47         (bitselect ) [ 00000000000]
or_ln70_7      (or        ) [ 00000000000]
select_ln70_8  (select    ) [ 00000000000]
zext_ln70_10   (zext      ) [ 00000000000]
idx_11         (select    ) [ 00000000000]
trunc_ln46_7   (trunc     ) [ 00000000000]
tmp_48         (bitselect ) [ 00000000000]
or_ln70_8      (or        ) [ 00000000000]
select_ln70_9  (select    ) [ 00000000000]
zext_ln70_11   (zext      ) [ 00000000000]
idx_12         (select    ) [ 00000000000]
trunc_ln46_8   (trunc     ) [ 00000000000]
tmp_49         (bitselect ) [ 00000000000]
or_ln70_9      (or        ) [ 00000000000]
select_ln70_10 (select    ) [ 00000000000]
zext_ln70_12   (zext      ) [ 00000000000]
idx_13         (select    ) [ 00000000000]
trunc_ln46_9   (trunc     ) [ 00000000000]
tmp_50         (bitselect ) [ 00000000000]
or_ln70_10     (or        ) [ 00000000000]
select_ln70_11 (select    ) [ 00000000000]
zext_ln75      (zext      ) [ 00000000000]
select_ln65    (select    ) [ 00000000000]
ret_ln75       (ret       ) [ 00000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="d_read">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="d_read_23">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read_23"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="d_read_24">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read_24"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="d_read_25">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read_25"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="d_read_26">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read_26"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="d_read_27">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read_27"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="d_read_28">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read_28"/></StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="d_read_29">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_read_29"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.float"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i8.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i4.i32"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i5.i32"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1004" name="d_read_15_read_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="32" slack="0"/>
<pin id="68" dir="0" index="1" bw="32" slack="0"/>
<pin id="69" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_15/1 "/>
</bind>
</comp>

<comp id="72" class="1004" name="d_read_7_read_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="32" slack="0"/>
<pin id="74" dir="0" index="1" bw="32" slack="0"/>
<pin id="75" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_7/2 "/>
</bind>
</comp>

<comp id="78" class="1004" name="d_read_6_read_fu_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="32" slack="0"/>
<pin id="80" dir="0" index="1" bw="32" slack="0"/>
<pin id="81" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_6/3 "/>
</bind>
</comp>

<comp id="84" class="1004" name="d_read_5_read_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="32" slack="0"/>
<pin id="86" dir="0" index="1" bw="32" slack="0"/>
<pin id="87" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_5/4 "/>
</bind>
</comp>

<comp id="90" class="1004" name="d_read_4_read_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="32" slack="0"/>
<pin id="92" dir="0" index="1" bw="32" slack="0"/>
<pin id="93" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_4/5 "/>
</bind>
</comp>

<comp id="96" class="1004" name="d_read_2_read_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="32" slack="0"/>
<pin id="98" dir="0" index="1" bw="32" slack="0"/>
<pin id="99" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_2/6 "/>
</bind>
</comp>

<comp id="102" class="1004" name="d_read_3_read_fu_102">
<pin_list>
<pin id="103" dir="0" index="0" bw="32" slack="0"/>
<pin id="104" dir="0" index="1" bw="32" slack="0"/>
<pin id="105" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_3/7 "/>
</bind>
</comp>

<comp id="108" class="1004" name="d_read_1_read_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="32" slack="0"/>
<pin id="110" dir="0" index="1" bw="32" slack="0"/>
<pin id="111" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_read_1/8 "/>
</bind>
</comp>

<comp id="114" class="1004" name="grp_fu_114">
<pin_list>
<pin id="115" dir="0" index="0" bw="32" slack="0"/>
<pin id="116" dir="0" index="1" bw="32" slack="0"/>
<pin id="117" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_s/1 tmp_26/2 tmp_29/3 tmp_32/4 tmp_35/5 fcmp_ln65/6 fcmp_ln65/7 fcmp_ln65/8 "/>
</bind>
</comp>

<comp id="120" class="1004" name="grp_fu_120">
<pin_list>
<pin id="121" dir="0" index="0" bw="32" slack="0"/>
<pin id="122" dir="0" index="1" bw="32" slack="0"/>
<pin id="123" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_24/1 tmp_27/2 tmp_30/3 tmp_33/4 tmp_36/5 fcmp_ln65/6 fcmp_ln65/7 fcmp_ln65/8 "/>
</bind>
</comp>

<comp id="140" class="1004" name="bitcast_ln65_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="32" slack="0"/>
<pin id="142" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65/1 "/>
</bind>
</comp>

<comp id="144" class="1004" name="tmp_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="8" slack="0"/>
<pin id="146" dir="0" index="1" bw="32" slack="0"/>
<pin id="147" dir="0" index="2" bw="6" slack="0"/>
<pin id="148" dir="0" index="3" bw="6" slack="0"/>
<pin id="149" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="154" class="1004" name="trunc_ln65_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="32" slack="0"/>
<pin id="156" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65/1 "/>
</bind>
</comp>

<comp id="158" class="1004" name="icmp_ln65_fu_158">
<pin_list>
<pin id="159" dir="0" index="0" bw="8" slack="0"/>
<pin id="160" dir="0" index="1" bw="8" slack="0"/>
<pin id="161" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65/1 "/>
</bind>
</comp>

<comp id="164" class="1004" name="icmp_ln65_1_fu_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="23" slack="0"/>
<pin id="166" dir="0" index="1" bw="23" slack="0"/>
<pin id="167" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_1/1 "/>
</bind>
</comp>

<comp id="170" class="1004" name="or_ln65_fu_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="1" slack="0"/>
<pin id="172" dir="0" index="1" bw="1" slack="0"/>
<pin id="173" dir="1" index="2" bw="1" slack="2"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65/1 "/>
</bind>
</comp>

<comp id="176" class="1004" name="bitcast_ln65_1_fu_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="32" slack="0"/>
<pin id="178" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65_1/2 "/>
</bind>
</comp>

<comp id="180" class="1004" name="tmp_25_fu_180">
<pin_list>
<pin id="181" dir="0" index="0" bw="8" slack="0"/>
<pin id="182" dir="0" index="1" bw="32" slack="0"/>
<pin id="183" dir="0" index="2" bw="6" slack="0"/>
<pin id="184" dir="0" index="3" bw="6" slack="0"/>
<pin id="185" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_25/2 "/>
</bind>
</comp>

<comp id="190" class="1004" name="trunc_ln65_1_fu_190">
<pin_list>
<pin id="191" dir="0" index="0" bw="32" slack="0"/>
<pin id="192" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65_1/2 "/>
</bind>
</comp>

<comp id="194" class="1004" name="icmp_ln65_2_fu_194">
<pin_list>
<pin id="195" dir="0" index="0" bw="8" slack="0"/>
<pin id="196" dir="0" index="1" bw="8" slack="0"/>
<pin id="197" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_2/2 "/>
</bind>
</comp>

<comp id="200" class="1004" name="icmp_ln65_3_fu_200">
<pin_list>
<pin id="201" dir="0" index="0" bw="23" slack="0"/>
<pin id="202" dir="0" index="1" bw="23" slack="0"/>
<pin id="203" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_3/2 "/>
</bind>
</comp>

<comp id="206" class="1004" name="or_ln65_1_fu_206">
<pin_list>
<pin id="207" dir="0" index="0" bw="1" slack="0"/>
<pin id="208" dir="0" index="1" bw="1" slack="0"/>
<pin id="209" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_1/2 "/>
</bind>
</comp>

<comp id="212" class="1004" name="and_ln65_fu_212">
<pin_list>
<pin id="213" dir="0" index="0" bw="1" slack="2"/>
<pin id="214" dir="0" index="1" bw="1" slack="1"/>
<pin id="215" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65/3 "/>
</bind>
</comp>

<comp id="216" class="1004" name="and_ln65_2_fu_216">
<pin_list>
<pin id="217" dir="0" index="0" bw="1" slack="1"/>
<pin id="218" dir="0" index="1" bw="1" slack="0"/>
<pin id="219" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_2/3 "/>
</bind>
</comp>

<comp id="221" class="1004" name="bitcast_ln65_2_fu_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="32" slack="0"/>
<pin id="223" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65_2/3 "/>
</bind>
</comp>

<comp id="225" class="1004" name="tmp_28_fu_225">
<pin_list>
<pin id="226" dir="0" index="0" bw="8" slack="0"/>
<pin id="227" dir="0" index="1" bw="32" slack="0"/>
<pin id="228" dir="0" index="2" bw="6" slack="0"/>
<pin id="229" dir="0" index="3" bw="6" slack="0"/>
<pin id="230" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_28/3 "/>
</bind>
</comp>

<comp id="235" class="1004" name="trunc_ln65_2_fu_235">
<pin_list>
<pin id="236" dir="0" index="0" bw="32" slack="0"/>
<pin id="237" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65_2/3 "/>
</bind>
</comp>

<comp id="239" class="1004" name="icmp_ln65_4_fu_239">
<pin_list>
<pin id="240" dir="0" index="0" bw="8" slack="0"/>
<pin id="241" dir="0" index="1" bw="8" slack="0"/>
<pin id="242" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_4/3 "/>
</bind>
</comp>

<comp id="245" class="1004" name="icmp_ln65_5_fu_245">
<pin_list>
<pin id="246" dir="0" index="0" bw="23" slack="0"/>
<pin id="247" dir="0" index="1" bw="23" slack="0"/>
<pin id="248" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_5/3 "/>
</bind>
</comp>

<comp id="251" class="1004" name="or_ln65_2_fu_251">
<pin_list>
<pin id="252" dir="0" index="0" bw="1" slack="0"/>
<pin id="253" dir="0" index="1" bw="1" slack="0"/>
<pin id="254" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_2/3 "/>
</bind>
</comp>

<comp id="257" class="1004" name="or_ln65_13_fu_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="1" slack="0"/>
<pin id="259" dir="0" index="1" bw="1" slack="0"/>
<pin id="260" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_13/3 "/>
</bind>
</comp>

<comp id="263" class="1004" name="and_ln65_3_fu_263">
<pin_list>
<pin id="264" dir="0" index="0" bw="1" slack="2"/>
<pin id="265" dir="0" index="1" bw="1" slack="1"/>
<pin id="266" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_3/4 "/>
</bind>
</comp>

<comp id="267" class="1004" name="and_ln65_4_fu_267">
<pin_list>
<pin id="268" dir="0" index="0" bw="1" slack="1"/>
<pin id="269" dir="0" index="1" bw="1" slack="0"/>
<pin id="270" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_4/4 "/>
</bind>
</comp>

<comp id="272" class="1004" name="bitcast_ln65_3_fu_272">
<pin_list>
<pin id="273" dir="0" index="0" bw="32" slack="0"/>
<pin id="274" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65_3/4 "/>
</bind>
</comp>

<comp id="276" class="1004" name="tmp_31_fu_276">
<pin_list>
<pin id="277" dir="0" index="0" bw="8" slack="0"/>
<pin id="278" dir="0" index="1" bw="32" slack="0"/>
<pin id="279" dir="0" index="2" bw="6" slack="0"/>
<pin id="280" dir="0" index="3" bw="6" slack="0"/>
<pin id="281" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_31/4 "/>
</bind>
</comp>

<comp id="286" class="1004" name="trunc_ln65_3_fu_286">
<pin_list>
<pin id="287" dir="0" index="0" bw="32" slack="0"/>
<pin id="288" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65_3/4 "/>
</bind>
</comp>

<comp id="290" class="1004" name="icmp_ln65_6_fu_290">
<pin_list>
<pin id="291" dir="0" index="0" bw="8" slack="0"/>
<pin id="292" dir="0" index="1" bw="8" slack="0"/>
<pin id="293" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_6/4 "/>
</bind>
</comp>

<comp id="296" class="1004" name="icmp_ln65_7_fu_296">
<pin_list>
<pin id="297" dir="0" index="0" bw="23" slack="0"/>
<pin id="298" dir="0" index="1" bw="23" slack="0"/>
<pin id="299" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_7/4 "/>
</bind>
</comp>

<comp id="302" class="1004" name="or_ln65_3_fu_302">
<pin_list>
<pin id="303" dir="0" index="0" bw="1" slack="0"/>
<pin id="304" dir="0" index="1" bw="1" slack="0"/>
<pin id="305" dir="1" index="2" bw="1" slack="2"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_3/4 "/>
</bind>
</comp>

<comp id="308" class="1004" name="or_ln65_14_fu_308">
<pin_list>
<pin id="309" dir="0" index="0" bw="1" slack="0"/>
<pin id="310" dir="0" index="1" bw="1" slack="0"/>
<pin id="311" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_14/4 "/>
</bind>
</comp>

<comp id="314" class="1004" name="or_ln65_15_fu_314">
<pin_list>
<pin id="315" dir="0" index="0" bw="1" slack="0"/>
<pin id="316" dir="0" index="1" bw="1" slack="1"/>
<pin id="317" dir="1" index="2" bw="1" slack="5"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_15/4 "/>
</bind>
</comp>

<comp id="319" class="1004" name="bitcast_ln65_4_fu_319">
<pin_list>
<pin id="320" dir="0" index="0" bw="32" slack="0"/>
<pin id="321" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65_4/5 "/>
</bind>
</comp>

<comp id="323" class="1004" name="tmp_34_fu_323">
<pin_list>
<pin id="324" dir="0" index="0" bw="8" slack="0"/>
<pin id="325" dir="0" index="1" bw="32" slack="0"/>
<pin id="326" dir="0" index="2" bw="6" slack="0"/>
<pin id="327" dir="0" index="3" bw="6" slack="0"/>
<pin id="328" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_34/5 "/>
</bind>
</comp>

<comp id="333" class="1004" name="trunc_ln65_4_fu_333">
<pin_list>
<pin id="334" dir="0" index="0" bw="32" slack="0"/>
<pin id="335" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65_4/5 "/>
</bind>
</comp>

<comp id="337" class="1004" name="icmp_ln65_8_fu_337">
<pin_list>
<pin id="338" dir="0" index="0" bw="8" slack="0"/>
<pin id="339" dir="0" index="1" bw="8" slack="0"/>
<pin id="340" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_8/5 "/>
</bind>
</comp>

<comp id="343" class="1004" name="icmp_ln65_9_fu_343">
<pin_list>
<pin id="344" dir="0" index="0" bw="23" slack="0"/>
<pin id="345" dir="0" index="1" bw="23" slack="0"/>
<pin id="346" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_9/5 "/>
</bind>
</comp>

<comp id="349" class="1004" name="or_ln65_4_fu_349">
<pin_list>
<pin id="350" dir="0" index="0" bw="1" slack="0"/>
<pin id="351" dir="0" index="1" bw="1" slack="0"/>
<pin id="352" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_4/5 "/>
</bind>
</comp>

<comp id="355" class="1004" name="and_ln65_7_fu_355">
<pin_list>
<pin id="356" dir="0" index="0" bw="1" slack="2"/>
<pin id="357" dir="0" index="1" bw="1" slack="1"/>
<pin id="358" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_7/6 "/>
</bind>
</comp>

<comp id="359" class="1004" name="and_ln65_9_fu_359">
<pin_list>
<pin id="360" dir="0" index="0" bw="1" slack="1"/>
<pin id="361" dir="0" index="1" bw="1" slack="0"/>
<pin id="362" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_9/6 "/>
</bind>
</comp>

<comp id="364" class="1004" name="bitcast_ln65_6_fu_364">
<pin_list>
<pin id="365" dir="0" index="0" bw="32" slack="0"/>
<pin id="366" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65_6/6 "/>
</bind>
</comp>

<comp id="368" class="1004" name="tmp_38_fu_368">
<pin_list>
<pin id="369" dir="0" index="0" bw="8" slack="0"/>
<pin id="370" dir="0" index="1" bw="32" slack="0"/>
<pin id="371" dir="0" index="2" bw="6" slack="0"/>
<pin id="372" dir="0" index="3" bw="6" slack="0"/>
<pin id="373" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_38/6 "/>
</bind>
</comp>

<comp id="378" class="1004" name="trunc_ln65_6_fu_378">
<pin_list>
<pin id="379" dir="0" index="0" bw="32" slack="0"/>
<pin id="380" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65_6/6 "/>
</bind>
</comp>

<comp id="382" class="1004" name="icmp_ln65_12_fu_382">
<pin_list>
<pin id="383" dir="0" index="0" bw="8" slack="0"/>
<pin id="384" dir="0" index="1" bw="8" slack="0"/>
<pin id="385" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_12/6 "/>
</bind>
</comp>

<comp id="388" class="1004" name="icmp_ln65_13_fu_388">
<pin_list>
<pin id="389" dir="0" index="0" bw="23" slack="0"/>
<pin id="390" dir="0" index="1" bw="23" slack="0"/>
<pin id="391" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_13/6 "/>
</bind>
</comp>

<comp id="394" class="1004" name="or_ln65_9_fu_394">
<pin_list>
<pin id="395" dir="0" index="0" bw="1" slack="0"/>
<pin id="396" dir="0" index="1" bw="1" slack="0"/>
<pin id="397" dir="1" index="2" bw="1" slack="2"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_9/6 "/>
</bind>
</comp>

<comp id="400" class="1004" name="bitcast_ln65_5_fu_400">
<pin_list>
<pin id="401" dir="0" index="0" bw="32" slack="0"/>
<pin id="402" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65_5/7 "/>
</bind>
</comp>

<comp id="404" class="1004" name="tmp_37_fu_404">
<pin_list>
<pin id="405" dir="0" index="0" bw="8" slack="0"/>
<pin id="406" dir="0" index="1" bw="32" slack="0"/>
<pin id="407" dir="0" index="2" bw="6" slack="0"/>
<pin id="408" dir="0" index="3" bw="6" slack="0"/>
<pin id="409" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_37/7 "/>
</bind>
</comp>

<comp id="414" class="1004" name="trunc_ln65_5_fu_414">
<pin_list>
<pin id="415" dir="0" index="0" bw="32" slack="0"/>
<pin id="416" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65_5/7 "/>
</bind>
</comp>

<comp id="418" class="1004" name="icmp_ln65_10_fu_418">
<pin_list>
<pin id="419" dir="0" index="0" bw="8" slack="0"/>
<pin id="420" dir="0" index="1" bw="8" slack="0"/>
<pin id="421" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_10/7 "/>
</bind>
</comp>

<comp id="424" class="1004" name="icmp_ln65_11_fu_424">
<pin_list>
<pin id="425" dir="0" index="0" bw="23" slack="0"/>
<pin id="426" dir="0" index="1" bw="23" slack="0"/>
<pin id="427" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_11/7 "/>
</bind>
</comp>

<comp id="430" class="1004" name="or_ln65_6_fu_430">
<pin_list>
<pin id="431" dir="0" index="0" bw="1" slack="1"/>
<pin id="432" dir="0" index="1" bw="1" slack="1"/>
<pin id="433" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_6/7 "/>
</bind>
</comp>

<comp id="434" class="1004" name="xor_ln65_fu_434">
<pin_list>
<pin id="435" dir="0" index="0" bw="1" slack="0"/>
<pin id="436" dir="0" index="1" bw="1" slack="0"/>
<pin id="437" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln65/7 "/>
</bind>
</comp>

<comp id="440" class="1004" name="xor_ln65_fu_440">
<pin_list>
<pin id="441" dir="0" index="0" bw="1" slack="0"/>
<pin id="442" dir="0" index="1" bw="1" slack="0"/>
<pin id="443" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln65/7 "/>
</bind>
</comp>

<comp id="446" class="1004" name="and_ln65_fu_446">
<pin_list>
<pin id="447" dir="0" index="0" bw="1" slack="0"/>
<pin id="448" dir="0" index="1" bw="1" slack="0"/>
<pin id="449" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65/7 "/>
</bind>
</comp>

<comp id="452" class="1004" name="and_ln65_10_fu_452">
<pin_list>
<pin id="453" dir="0" index="0" bw="1" slack="0"/>
<pin id="454" dir="0" index="1" bw="1" slack="0"/>
<pin id="455" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_10/7 "/>
</bind>
</comp>

<comp id="458" class="1004" name="and_ln65_1_fu_458">
<pin_list>
<pin id="459" dir="0" index="0" bw="1" slack="7"/>
<pin id="460" dir="0" index="1" bw="1" slack="6"/>
<pin id="461" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_1/8 "/>
</bind>
</comp>

<comp id="462" class="1004" name="and_ln65_8_fu_462">
<pin_list>
<pin id="463" dir="0" index="0" bw="1" slack="3"/>
<pin id="464" dir="0" index="1" bw="1" slack="2"/>
<pin id="465" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_8/8 "/>
</bind>
</comp>

<comp id="466" class="1004" name="or_ln65_5_fu_466">
<pin_list>
<pin id="467" dir="0" index="0" bw="1" slack="1"/>
<pin id="468" dir="0" index="1" bw="1" slack="1"/>
<pin id="469" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_5/8 "/>
</bind>
</comp>

<comp id="470" class="1004" name="bitcast_ln65_7_fu_470">
<pin_list>
<pin id="471" dir="0" index="0" bw="32" slack="0"/>
<pin id="472" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln65_7/8 "/>
</bind>
</comp>

<comp id="474" class="1004" name="tmp_39_fu_474">
<pin_list>
<pin id="475" dir="0" index="0" bw="8" slack="0"/>
<pin id="476" dir="0" index="1" bw="32" slack="0"/>
<pin id="477" dir="0" index="2" bw="6" slack="0"/>
<pin id="478" dir="0" index="3" bw="6" slack="0"/>
<pin id="479" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_39/8 "/>
</bind>
</comp>

<comp id="484" class="1004" name="trunc_ln65_7_fu_484">
<pin_list>
<pin id="485" dir="0" index="0" bw="32" slack="0"/>
<pin id="486" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln65_7/8 "/>
</bind>
</comp>

<comp id="488" class="1004" name="icmp_ln65_14_fu_488">
<pin_list>
<pin id="489" dir="0" index="0" bw="8" slack="0"/>
<pin id="490" dir="0" index="1" bw="8" slack="0"/>
<pin id="491" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_14/8 "/>
</bind>
</comp>

<comp id="494" class="1004" name="icmp_ln65_15_fu_494">
<pin_list>
<pin id="495" dir="0" index="0" bw="23" slack="0"/>
<pin id="496" dir="0" index="1" bw="23" slack="0"/>
<pin id="497" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln65_15/8 "/>
</bind>
</comp>

<comp id="500" class="1004" name="xor_ln65_fu_500">
<pin_list>
<pin id="501" dir="0" index="0" bw="1" slack="0"/>
<pin id="502" dir="0" index="1" bw="1" slack="0"/>
<pin id="503" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln65/8 "/>
</bind>
</comp>

<comp id="506" class="1004" name="xor_ln65_fu_506">
<pin_list>
<pin id="507" dir="0" index="0" bw="1" slack="0"/>
<pin id="508" dir="0" index="1" bw="1" slack="0"/>
<pin id="509" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln65/8 "/>
</bind>
</comp>

<comp id="512" class="1004" name="and_ln65_fu_512">
<pin_list>
<pin id="513" dir="0" index="0" bw="1" slack="0"/>
<pin id="514" dir="0" index="1" bw="1" slack="0"/>
<pin id="515" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65/8 "/>
</bind>
</comp>

<comp id="518" class="1004" name="and_ln65_11_fu_518">
<pin_list>
<pin id="519" dir="0" index="0" bw="1" slack="0"/>
<pin id="520" dir="0" index="1" bw="1" slack="0"/>
<pin id="521" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_11/8 "/>
</bind>
</comp>

<comp id="524" class="1004" name="or_ln65_8_fu_524">
<pin_list>
<pin id="525" dir="0" index="0" bw="1" slack="0"/>
<pin id="526" dir="0" index="1" bw="1" slack="1"/>
<pin id="527" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_8/8 "/>
</bind>
</comp>

<comp id="529" class="1004" name="or_ln65_10_fu_529">
<pin_list>
<pin id="530" dir="0" index="0" bw="1" slack="0"/>
<pin id="531" dir="0" index="1" bw="1" slack="0"/>
<pin id="532" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_10/8 "/>
</bind>
</comp>

<comp id="535" class="1004" name="or_ln65_11_fu_535">
<pin_list>
<pin id="536" dir="0" index="0" bw="1" slack="0"/>
<pin id="537" dir="0" index="1" bw="1" slack="2"/>
<pin id="538" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_11/8 "/>
</bind>
</comp>

<comp id="540" class="1004" name="or_ln65_12_fu_540">
<pin_list>
<pin id="541" dir="0" index="0" bw="1" slack="0"/>
<pin id="542" dir="0" index="1" bw="1" slack="0"/>
<pin id="543" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_12/8 "/>
</bind>
</comp>

<comp id="546" class="1004" name="and_ln65_5_fu_546">
<pin_list>
<pin id="547" dir="0" index="0" bw="1" slack="6"/>
<pin id="548" dir="0" index="1" bw="1" slack="5"/>
<pin id="549" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_5/9 "/>
</bind>
</comp>

<comp id="550" class="1004" name="and_ln65_6_fu_550">
<pin_list>
<pin id="551" dir="0" index="0" bw="1" slack="5"/>
<pin id="552" dir="0" index="1" bw="1" slack="4"/>
<pin id="553" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_6/9 "/>
</bind>
</comp>

<comp id="554" class="1004" name="or_ln65_7_fu_554">
<pin_list>
<pin id="555" dir="0" index="0" bw="1" slack="1"/>
<pin id="556" dir="0" index="1" bw="1" slack="1"/>
<pin id="557" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_7/9 "/>
</bind>
</comp>

<comp id="558" class="1004" name="or_ln65_16_fu_558">
<pin_list>
<pin id="559" dir="0" index="0" bw="1" slack="0"/>
<pin id="560" dir="0" index="1" bw="1" slack="0"/>
<pin id="561" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_16/9 "/>
</bind>
</comp>

<comp id="564" class="1004" name="xor_ln65_fu_564">
<pin_list>
<pin id="565" dir="0" index="0" bw="1" slack="0"/>
<pin id="566" dir="0" index="1" bw="1" slack="0"/>
<pin id="567" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln65/9 "/>
</bind>
</comp>

<comp id="570" class="1004" name="xor_ln65_fu_570">
<pin_list>
<pin id="571" dir="0" index="0" bw="1" slack="0"/>
<pin id="572" dir="0" index="1" bw="1" slack="0"/>
<pin id="573" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln65/9 "/>
</bind>
</comp>

<comp id="576" class="1004" name="and_ln65_fu_576">
<pin_list>
<pin id="577" dir="0" index="0" bw="1" slack="0"/>
<pin id="578" dir="0" index="1" bw="1" slack="0"/>
<pin id="579" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65/9 "/>
</bind>
</comp>

<comp id="582" class="1004" name="and_ln65_12_fu_582">
<pin_list>
<pin id="583" dir="0" index="0" bw="1" slack="0"/>
<pin id="584" dir="0" index="1" bw="1" slack="0"/>
<pin id="585" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln65_12/9 "/>
</bind>
</comp>

<comp id="588" class="1004" name="or_ln65_17_fu_588">
<pin_list>
<pin id="589" dir="0" index="0" bw="1" slack="0"/>
<pin id="590" dir="0" index="1" bw="1" slack="0"/>
<pin id="591" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_17/9 "/>
</bind>
</comp>

<comp id="594" class="1004" name="or_ln65_18_fu_594">
<pin_list>
<pin id="595" dir="0" index="0" bw="1" slack="0"/>
<pin id="596" dir="0" index="1" bw="1" slack="5"/>
<pin id="597" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln65_18/9 "/>
</bind>
</comp>

<comp id="599" class="1004" name="idx_fu_599">
<pin_list>
<pin id="600" dir="0" index="0" bw="1" slack="0"/>
<pin id="601" dir="0" index="1" bw="1" slack="1"/>
<pin id="602" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="idx/9 "/>
</bind>
</comp>

<comp id="604" class="1004" name="zext_ln70_fu_604">
<pin_list>
<pin id="605" dir="0" index="0" bw="1" slack="1"/>
<pin id="606" dir="1" index="1" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70/10 "/>
</bind>
</comp>

<comp id="607" class="1004" name="idx_1_fu_607">
<pin_list>
<pin id="608" dir="0" index="0" bw="1" slack="1"/>
<pin id="609" dir="0" index="1" bw="2" slack="0"/>
<pin id="610" dir="0" index="2" bw="2" slack="0"/>
<pin id="611" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_1/10 "/>
</bind>
</comp>

<comp id="614" class="1004" name="sext_ln46_fu_614">
<pin_list>
<pin id="615" dir="0" index="0" bw="2" slack="0"/>
<pin id="616" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln46/10 "/>
</bind>
</comp>

<comp id="618" class="1004" name="zext_ln70_1_fu_618">
<pin_list>
<pin id="619" dir="0" index="0" bw="2" slack="0"/>
<pin id="620" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_1/10 "/>
</bind>
</comp>

<comp id="622" class="1004" name="idx_2_fu_622">
<pin_list>
<pin id="623" dir="0" index="0" bw="1" slack="1"/>
<pin id="624" dir="0" index="1" bw="3" slack="0"/>
<pin id="625" dir="0" index="2" bw="3" slack="0"/>
<pin id="626" dir="1" index="3" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_2/10 "/>
</bind>
</comp>

<comp id="629" class="1004" name="sext_ln46_1_fu_629">
<pin_list>
<pin id="630" dir="0" index="0" bw="3" slack="0"/>
<pin id="631" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln46_1/10 "/>
</bind>
</comp>

<comp id="633" class="1004" name="select_ln70_fu_633">
<pin_list>
<pin id="634" dir="0" index="0" bw="1" slack="1"/>
<pin id="635" dir="0" index="1" bw="3" slack="0"/>
<pin id="636" dir="0" index="2" bw="3" slack="0"/>
<pin id="637" dir="1" index="3" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70/10 "/>
</bind>
</comp>

<comp id="640" class="1004" name="zext_ln70_2_fu_640">
<pin_list>
<pin id="641" dir="0" index="0" bw="3" slack="0"/>
<pin id="642" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_2/10 "/>
</bind>
</comp>

<comp id="644" class="1004" name="idx_3_fu_644">
<pin_list>
<pin id="645" dir="0" index="0" bw="1" slack="1"/>
<pin id="646" dir="0" index="1" bw="4" slack="0"/>
<pin id="647" dir="0" index="2" bw="4" slack="0"/>
<pin id="648" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_3/10 "/>
</bind>
</comp>

<comp id="651" class="1004" name="trunc_ln46_fu_651">
<pin_list>
<pin id="652" dir="0" index="0" bw="4" slack="0"/>
<pin id="653" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46/10 "/>
</bind>
</comp>

<comp id="655" class="1004" name="tmp_40_fu_655">
<pin_list>
<pin id="656" dir="0" index="0" bw="1" slack="0"/>
<pin id="657" dir="0" index="1" bw="4" slack="0"/>
<pin id="658" dir="0" index="2" bw="3" slack="0"/>
<pin id="659" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_40/10 "/>
</bind>
</comp>

<comp id="663" class="1004" name="or_ln70_fu_663">
<pin_list>
<pin id="664" dir="0" index="0" bw="1" slack="0"/>
<pin id="665" dir="0" index="1" bw="1" slack="1"/>
<pin id="666" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70/10 "/>
</bind>
</comp>

<comp id="668" class="1004" name="select_ln70_1_fu_668">
<pin_list>
<pin id="669" dir="0" index="0" bw="1" slack="0"/>
<pin id="670" dir="0" index="1" bw="3" slack="0"/>
<pin id="671" dir="0" index="2" bw="3" slack="0"/>
<pin id="672" dir="1" index="3" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_1/10 "/>
</bind>
</comp>

<comp id="676" class="1004" name="zext_ln70_3_fu_676">
<pin_list>
<pin id="677" dir="0" index="0" bw="3" slack="0"/>
<pin id="678" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_3/10 "/>
</bind>
</comp>

<comp id="680" class="1004" name="idx_4_fu_680">
<pin_list>
<pin id="681" dir="0" index="0" bw="1" slack="1"/>
<pin id="682" dir="0" index="1" bw="4" slack="0"/>
<pin id="683" dir="0" index="2" bw="4" slack="0"/>
<pin id="684" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_4/10 "/>
</bind>
</comp>

<comp id="687" class="1004" name="trunc_ln46_1_fu_687">
<pin_list>
<pin id="688" dir="0" index="0" bw="4" slack="0"/>
<pin id="689" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_1/10 "/>
</bind>
</comp>

<comp id="691" class="1004" name="tmp_41_fu_691">
<pin_list>
<pin id="692" dir="0" index="0" bw="1" slack="0"/>
<pin id="693" dir="0" index="1" bw="4" slack="0"/>
<pin id="694" dir="0" index="2" bw="3" slack="0"/>
<pin id="695" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_41/10 "/>
</bind>
</comp>

<comp id="699" class="1004" name="or_ln70_1_fu_699">
<pin_list>
<pin id="700" dir="0" index="0" bw="1" slack="0"/>
<pin id="701" dir="0" index="1" bw="1" slack="1"/>
<pin id="702" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_1/10 "/>
</bind>
</comp>

<comp id="704" class="1004" name="select_ln70_2_fu_704">
<pin_list>
<pin id="705" dir="0" index="0" bw="1" slack="0"/>
<pin id="706" dir="0" index="1" bw="3" slack="0"/>
<pin id="707" dir="0" index="2" bw="3" slack="0"/>
<pin id="708" dir="1" index="3" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_2/10 "/>
</bind>
</comp>

<comp id="712" class="1004" name="zext_ln70_4_fu_712">
<pin_list>
<pin id="713" dir="0" index="0" bw="3" slack="0"/>
<pin id="714" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_4/10 "/>
</bind>
</comp>

<comp id="716" class="1004" name="idx_5_fu_716">
<pin_list>
<pin id="717" dir="0" index="0" bw="1" slack="1"/>
<pin id="718" dir="0" index="1" bw="4" slack="0"/>
<pin id="719" dir="0" index="2" bw="4" slack="0"/>
<pin id="720" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_5/10 "/>
</bind>
</comp>

<comp id="723" class="1004" name="trunc_ln46_2_fu_723">
<pin_list>
<pin id="724" dir="0" index="0" bw="4" slack="0"/>
<pin id="725" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_2/10 "/>
</bind>
</comp>

<comp id="727" class="1004" name="tmp_42_fu_727">
<pin_list>
<pin id="728" dir="0" index="0" bw="1" slack="0"/>
<pin id="729" dir="0" index="1" bw="4" slack="0"/>
<pin id="730" dir="0" index="2" bw="3" slack="0"/>
<pin id="731" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_42/10 "/>
</bind>
</comp>

<comp id="735" class="1004" name="or_ln70_2_fu_735">
<pin_list>
<pin id="736" dir="0" index="0" bw="1" slack="0"/>
<pin id="737" dir="0" index="1" bw="1" slack="1"/>
<pin id="738" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_2/10 "/>
</bind>
</comp>

<comp id="740" class="1004" name="select_ln70_3_fu_740">
<pin_list>
<pin id="741" dir="0" index="0" bw="1" slack="0"/>
<pin id="742" dir="0" index="1" bw="3" slack="0"/>
<pin id="743" dir="0" index="2" bw="3" slack="0"/>
<pin id="744" dir="1" index="3" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_3/10 "/>
</bind>
</comp>

<comp id="748" class="1004" name="zext_ln70_5_fu_748">
<pin_list>
<pin id="749" dir="0" index="0" bw="3" slack="0"/>
<pin id="750" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_5/10 "/>
</bind>
</comp>

<comp id="752" class="1004" name="idx_6_fu_752">
<pin_list>
<pin id="753" dir="0" index="0" bw="1" slack="1"/>
<pin id="754" dir="0" index="1" bw="4" slack="0"/>
<pin id="755" dir="0" index="2" bw="4" slack="0"/>
<pin id="756" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_6/10 "/>
</bind>
</comp>

<comp id="759" class="1004" name="sext_ln46_2_fu_759">
<pin_list>
<pin id="760" dir="0" index="0" bw="4" slack="0"/>
<pin id="761" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln46_2/10 "/>
</bind>
</comp>

<comp id="763" class="1004" name="tmp_43_fu_763">
<pin_list>
<pin id="764" dir="0" index="0" bw="1" slack="0"/>
<pin id="765" dir="0" index="1" bw="4" slack="0"/>
<pin id="766" dir="0" index="2" bw="3" slack="0"/>
<pin id="767" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_43/10 "/>
</bind>
</comp>

<comp id="771" class="1004" name="or_ln70_3_fu_771">
<pin_list>
<pin id="772" dir="0" index="0" bw="1" slack="0"/>
<pin id="773" dir="0" index="1" bw="1" slack="1"/>
<pin id="774" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_3/10 "/>
</bind>
</comp>

<comp id="776" class="1004" name="select_ln70_4_fu_776">
<pin_list>
<pin id="777" dir="0" index="0" bw="1" slack="0"/>
<pin id="778" dir="0" index="1" bw="4" slack="0"/>
<pin id="779" dir="0" index="2" bw="4" slack="0"/>
<pin id="780" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_4/10 "/>
</bind>
</comp>

<comp id="784" class="1004" name="zext_ln70_6_fu_784">
<pin_list>
<pin id="785" dir="0" index="0" bw="4" slack="0"/>
<pin id="786" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_6/10 "/>
</bind>
</comp>

<comp id="788" class="1004" name="idx_7_fu_788">
<pin_list>
<pin id="789" dir="0" index="0" bw="1" slack="1"/>
<pin id="790" dir="0" index="1" bw="5" slack="0"/>
<pin id="791" dir="0" index="2" bw="5" slack="0"/>
<pin id="792" dir="1" index="3" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_7/10 "/>
</bind>
</comp>

<comp id="795" class="1004" name="trunc_ln46_3_fu_795">
<pin_list>
<pin id="796" dir="0" index="0" bw="5" slack="0"/>
<pin id="797" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_3/10 "/>
</bind>
</comp>

<comp id="799" class="1004" name="tmp_44_fu_799">
<pin_list>
<pin id="800" dir="0" index="0" bw="1" slack="0"/>
<pin id="801" dir="0" index="1" bw="5" slack="0"/>
<pin id="802" dir="0" index="2" bw="4" slack="0"/>
<pin id="803" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_44/10 "/>
</bind>
</comp>

<comp id="807" class="1004" name="or_ln70_4_fu_807">
<pin_list>
<pin id="808" dir="0" index="0" bw="1" slack="0"/>
<pin id="809" dir="0" index="1" bw="1" slack="1"/>
<pin id="810" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_4/10 "/>
</bind>
</comp>

<comp id="812" class="1004" name="select_ln70_5_fu_812">
<pin_list>
<pin id="813" dir="0" index="0" bw="1" slack="0"/>
<pin id="814" dir="0" index="1" bw="4" slack="0"/>
<pin id="815" dir="0" index="2" bw="4" slack="0"/>
<pin id="816" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_5/10 "/>
</bind>
</comp>

<comp id="820" class="1004" name="zext_ln70_7_fu_820">
<pin_list>
<pin id="821" dir="0" index="0" bw="4" slack="0"/>
<pin id="822" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_7/10 "/>
</bind>
</comp>

<comp id="824" class="1004" name="idx_8_fu_824">
<pin_list>
<pin id="825" dir="0" index="0" bw="1" slack="1"/>
<pin id="826" dir="0" index="1" bw="5" slack="0"/>
<pin id="827" dir="0" index="2" bw="5" slack="0"/>
<pin id="828" dir="1" index="3" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_8/10 "/>
</bind>
</comp>

<comp id="831" class="1004" name="trunc_ln46_4_fu_831">
<pin_list>
<pin id="832" dir="0" index="0" bw="5" slack="0"/>
<pin id="833" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_4/10 "/>
</bind>
</comp>

<comp id="835" class="1004" name="tmp_45_fu_835">
<pin_list>
<pin id="836" dir="0" index="0" bw="1" slack="0"/>
<pin id="837" dir="0" index="1" bw="5" slack="0"/>
<pin id="838" dir="0" index="2" bw="4" slack="0"/>
<pin id="839" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_45/10 "/>
</bind>
</comp>

<comp id="843" class="1004" name="or_ln70_5_fu_843">
<pin_list>
<pin id="844" dir="0" index="0" bw="1" slack="0"/>
<pin id="845" dir="0" index="1" bw="1" slack="1"/>
<pin id="846" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_5/10 "/>
</bind>
</comp>

<comp id="848" class="1004" name="select_ln70_6_fu_848">
<pin_list>
<pin id="849" dir="0" index="0" bw="1" slack="0"/>
<pin id="850" dir="0" index="1" bw="4" slack="0"/>
<pin id="851" dir="0" index="2" bw="4" slack="0"/>
<pin id="852" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_6/10 "/>
</bind>
</comp>

<comp id="856" class="1004" name="zext_ln70_8_fu_856">
<pin_list>
<pin id="857" dir="0" index="0" bw="4" slack="0"/>
<pin id="858" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_8/10 "/>
</bind>
</comp>

<comp id="860" class="1004" name="idx_9_fu_860">
<pin_list>
<pin id="861" dir="0" index="0" bw="1" slack="1"/>
<pin id="862" dir="0" index="1" bw="5" slack="0"/>
<pin id="863" dir="0" index="2" bw="5" slack="0"/>
<pin id="864" dir="1" index="3" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_9/10 "/>
</bind>
</comp>

<comp id="867" class="1004" name="trunc_ln46_5_fu_867">
<pin_list>
<pin id="868" dir="0" index="0" bw="5" slack="0"/>
<pin id="869" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_5/10 "/>
</bind>
</comp>

<comp id="871" class="1004" name="tmp_46_fu_871">
<pin_list>
<pin id="872" dir="0" index="0" bw="1" slack="0"/>
<pin id="873" dir="0" index="1" bw="5" slack="0"/>
<pin id="874" dir="0" index="2" bw="4" slack="0"/>
<pin id="875" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_46/10 "/>
</bind>
</comp>

<comp id="879" class="1004" name="or_ln70_6_fu_879">
<pin_list>
<pin id="880" dir="0" index="0" bw="1" slack="0"/>
<pin id="881" dir="0" index="1" bw="1" slack="1"/>
<pin id="882" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_6/10 "/>
</bind>
</comp>

<comp id="884" class="1004" name="select_ln70_7_fu_884">
<pin_list>
<pin id="885" dir="0" index="0" bw="1" slack="0"/>
<pin id="886" dir="0" index="1" bw="4" slack="0"/>
<pin id="887" dir="0" index="2" bw="4" slack="0"/>
<pin id="888" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_7/10 "/>
</bind>
</comp>

<comp id="892" class="1004" name="zext_ln70_9_fu_892">
<pin_list>
<pin id="893" dir="0" index="0" bw="4" slack="0"/>
<pin id="894" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_9/10 "/>
</bind>
</comp>

<comp id="896" class="1004" name="idx_10_fu_896">
<pin_list>
<pin id="897" dir="0" index="0" bw="1" slack="1"/>
<pin id="898" dir="0" index="1" bw="5" slack="0"/>
<pin id="899" dir="0" index="2" bw="5" slack="0"/>
<pin id="900" dir="1" index="3" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_10/10 "/>
</bind>
</comp>

<comp id="903" class="1004" name="trunc_ln46_6_fu_903">
<pin_list>
<pin id="904" dir="0" index="0" bw="5" slack="0"/>
<pin id="905" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_6/10 "/>
</bind>
</comp>

<comp id="907" class="1004" name="tmp_47_fu_907">
<pin_list>
<pin id="908" dir="0" index="0" bw="1" slack="0"/>
<pin id="909" dir="0" index="1" bw="5" slack="0"/>
<pin id="910" dir="0" index="2" bw="4" slack="0"/>
<pin id="911" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_47/10 "/>
</bind>
</comp>

<comp id="915" class="1004" name="or_ln70_7_fu_915">
<pin_list>
<pin id="916" dir="0" index="0" bw="1" slack="0"/>
<pin id="917" dir="0" index="1" bw="1" slack="1"/>
<pin id="918" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_7/10 "/>
</bind>
</comp>

<comp id="920" class="1004" name="select_ln70_8_fu_920">
<pin_list>
<pin id="921" dir="0" index="0" bw="1" slack="0"/>
<pin id="922" dir="0" index="1" bw="4" slack="0"/>
<pin id="923" dir="0" index="2" bw="4" slack="0"/>
<pin id="924" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_8/10 "/>
</bind>
</comp>

<comp id="928" class="1004" name="zext_ln70_10_fu_928">
<pin_list>
<pin id="929" dir="0" index="0" bw="4" slack="0"/>
<pin id="930" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_10/10 "/>
</bind>
</comp>

<comp id="932" class="1004" name="idx_11_fu_932">
<pin_list>
<pin id="933" dir="0" index="0" bw="1" slack="1"/>
<pin id="934" dir="0" index="1" bw="5" slack="0"/>
<pin id="935" dir="0" index="2" bw="5" slack="0"/>
<pin id="936" dir="1" index="3" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_11/10 "/>
</bind>
</comp>

<comp id="939" class="1004" name="trunc_ln46_7_fu_939">
<pin_list>
<pin id="940" dir="0" index="0" bw="5" slack="0"/>
<pin id="941" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_7/10 "/>
</bind>
</comp>

<comp id="943" class="1004" name="tmp_48_fu_943">
<pin_list>
<pin id="944" dir="0" index="0" bw="1" slack="0"/>
<pin id="945" dir="0" index="1" bw="5" slack="0"/>
<pin id="946" dir="0" index="2" bw="4" slack="0"/>
<pin id="947" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_48/10 "/>
</bind>
</comp>

<comp id="951" class="1004" name="or_ln70_8_fu_951">
<pin_list>
<pin id="952" dir="0" index="0" bw="1" slack="0"/>
<pin id="953" dir="0" index="1" bw="1" slack="1"/>
<pin id="954" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_8/10 "/>
</bind>
</comp>

<comp id="956" class="1004" name="select_ln70_9_fu_956">
<pin_list>
<pin id="957" dir="0" index="0" bw="1" slack="0"/>
<pin id="958" dir="0" index="1" bw="4" slack="0"/>
<pin id="959" dir="0" index="2" bw="4" slack="0"/>
<pin id="960" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_9/10 "/>
</bind>
</comp>

<comp id="964" class="1004" name="zext_ln70_11_fu_964">
<pin_list>
<pin id="965" dir="0" index="0" bw="4" slack="0"/>
<pin id="966" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_11/10 "/>
</bind>
</comp>

<comp id="968" class="1004" name="idx_12_fu_968">
<pin_list>
<pin id="969" dir="0" index="0" bw="1" slack="1"/>
<pin id="970" dir="0" index="1" bw="5" slack="0"/>
<pin id="971" dir="0" index="2" bw="5" slack="0"/>
<pin id="972" dir="1" index="3" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_12/10 "/>
</bind>
</comp>

<comp id="975" class="1004" name="trunc_ln46_8_fu_975">
<pin_list>
<pin id="976" dir="0" index="0" bw="5" slack="0"/>
<pin id="977" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_8/10 "/>
</bind>
</comp>

<comp id="979" class="1004" name="tmp_49_fu_979">
<pin_list>
<pin id="980" dir="0" index="0" bw="1" slack="0"/>
<pin id="981" dir="0" index="1" bw="5" slack="0"/>
<pin id="982" dir="0" index="2" bw="4" slack="0"/>
<pin id="983" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_49/10 "/>
</bind>
</comp>

<comp id="987" class="1004" name="or_ln70_9_fu_987">
<pin_list>
<pin id="988" dir="0" index="0" bw="1" slack="0"/>
<pin id="989" dir="0" index="1" bw="1" slack="1"/>
<pin id="990" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_9/10 "/>
</bind>
</comp>

<comp id="992" class="1004" name="select_ln70_10_fu_992">
<pin_list>
<pin id="993" dir="0" index="0" bw="1" slack="0"/>
<pin id="994" dir="0" index="1" bw="4" slack="0"/>
<pin id="995" dir="0" index="2" bw="4" slack="0"/>
<pin id="996" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_10/10 "/>
</bind>
</comp>

<comp id="1000" class="1004" name="zext_ln70_12_fu_1000">
<pin_list>
<pin id="1001" dir="0" index="0" bw="4" slack="0"/>
<pin id="1002" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln70_12/10 "/>
</bind>
</comp>

<comp id="1004" class="1004" name="idx_13_fu_1004">
<pin_list>
<pin id="1005" dir="0" index="0" bw="1" slack="1"/>
<pin id="1006" dir="0" index="1" bw="5" slack="0"/>
<pin id="1007" dir="0" index="2" bw="5" slack="0"/>
<pin id="1008" dir="1" index="3" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="idx_13/10 "/>
</bind>
</comp>

<comp id="1011" class="1004" name="trunc_ln46_9_fu_1011">
<pin_list>
<pin id="1012" dir="0" index="0" bw="5" slack="0"/>
<pin id="1013" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln46_9/10 "/>
</bind>
</comp>

<comp id="1015" class="1004" name="tmp_50_fu_1015">
<pin_list>
<pin id="1016" dir="0" index="0" bw="1" slack="0"/>
<pin id="1017" dir="0" index="1" bw="5" slack="0"/>
<pin id="1018" dir="0" index="2" bw="4" slack="0"/>
<pin id="1019" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_50/10 "/>
</bind>
</comp>

<comp id="1023" class="1004" name="or_ln70_10_fu_1023">
<pin_list>
<pin id="1024" dir="0" index="0" bw="1" slack="0"/>
<pin id="1025" dir="0" index="1" bw="1" slack="1"/>
<pin id="1026" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln70_10/10 "/>
</bind>
</comp>

<comp id="1028" class="1004" name="select_ln70_11_fu_1028">
<pin_list>
<pin id="1029" dir="0" index="0" bw="1" slack="0"/>
<pin id="1030" dir="0" index="1" bw="4" slack="0"/>
<pin id="1031" dir="0" index="2" bw="4" slack="0"/>
<pin id="1032" dir="1" index="3" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln70_11/10 "/>
</bind>
</comp>

<comp id="1036" class="1004" name="zext_ln75_fu_1036">
<pin_list>
<pin id="1037" dir="0" index="0" bw="4" slack="0"/>
<pin id="1038" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln75/10 "/>
</bind>
</comp>

<comp id="1040" class="1004" name="select_ln65_fu_1040">
<pin_list>
<pin id="1041" dir="0" index="0" bw="1" slack="1"/>
<pin id="1042" dir="0" index="1" bw="5" slack="0"/>
<pin id="1043" dir="0" index="2" bw="5" slack="0"/>
<pin id="1044" dir="1" index="3" bw="5" slack="2147483647"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln65/10 "/>
</bind>
</comp>

<comp id="1047" class="1005" name="d_read_15_reg_1047">
<pin_list>
<pin id="1048" dir="0" index="0" bw="32" slack="1"/>
<pin id="1049" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_15 "/>
</bind>
</comp>

<comp id="1053" class="1005" name="or_ln65_reg_1053">
<pin_list>
<pin id="1054" dir="0" index="0" bw="1" slack="2"/>
<pin id="1055" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="or_ln65 "/>
</bind>
</comp>

<comp id="1059" class="1005" name="d_read_7_reg_1059">
<pin_list>
<pin id="1060" dir="0" index="0" bw="32" slack="1"/>
<pin id="1061" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_7 "/>
</bind>
</comp>

<comp id="1065" class="1005" name="tmp_s_reg_1065">
<pin_list>
<pin id="1066" dir="0" index="0" bw="1" slack="1"/>
<pin id="1067" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_s "/>
</bind>
</comp>

<comp id="1070" class="1005" name="tmp_24_reg_1070">
<pin_list>
<pin id="1071" dir="0" index="0" bw="1" slack="6"/>
<pin id="1072" dir="1" index="1" bw="1" slack="6"/>
</pin_list>
<bind>
<opset="tmp_24 "/>
</bind>
</comp>

<comp id="1075" class="1005" name="or_ln65_1_reg_1075">
<pin_list>
<pin id="1076" dir="0" index="0" bw="1" slack="1"/>
<pin id="1077" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln65_1 "/>
</bind>
</comp>

<comp id="1081" class="1005" name="d_read_6_reg_1081">
<pin_list>
<pin id="1082" dir="0" index="0" bw="32" slack="1"/>
<pin id="1083" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_6 "/>
</bind>
</comp>

<comp id="1087" class="1005" name="tmp_27_reg_1087">
<pin_list>
<pin id="1088" dir="0" index="0" bw="1" slack="1"/>
<pin id="1089" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_27 "/>
</bind>
</comp>

<comp id="1092" class="1005" name="or_ln65_2_reg_1092">
<pin_list>
<pin id="1093" dir="0" index="0" bw="1" slack="1"/>
<pin id="1094" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln65_2 "/>
</bind>
</comp>

<comp id="1098" class="1005" name="or_ln65_13_reg_1098">
<pin_list>
<pin id="1099" dir="0" index="0" bw="1" slack="1"/>
<pin id="1100" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln65_13 "/>
</bind>
</comp>

<comp id="1103" class="1005" name="d_read_5_reg_1103">
<pin_list>
<pin id="1104" dir="0" index="0" bw="32" slack="1"/>
<pin id="1105" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_5 "/>
</bind>
</comp>

<comp id="1109" class="1005" name="tmp_30_reg_1109">
<pin_list>
<pin id="1110" dir="0" index="0" bw="1" slack="5"/>
<pin id="1111" dir="1" index="1" bw="1" slack="5"/>
</pin_list>
<bind>
<opset="tmp_30 "/>
</bind>
</comp>

<comp id="1114" class="1005" name="or_ln65_3_reg_1114">
<pin_list>
<pin id="1115" dir="0" index="0" bw="1" slack="2"/>
<pin id="1116" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="or_ln65_3 "/>
</bind>
</comp>

<comp id="1120" class="1005" name="or_ln65_15_reg_1120">
<pin_list>
<pin id="1121" dir="0" index="0" bw="1" slack="5"/>
<pin id="1122" dir="1" index="1" bw="1" slack="5"/>
</pin_list>
<bind>
<opset="or_ln65_15 "/>
</bind>
</comp>

<comp id="1125" class="1005" name="d_read_4_reg_1125">
<pin_list>
<pin id="1126" dir="0" index="0" bw="32" slack="1"/>
<pin id="1127" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_4 "/>
</bind>
</comp>

<comp id="1131" class="1005" name="tmp_32_reg_1131">
<pin_list>
<pin id="1132" dir="0" index="0" bw="1" slack="4"/>
<pin id="1133" dir="1" index="1" bw="1" slack="4"/>
</pin_list>
<bind>
<opset="tmp_32 "/>
</bind>
</comp>

<comp id="1136" class="1005" name="tmp_33_reg_1136">
<pin_list>
<pin id="1137" dir="0" index="0" bw="1" slack="1"/>
<pin id="1138" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_33 "/>
</bind>
</comp>

<comp id="1141" class="1005" name="or_ln65_4_reg_1141">
<pin_list>
<pin id="1142" dir="0" index="0" bw="1" slack="1"/>
<pin id="1143" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln65_4 "/>
</bind>
</comp>

<comp id="1147" class="1005" name="d_read_2_reg_1147">
<pin_list>
<pin id="1148" dir="0" index="0" bw="32" slack="1"/>
<pin id="1149" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_2 "/>
</bind>
</comp>

<comp id="1153" class="1005" name="tmp_35_reg_1153">
<pin_list>
<pin id="1154" dir="0" index="0" bw="1" slack="2"/>
<pin id="1155" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="tmp_35 "/>
</bind>
</comp>

<comp id="1158" class="1005" name="icmp_ln65_12_reg_1158">
<pin_list>
<pin id="1159" dir="0" index="0" bw="1" slack="1"/>
<pin id="1160" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln65_12 "/>
</bind>
</comp>

<comp id="1163" class="1005" name="icmp_ln65_13_reg_1163">
<pin_list>
<pin id="1164" dir="0" index="0" bw="1" slack="1"/>
<pin id="1165" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln65_13 "/>
</bind>
</comp>

<comp id="1168" class="1005" name="or_ln65_9_reg_1168">
<pin_list>
<pin id="1169" dir="0" index="0" bw="1" slack="2"/>
<pin id="1170" dir="1" index="1" bw="1" slack="2"/>
</pin_list>
<bind>
<opset="or_ln65_9 "/>
</bind>
</comp>

<comp id="1173" class="1005" name="d_read_3_reg_1173">
<pin_list>
<pin id="1174" dir="0" index="0" bw="32" slack="1"/>
<pin id="1175" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_3 "/>
</bind>
</comp>

<comp id="1179" class="1005" name="icmp_ln65_10_reg_1179">
<pin_list>
<pin id="1180" dir="0" index="0" bw="1" slack="1"/>
<pin id="1181" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln65_10 "/>
</bind>
</comp>

<comp id="1184" class="1005" name="icmp_ln65_11_reg_1184">
<pin_list>
<pin id="1185" dir="0" index="0" bw="1" slack="1"/>
<pin id="1186" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln65_11 "/>
</bind>
</comp>

<comp id="1189" class="1005" name="and_ln65_10_reg_1189">
<pin_list>
<pin id="1190" dir="0" index="0" bw="1" slack="1"/>
<pin id="1191" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="and_ln65_10 "/>
</bind>
</comp>

<comp id="1194" class="1005" name="d_read_1_reg_1194">
<pin_list>
<pin id="1195" dir="0" index="0" bw="32" slack="1"/>
<pin id="1196" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d_read_1 "/>
</bind>
</comp>

<comp id="1200" class="1005" name="icmp_ln65_14_reg_1200">
<pin_list>
<pin id="1201" dir="0" index="0" bw="1" slack="1"/>
<pin id="1202" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln65_14 "/>
</bind>
</comp>

<comp id="1205" class="1005" name="icmp_ln65_15_reg_1205">
<pin_list>
<pin id="1206" dir="0" index="0" bw="1" slack="1"/>
<pin id="1207" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln65_15 "/>
</bind>
</comp>

<comp id="1210" class="1005" name="or_ln65_12_reg_1210">
<pin_list>
<pin id="1211" dir="0" index="0" bw="1" slack="1"/>
<pin id="1212" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln65_12 "/>
</bind>
</comp>

<comp id="1215" class="1005" name="idx_reg_1215">
<pin_list>
<pin id="1216" dir="0" index="0" bw="1" slack="1"/>
<pin id="1217" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="idx "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="70"><net_src comp="16" pin="0"/><net_sink comp="66" pin=0"/></net>

<net id="71"><net_src comp="0" pin="0"/><net_sink comp="66" pin=1"/></net>

<net id="76"><net_src comp="16" pin="0"/><net_sink comp="72" pin=0"/></net>

<net id="77"><net_src comp="2" pin="0"/><net_sink comp="72" pin=1"/></net>

<net id="82"><net_src comp="16" pin="0"/><net_sink comp="78" pin=0"/></net>

<net id="83"><net_src comp="4" pin="0"/><net_sink comp="78" pin=1"/></net>

<net id="88"><net_src comp="16" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="89"><net_src comp="6" pin="0"/><net_sink comp="84" pin=1"/></net>

<net id="94"><net_src comp="16" pin="0"/><net_sink comp="90" pin=0"/></net>

<net id="95"><net_src comp="8" pin="0"/><net_sink comp="90" pin=1"/></net>

<net id="100"><net_src comp="16" pin="0"/><net_sink comp="96" pin=0"/></net>

<net id="101"><net_src comp="12" pin="0"/><net_sink comp="96" pin=1"/></net>

<net id="106"><net_src comp="16" pin="0"/><net_sink comp="102" pin=0"/></net>

<net id="107"><net_src comp="10" pin="0"/><net_sink comp="102" pin=1"/></net>

<net id="112"><net_src comp="16" pin="0"/><net_sink comp="108" pin=0"/></net>

<net id="113"><net_src comp="14" pin="0"/><net_sink comp="108" pin=1"/></net>

<net id="118"><net_src comp="66" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="119"><net_src comp="28" pin="0"/><net_sink comp="114" pin=1"/></net>

<net id="124"><net_src comp="66" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="125"><net_src comp="28" pin="0"/><net_sink comp="120" pin=1"/></net>

<net id="126"><net_src comp="72" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="127"><net_src comp="72" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="128"><net_src comp="78" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="129"><net_src comp="78" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="130"><net_src comp="84" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="131"><net_src comp="84" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="132"><net_src comp="90" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="133"><net_src comp="90" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="134"><net_src comp="96" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="135"><net_src comp="96" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="136"><net_src comp="102" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="137"><net_src comp="102" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="138"><net_src comp="108" pin="2"/><net_sink comp="114" pin=0"/></net>

<net id="139"><net_src comp="108" pin="2"/><net_sink comp="120" pin=0"/></net>

<net id="143"><net_src comp="66" pin="2"/><net_sink comp="140" pin=0"/></net>

<net id="150"><net_src comp="18" pin="0"/><net_sink comp="144" pin=0"/></net>

<net id="151"><net_src comp="140" pin="1"/><net_sink comp="144" pin=1"/></net>

<net id="152"><net_src comp="20" pin="0"/><net_sink comp="144" pin=2"/></net>

<net id="153"><net_src comp="22" pin="0"/><net_sink comp="144" pin=3"/></net>

<net id="157"><net_src comp="140" pin="1"/><net_sink comp="154" pin=0"/></net>

<net id="162"><net_src comp="144" pin="4"/><net_sink comp="158" pin=0"/></net>

<net id="163"><net_src comp="24" pin="0"/><net_sink comp="158" pin=1"/></net>

<net id="168"><net_src comp="154" pin="1"/><net_sink comp="164" pin=0"/></net>

<net id="169"><net_src comp="26" pin="0"/><net_sink comp="164" pin=1"/></net>

<net id="174"><net_src comp="164" pin="2"/><net_sink comp="170" pin=0"/></net>

<net id="175"><net_src comp="158" pin="2"/><net_sink comp="170" pin=1"/></net>

<net id="179"><net_src comp="72" pin="2"/><net_sink comp="176" pin=0"/></net>

<net id="186"><net_src comp="18" pin="0"/><net_sink comp="180" pin=0"/></net>

<net id="187"><net_src comp="176" pin="1"/><net_sink comp="180" pin=1"/></net>

<net id="188"><net_src comp="20" pin="0"/><net_sink comp="180" pin=2"/></net>

<net id="189"><net_src comp="22" pin="0"/><net_sink comp="180" pin=3"/></net>

<net id="193"><net_src comp="176" pin="1"/><net_sink comp="190" pin=0"/></net>

<net id="198"><net_src comp="180" pin="4"/><net_sink comp="194" pin=0"/></net>

<net id="199"><net_src comp="24" pin="0"/><net_sink comp="194" pin=1"/></net>

<net id="204"><net_src comp="190" pin="1"/><net_sink comp="200" pin=0"/></net>

<net id="205"><net_src comp="26" pin="0"/><net_sink comp="200" pin=1"/></net>

<net id="210"><net_src comp="200" pin="2"/><net_sink comp="206" pin=0"/></net>

<net id="211"><net_src comp="194" pin="2"/><net_sink comp="206" pin=1"/></net>

<net id="220"><net_src comp="114" pin="2"/><net_sink comp="216" pin=1"/></net>

<net id="224"><net_src comp="78" pin="2"/><net_sink comp="221" pin=0"/></net>

<net id="231"><net_src comp="18" pin="0"/><net_sink comp="225" pin=0"/></net>

<net id="232"><net_src comp="221" pin="1"/><net_sink comp="225" pin=1"/></net>

<net id="233"><net_src comp="20" pin="0"/><net_sink comp="225" pin=2"/></net>

<net id="234"><net_src comp="22" pin="0"/><net_sink comp="225" pin=3"/></net>

<net id="238"><net_src comp="221" pin="1"/><net_sink comp="235" pin=0"/></net>

<net id="243"><net_src comp="225" pin="4"/><net_sink comp="239" pin=0"/></net>

<net id="244"><net_src comp="24" pin="0"/><net_sink comp="239" pin=1"/></net>

<net id="249"><net_src comp="235" pin="1"/><net_sink comp="245" pin=0"/></net>

<net id="250"><net_src comp="26" pin="0"/><net_sink comp="245" pin=1"/></net>

<net id="255"><net_src comp="245" pin="2"/><net_sink comp="251" pin=0"/></net>

<net id="256"><net_src comp="239" pin="2"/><net_sink comp="251" pin=1"/></net>

<net id="261"><net_src comp="216" pin="2"/><net_sink comp="257" pin=0"/></net>

<net id="262"><net_src comp="212" pin="2"/><net_sink comp="257" pin=1"/></net>

<net id="271"><net_src comp="114" pin="2"/><net_sink comp="267" pin=1"/></net>

<net id="275"><net_src comp="84" pin="2"/><net_sink comp="272" pin=0"/></net>

<net id="282"><net_src comp="18" pin="0"/><net_sink comp="276" pin=0"/></net>

<net id="283"><net_src comp="272" pin="1"/><net_sink comp="276" pin=1"/></net>

<net id="284"><net_src comp="20" pin="0"/><net_sink comp="276" pin=2"/></net>

<net id="285"><net_src comp="22" pin="0"/><net_sink comp="276" pin=3"/></net>

<net id="289"><net_src comp="272" pin="1"/><net_sink comp="286" pin=0"/></net>

<net id="294"><net_src comp="276" pin="4"/><net_sink comp="290" pin=0"/></net>

<net id="295"><net_src comp="24" pin="0"/><net_sink comp="290" pin=1"/></net>

<net id="300"><net_src comp="286" pin="1"/><net_sink comp="296" pin=0"/></net>

<net id="301"><net_src comp="26" pin="0"/><net_sink comp="296" pin=1"/></net>

<net id="306"><net_src comp="296" pin="2"/><net_sink comp="302" pin=0"/></net>

<net id="307"><net_src comp="290" pin="2"/><net_sink comp="302" pin=1"/></net>

<net id="312"><net_src comp="267" pin="2"/><net_sink comp="308" pin=0"/></net>

<net id="313"><net_src comp="263" pin="2"/><net_sink comp="308" pin=1"/></net>

<net id="318"><net_src comp="308" pin="2"/><net_sink comp="314" pin=0"/></net>

<net id="322"><net_src comp="90" pin="2"/><net_sink comp="319" pin=0"/></net>

<net id="329"><net_src comp="18" pin="0"/><net_sink comp="323" pin=0"/></net>

<net id="330"><net_src comp="319" pin="1"/><net_sink comp="323" pin=1"/></net>

<net id="331"><net_src comp="20" pin="0"/><net_sink comp="323" pin=2"/></net>

<net id="332"><net_src comp="22" pin="0"/><net_sink comp="323" pin=3"/></net>

<net id="336"><net_src comp="319" pin="1"/><net_sink comp="333" pin=0"/></net>

<net id="341"><net_src comp="323" pin="4"/><net_sink comp="337" pin=0"/></net>

<net id="342"><net_src comp="24" pin="0"/><net_sink comp="337" pin=1"/></net>

<net id="347"><net_src comp="333" pin="1"/><net_sink comp="343" pin=0"/></net>

<net id="348"><net_src comp="26" pin="0"/><net_sink comp="343" pin=1"/></net>

<net id="353"><net_src comp="343" pin="2"/><net_sink comp="349" pin=0"/></net>

<net id="354"><net_src comp="337" pin="2"/><net_sink comp="349" pin=1"/></net>

<net id="363"><net_src comp="120" pin="2"/><net_sink comp="359" pin=1"/></net>

<net id="367"><net_src comp="96" pin="2"/><net_sink comp="364" pin=0"/></net>

<net id="374"><net_src comp="18" pin="0"/><net_sink comp="368" pin=0"/></net>

<net id="375"><net_src comp="364" pin="1"/><net_sink comp="368" pin=1"/></net>

<net id="376"><net_src comp="20" pin="0"/><net_sink comp="368" pin=2"/></net>

<net id="377"><net_src comp="22" pin="0"/><net_sink comp="368" pin=3"/></net>

<net id="381"><net_src comp="364" pin="1"/><net_sink comp="378" pin=0"/></net>

<net id="386"><net_src comp="368" pin="4"/><net_sink comp="382" pin=0"/></net>

<net id="387"><net_src comp="24" pin="0"/><net_sink comp="382" pin=1"/></net>

<net id="392"><net_src comp="378" pin="1"/><net_sink comp="388" pin=0"/></net>

<net id="393"><net_src comp="26" pin="0"/><net_sink comp="388" pin=1"/></net>

<net id="398"><net_src comp="355" pin="2"/><net_sink comp="394" pin=0"/></net>

<net id="399"><net_src comp="359" pin="2"/><net_sink comp="394" pin=1"/></net>

<net id="403"><net_src comp="102" pin="2"/><net_sink comp="400" pin=0"/></net>

<net id="410"><net_src comp="18" pin="0"/><net_sink comp="404" pin=0"/></net>

<net id="411"><net_src comp="400" pin="1"/><net_sink comp="404" pin=1"/></net>

<net id="412"><net_src comp="20" pin="0"/><net_sink comp="404" pin=2"/></net>

<net id="413"><net_src comp="22" pin="0"/><net_sink comp="404" pin=3"/></net>

<net id="417"><net_src comp="400" pin="1"/><net_sink comp="414" pin=0"/></net>

<net id="422"><net_src comp="404" pin="4"/><net_sink comp="418" pin=0"/></net>

<net id="423"><net_src comp="24" pin="0"/><net_sink comp="418" pin=1"/></net>

<net id="428"><net_src comp="414" pin="1"/><net_sink comp="424" pin=0"/></net>

<net id="429"><net_src comp="26" pin="0"/><net_sink comp="424" pin=1"/></net>

<net id="438"><net_src comp="114" pin="2"/><net_sink comp="434" pin=0"/></net>

<net id="439"><net_src comp="30" pin="0"/><net_sink comp="434" pin=1"/></net>

<net id="444"><net_src comp="120" pin="2"/><net_sink comp="440" pin=0"/></net>

<net id="445"><net_src comp="30" pin="0"/><net_sink comp="440" pin=1"/></net>

<net id="450"><net_src comp="434" pin="2"/><net_sink comp="446" pin=0"/></net>

<net id="451"><net_src comp="440" pin="2"/><net_sink comp="446" pin=1"/></net>

<net id="456"><net_src comp="430" pin="2"/><net_sink comp="452" pin=0"/></net>

<net id="457"><net_src comp="446" pin="2"/><net_sink comp="452" pin=1"/></net>

<net id="473"><net_src comp="108" pin="2"/><net_sink comp="470" pin=0"/></net>

<net id="480"><net_src comp="18" pin="0"/><net_sink comp="474" pin=0"/></net>

<net id="481"><net_src comp="470" pin="1"/><net_sink comp="474" pin=1"/></net>

<net id="482"><net_src comp="20" pin="0"/><net_sink comp="474" pin=2"/></net>

<net id="483"><net_src comp="22" pin="0"/><net_sink comp="474" pin=3"/></net>

<net id="487"><net_src comp="470" pin="1"/><net_sink comp="484" pin=0"/></net>

<net id="492"><net_src comp="474" pin="4"/><net_sink comp="488" pin=0"/></net>

<net id="493"><net_src comp="24" pin="0"/><net_sink comp="488" pin=1"/></net>

<net id="498"><net_src comp="484" pin="1"/><net_sink comp="494" pin=0"/></net>

<net id="499"><net_src comp="26" pin="0"/><net_sink comp="494" pin=1"/></net>

<net id="504"><net_src comp="114" pin="2"/><net_sink comp="500" pin=0"/></net>

<net id="505"><net_src comp="30" pin="0"/><net_sink comp="500" pin=1"/></net>

<net id="510"><net_src comp="120" pin="2"/><net_sink comp="506" pin=0"/></net>

<net id="511"><net_src comp="30" pin="0"/><net_sink comp="506" pin=1"/></net>

<net id="516"><net_src comp="500" pin="2"/><net_sink comp="512" pin=0"/></net>

<net id="517"><net_src comp="506" pin="2"/><net_sink comp="512" pin=1"/></net>

<net id="522"><net_src comp="466" pin="2"/><net_sink comp="518" pin=0"/></net>

<net id="523"><net_src comp="512" pin="2"/><net_sink comp="518" pin=1"/></net>

<net id="528"><net_src comp="518" pin="2"/><net_sink comp="524" pin=0"/></net>

<net id="533"><net_src comp="462" pin="2"/><net_sink comp="529" pin=0"/></net>

<net id="534"><net_src comp="458" pin="2"/><net_sink comp="529" pin=1"/></net>

<net id="539"><net_src comp="529" pin="2"/><net_sink comp="535" pin=0"/></net>

<net id="544"><net_src comp="535" pin="2"/><net_sink comp="540" pin=0"/></net>

<net id="545"><net_src comp="524" pin="2"/><net_sink comp="540" pin=1"/></net>

<net id="562"><net_src comp="550" pin="2"/><net_sink comp="558" pin=0"/></net>

<net id="563"><net_src comp="546" pin="2"/><net_sink comp="558" pin=1"/></net>

<net id="568"><net_src comp="114" pin="2"/><net_sink comp="564" pin=0"/></net>

<net id="569"><net_src comp="30" pin="0"/><net_sink comp="564" pin=1"/></net>

<net id="574"><net_src comp="120" pin="2"/><net_sink comp="570" pin=0"/></net>

<net id="575"><net_src comp="30" pin="0"/><net_sink comp="570" pin=1"/></net>

<net id="580"><net_src comp="564" pin="2"/><net_sink comp="576" pin=0"/></net>

<net id="581"><net_src comp="570" pin="2"/><net_sink comp="576" pin=1"/></net>

<net id="586"><net_src comp="554" pin="2"/><net_sink comp="582" pin=0"/></net>

<net id="587"><net_src comp="576" pin="2"/><net_sink comp="582" pin=1"/></net>

<net id="592"><net_src comp="582" pin="2"/><net_sink comp="588" pin=0"/></net>

<net id="593"><net_src comp="558" pin="2"/><net_sink comp="588" pin=1"/></net>

<net id="598"><net_src comp="588" pin="2"/><net_sink comp="594" pin=0"/></net>

<net id="603"><net_src comp="594" pin="2"/><net_sink comp="599" pin=0"/></net>

<net id="612"><net_src comp="32" pin="0"/><net_sink comp="607" pin=1"/></net>

<net id="613"><net_src comp="604" pin="1"/><net_sink comp="607" pin=2"/></net>

<net id="617"><net_src comp="607" pin="3"/><net_sink comp="614" pin=0"/></net>

<net id="621"><net_src comp="607" pin="3"/><net_sink comp="618" pin=0"/></net>

<net id="627"><net_src comp="614" pin="1"/><net_sink comp="622" pin=1"/></net>

<net id="628"><net_src comp="618" pin="1"/><net_sink comp="622" pin=2"/></net>

<net id="632"><net_src comp="622" pin="3"/><net_sink comp="629" pin=0"/></net>

<net id="638"><net_src comp="34" pin="0"/><net_sink comp="633" pin=1"/></net>

<net id="639"><net_src comp="618" pin="1"/><net_sink comp="633" pin=2"/></net>

<net id="643"><net_src comp="633" pin="3"/><net_sink comp="640" pin=0"/></net>

<net id="649"><net_src comp="629" pin="1"/><net_sink comp="644" pin=1"/></net>

<net id="650"><net_src comp="640" pin="1"/><net_sink comp="644" pin=2"/></net>

<net id="654"><net_src comp="644" pin="3"/><net_sink comp="651" pin=0"/></net>

<net id="660"><net_src comp="36" pin="0"/><net_sink comp="655" pin=0"/></net>

<net id="661"><net_src comp="644" pin="3"/><net_sink comp="655" pin=1"/></net>

<net id="662"><net_src comp="38" pin="0"/><net_sink comp="655" pin=2"/></net>

<net id="667"><net_src comp="655" pin="3"/><net_sink comp="663" pin=0"/></net>

<net id="673"><net_src comp="663" pin="2"/><net_sink comp="668" pin=0"/></net>

<net id="674"><net_src comp="40" pin="0"/><net_sink comp="668" pin=1"/></net>

<net id="675"><net_src comp="651" pin="1"/><net_sink comp="668" pin=2"/></net>

<net id="679"><net_src comp="668" pin="3"/><net_sink comp="676" pin=0"/></net>

<net id="685"><net_src comp="629" pin="1"/><net_sink comp="680" pin=1"/></net>

<net id="686"><net_src comp="676" pin="1"/><net_sink comp="680" pin=2"/></net>

<net id="690"><net_src comp="680" pin="3"/><net_sink comp="687" pin=0"/></net>

<net id="696"><net_src comp="36" pin="0"/><net_sink comp="691" pin=0"/></net>

<net id="697"><net_src comp="680" pin="3"/><net_sink comp="691" pin=1"/></net>

<net id="698"><net_src comp="38" pin="0"/><net_sink comp="691" pin=2"/></net>

<net id="703"><net_src comp="691" pin="3"/><net_sink comp="699" pin=0"/></net>

<net id="709"><net_src comp="699" pin="2"/><net_sink comp="704" pin=0"/></net>

<net id="710"><net_src comp="42" pin="0"/><net_sink comp="704" pin=1"/></net>

<net id="711"><net_src comp="687" pin="1"/><net_sink comp="704" pin=2"/></net>

<net id="715"><net_src comp="704" pin="3"/><net_sink comp="712" pin=0"/></net>

<net id="721"><net_src comp="629" pin="1"/><net_sink comp="716" pin=1"/></net>

<net id="722"><net_src comp="712" pin="1"/><net_sink comp="716" pin=2"/></net>

<net id="726"><net_src comp="716" pin="3"/><net_sink comp="723" pin=0"/></net>

<net id="732"><net_src comp="36" pin="0"/><net_sink comp="727" pin=0"/></net>

<net id="733"><net_src comp="716" pin="3"/><net_sink comp="727" pin=1"/></net>

<net id="734"><net_src comp="38" pin="0"/><net_sink comp="727" pin=2"/></net>

<net id="739"><net_src comp="727" pin="3"/><net_sink comp="735" pin=0"/></net>

<net id="745"><net_src comp="735" pin="2"/><net_sink comp="740" pin=0"/></net>

<net id="746"><net_src comp="44" pin="0"/><net_sink comp="740" pin=1"/></net>

<net id="747"><net_src comp="723" pin="1"/><net_sink comp="740" pin=2"/></net>

<net id="751"><net_src comp="740" pin="3"/><net_sink comp="748" pin=0"/></net>

<net id="757"><net_src comp="629" pin="1"/><net_sink comp="752" pin=1"/></net>

<net id="758"><net_src comp="748" pin="1"/><net_sink comp="752" pin=2"/></net>

<net id="762"><net_src comp="752" pin="3"/><net_sink comp="759" pin=0"/></net>

<net id="768"><net_src comp="36" pin="0"/><net_sink comp="763" pin=0"/></net>

<net id="769"><net_src comp="752" pin="3"/><net_sink comp="763" pin=1"/></net>

<net id="770"><net_src comp="38" pin="0"/><net_sink comp="763" pin=2"/></net>

<net id="775"><net_src comp="763" pin="3"/><net_sink comp="771" pin=0"/></net>

<net id="781"><net_src comp="771" pin="2"/><net_sink comp="776" pin=0"/></net>

<net id="782"><net_src comp="46" pin="0"/><net_sink comp="776" pin=1"/></net>

<net id="783"><net_src comp="752" pin="3"/><net_sink comp="776" pin=2"/></net>

<net id="787"><net_src comp="776" pin="3"/><net_sink comp="784" pin=0"/></net>

<net id="793"><net_src comp="759" pin="1"/><net_sink comp="788" pin=1"/></net>

<net id="794"><net_src comp="784" pin="1"/><net_sink comp="788" pin=2"/></net>

<net id="798"><net_src comp="788" pin="3"/><net_sink comp="795" pin=0"/></net>

<net id="804"><net_src comp="48" pin="0"/><net_sink comp="799" pin=0"/></net>

<net id="805"><net_src comp="788" pin="3"/><net_sink comp="799" pin=1"/></net>

<net id="806"><net_src comp="50" pin="0"/><net_sink comp="799" pin=2"/></net>

<net id="811"><net_src comp="799" pin="3"/><net_sink comp="807" pin=0"/></net>

<net id="817"><net_src comp="807" pin="2"/><net_sink comp="812" pin=0"/></net>

<net id="818"><net_src comp="52" pin="0"/><net_sink comp="812" pin=1"/></net>

<net id="819"><net_src comp="795" pin="1"/><net_sink comp="812" pin=2"/></net>

<net id="823"><net_src comp="812" pin="3"/><net_sink comp="820" pin=0"/></net>

<net id="829"><net_src comp="759" pin="1"/><net_sink comp="824" pin=1"/></net>

<net id="830"><net_src comp="820" pin="1"/><net_sink comp="824" pin=2"/></net>

<net id="834"><net_src comp="824" pin="3"/><net_sink comp="831" pin=0"/></net>

<net id="840"><net_src comp="48" pin="0"/><net_sink comp="835" pin=0"/></net>

<net id="841"><net_src comp="824" pin="3"/><net_sink comp="835" pin=1"/></net>

<net id="842"><net_src comp="50" pin="0"/><net_sink comp="835" pin=2"/></net>

<net id="847"><net_src comp="835" pin="3"/><net_sink comp="843" pin=0"/></net>

<net id="853"><net_src comp="843" pin="2"/><net_sink comp="848" pin=0"/></net>

<net id="854"><net_src comp="54" pin="0"/><net_sink comp="848" pin=1"/></net>

<net id="855"><net_src comp="831" pin="1"/><net_sink comp="848" pin=2"/></net>

<net id="859"><net_src comp="848" pin="3"/><net_sink comp="856" pin=0"/></net>

<net id="865"><net_src comp="759" pin="1"/><net_sink comp="860" pin=1"/></net>

<net id="866"><net_src comp="856" pin="1"/><net_sink comp="860" pin=2"/></net>

<net id="870"><net_src comp="860" pin="3"/><net_sink comp="867" pin=0"/></net>

<net id="876"><net_src comp="48" pin="0"/><net_sink comp="871" pin=0"/></net>

<net id="877"><net_src comp="860" pin="3"/><net_sink comp="871" pin=1"/></net>

<net id="878"><net_src comp="50" pin="0"/><net_sink comp="871" pin=2"/></net>

<net id="883"><net_src comp="871" pin="3"/><net_sink comp="879" pin=0"/></net>

<net id="889"><net_src comp="879" pin="2"/><net_sink comp="884" pin=0"/></net>

<net id="890"><net_src comp="56" pin="0"/><net_sink comp="884" pin=1"/></net>

<net id="891"><net_src comp="867" pin="1"/><net_sink comp="884" pin=2"/></net>

<net id="895"><net_src comp="884" pin="3"/><net_sink comp="892" pin=0"/></net>

<net id="901"><net_src comp="759" pin="1"/><net_sink comp="896" pin=1"/></net>

<net id="902"><net_src comp="892" pin="1"/><net_sink comp="896" pin=2"/></net>

<net id="906"><net_src comp="896" pin="3"/><net_sink comp="903" pin=0"/></net>

<net id="912"><net_src comp="48" pin="0"/><net_sink comp="907" pin=0"/></net>

<net id="913"><net_src comp="896" pin="3"/><net_sink comp="907" pin=1"/></net>

<net id="914"><net_src comp="50" pin="0"/><net_sink comp="907" pin=2"/></net>

<net id="919"><net_src comp="907" pin="3"/><net_sink comp="915" pin=0"/></net>

<net id="925"><net_src comp="915" pin="2"/><net_sink comp="920" pin=0"/></net>

<net id="926"><net_src comp="58" pin="0"/><net_sink comp="920" pin=1"/></net>

<net id="927"><net_src comp="903" pin="1"/><net_sink comp="920" pin=2"/></net>

<net id="931"><net_src comp="920" pin="3"/><net_sink comp="928" pin=0"/></net>

<net id="937"><net_src comp="759" pin="1"/><net_sink comp="932" pin=1"/></net>

<net id="938"><net_src comp="928" pin="1"/><net_sink comp="932" pin=2"/></net>

<net id="942"><net_src comp="932" pin="3"/><net_sink comp="939" pin=0"/></net>

<net id="948"><net_src comp="48" pin="0"/><net_sink comp="943" pin=0"/></net>

<net id="949"><net_src comp="932" pin="3"/><net_sink comp="943" pin=1"/></net>

<net id="950"><net_src comp="50" pin="0"/><net_sink comp="943" pin=2"/></net>

<net id="955"><net_src comp="943" pin="3"/><net_sink comp="951" pin=0"/></net>

<net id="961"><net_src comp="951" pin="2"/><net_sink comp="956" pin=0"/></net>

<net id="962"><net_src comp="60" pin="0"/><net_sink comp="956" pin=1"/></net>

<net id="963"><net_src comp="939" pin="1"/><net_sink comp="956" pin=2"/></net>

<net id="967"><net_src comp="956" pin="3"/><net_sink comp="964" pin=0"/></net>

<net id="973"><net_src comp="759" pin="1"/><net_sink comp="968" pin=1"/></net>

<net id="974"><net_src comp="964" pin="1"/><net_sink comp="968" pin=2"/></net>

<net id="978"><net_src comp="968" pin="3"/><net_sink comp="975" pin=0"/></net>

<net id="984"><net_src comp="48" pin="0"/><net_sink comp="979" pin=0"/></net>

<net id="985"><net_src comp="968" pin="3"/><net_sink comp="979" pin=1"/></net>

<net id="986"><net_src comp="50" pin="0"/><net_sink comp="979" pin=2"/></net>

<net id="991"><net_src comp="979" pin="3"/><net_sink comp="987" pin=0"/></net>

<net id="997"><net_src comp="987" pin="2"/><net_sink comp="992" pin=0"/></net>

<net id="998"><net_src comp="62" pin="0"/><net_sink comp="992" pin=1"/></net>

<net id="999"><net_src comp="975" pin="1"/><net_sink comp="992" pin=2"/></net>

<net id="1003"><net_src comp="992" pin="3"/><net_sink comp="1000" pin=0"/></net>

<net id="1009"><net_src comp="759" pin="1"/><net_sink comp="1004" pin=1"/></net>

<net id="1010"><net_src comp="1000" pin="1"/><net_sink comp="1004" pin=2"/></net>

<net id="1014"><net_src comp="1004" pin="3"/><net_sink comp="1011" pin=0"/></net>

<net id="1020"><net_src comp="48" pin="0"/><net_sink comp="1015" pin=0"/></net>

<net id="1021"><net_src comp="1004" pin="3"/><net_sink comp="1015" pin=1"/></net>

<net id="1022"><net_src comp="50" pin="0"/><net_sink comp="1015" pin=2"/></net>

<net id="1027"><net_src comp="1015" pin="3"/><net_sink comp="1023" pin=0"/></net>

<net id="1033"><net_src comp="1023" pin="2"/><net_sink comp="1028" pin=0"/></net>

<net id="1034"><net_src comp="64" pin="0"/><net_sink comp="1028" pin=1"/></net>

<net id="1035"><net_src comp="1011" pin="1"/><net_sink comp="1028" pin=2"/></net>

<net id="1039"><net_src comp="1028" pin="3"/><net_sink comp="1036" pin=0"/></net>

<net id="1045"><net_src comp="759" pin="1"/><net_sink comp="1040" pin=1"/></net>

<net id="1046"><net_src comp="1036" pin="1"/><net_sink comp="1040" pin=2"/></net>

<net id="1050"><net_src comp="66" pin="2"/><net_sink comp="1047" pin=0"/></net>

<net id="1051"><net_src comp="1047" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1052"><net_src comp="1047" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1056"><net_src comp="170" pin="2"/><net_sink comp="1053" pin=0"/></net>

<net id="1057"><net_src comp="1053" pin="1"/><net_sink comp="212" pin=0"/></net>

<net id="1058"><net_src comp="1053" pin="1"/><net_sink comp="458" pin=0"/></net>

<net id="1062"><net_src comp="72" pin="2"/><net_sink comp="1059" pin=0"/></net>

<net id="1063"><net_src comp="1059" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1064"><net_src comp="1059" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1068"><net_src comp="114" pin="2"/><net_sink comp="1065" pin=0"/></net>

<net id="1069"><net_src comp="1065" pin="1"/><net_sink comp="212" pin=1"/></net>

<net id="1073"><net_src comp="120" pin="2"/><net_sink comp="1070" pin=0"/></net>

<net id="1074"><net_src comp="1070" pin="1"/><net_sink comp="458" pin=1"/></net>

<net id="1078"><net_src comp="206" pin="2"/><net_sink comp="1075" pin=0"/></net>

<net id="1079"><net_src comp="1075" pin="1"/><net_sink comp="216" pin=0"/></net>

<net id="1080"><net_src comp="1075" pin="1"/><net_sink comp="263" pin=0"/></net>

<net id="1084"><net_src comp="78" pin="2"/><net_sink comp="1081" pin=0"/></net>

<net id="1085"><net_src comp="1081" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1086"><net_src comp="1081" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1090"><net_src comp="120" pin="2"/><net_sink comp="1087" pin=0"/></net>

<net id="1091"><net_src comp="1087" pin="1"/><net_sink comp="263" pin=1"/></net>

<net id="1095"><net_src comp="251" pin="2"/><net_sink comp="1092" pin=0"/></net>

<net id="1096"><net_src comp="1092" pin="1"/><net_sink comp="267" pin=0"/></net>

<net id="1097"><net_src comp="1092" pin="1"/><net_sink comp="546" pin=0"/></net>

<net id="1101"><net_src comp="257" pin="2"/><net_sink comp="1098" pin=0"/></net>

<net id="1102"><net_src comp="1098" pin="1"/><net_sink comp="314" pin=1"/></net>

<net id="1106"><net_src comp="84" pin="2"/><net_sink comp="1103" pin=0"/></net>

<net id="1107"><net_src comp="1103" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1108"><net_src comp="1103" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1112"><net_src comp="120" pin="2"/><net_sink comp="1109" pin=0"/></net>

<net id="1113"><net_src comp="1109" pin="1"/><net_sink comp="546" pin=1"/></net>

<net id="1117"><net_src comp="302" pin="2"/><net_sink comp="1114" pin=0"/></net>

<net id="1118"><net_src comp="1114" pin="1"/><net_sink comp="355" pin=0"/></net>

<net id="1119"><net_src comp="1114" pin="1"/><net_sink comp="550" pin=0"/></net>

<net id="1123"><net_src comp="314" pin="2"/><net_sink comp="1120" pin=0"/></net>

<net id="1124"><net_src comp="1120" pin="1"/><net_sink comp="594" pin=1"/></net>

<net id="1128"><net_src comp="90" pin="2"/><net_sink comp="1125" pin=0"/></net>

<net id="1129"><net_src comp="1125" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1130"><net_src comp="1125" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1134"><net_src comp="114" pin="2"/><net_sink comp="1131" pin=0"/></net>

<net id="1135"><net_src comp="1131" pin="1"/><net_sink comp="550" pin=1"/></net>

<net id="1139"><net_src comp="120" pin="2"/><net_sink comp="1136" pin=0"/></net>

<net id="1140"><net_src comp="1136" pin="1"/><net_sink comp="355" pin=1"/></net>

<net id="1144"><net_src comp="349" pin="2"/><net_sink comp="1141" pin=0"/></net>

<net id="1145"><net_src comp="1141" pin="1"/><net_sink comp="359" pin=0"/></net>

<net id="1146"><net_src comp="1141" pin="1"/><net_sink comp="462" pin=0"/></net>

<net id="1150"><net_src comp="96" pin="2"/><net_sink comp="1147" pin=0"/></net>

<net id="1151"><net_src comp="1147" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1152"><net_src comp="1147" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1156"><net_src comp="114" pin="2"/><net_sink comp="1153" pin=0"/></net>

<net id="1157"><net_src comp="1153" pin="1"/><net_sink comp="462" pin=1"/></net>

<net id="1161"><net_src comp="382" pin="2"/><net_sink comp="1158" pin=0"/></net>

<net id="1162"><net_src comp="1158" pin="1"/><net_sink comp="430" pin=1"/></net>

<net id="1166"><net_src comp="388" pin="2"/><net_sink comp="1163" pin=0"/></net>

<net id="1167"><net_src comp="1163" pin="1"/><net_sink comp="430" pin=0"/></net>

<net id="1171"><net_src comp="394" pin="2"/><net_sink comp="1168" pin=0"/></net>

<net id="1172"><net_src comp="1168" pin="1"/><net_sink comp="535" pin=1"/></net>

<net id="1176"><net_src comp="102" pin="2"/><net_sink comp="1173" pin=0"/></net>

<net id="1177"><net_src comp="1173" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1178"><net_src comp="1173" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1182"><net_src comp="418" pin="2"/><net_sink comp="1179" pin=0"/></net>

<net id="1183"><net_src comp="1179" pin="1"/><net_sink comp="466" pin=1"/></net>

<net id="1187"><net_src comp="424" pin="2"/><net_sink comp="1184" pin=0"/></net>

<net id="1188"><net_src comp="1184" pin="1"/><net_sink comp="466" pin=0"/></net>

<net id="1192"><net_src comp="452" pin="2"/><net_sink comp="1189" pin=0"/></net>

<net id="1193"><net_src comp="1189" pin="1"/><net_sink comp="524" pin=1"/></net>

<net id="1197"><net_src comp="108" pin="2"/><net_sink comp="1194" pin=0"/></net>

<net id="1198"><net_src comp="1194" pin="1"/><net_sink comp="114" pin=0"/></net>

<net id="1199"><net_src comp="1194" pin="1"/><net_sink comp="120" pin=0"/></net>

<net id="1203"><net_src comp="488" pin="2"/><net_sink comp="1200" pin=0"/></net>

<net id="1204"><net_src comp="1200" pin="1"/><net_sink comp="554" pin=1"/></net>

<net id="1208"><net_src comp="494" pin="2"/><net_sink comp="1205" pin=0"/></net>

<net id="1209"><net_src comp="1205" pin="1"/><net_sink comp="554" pin=0"/></net>

<net id="1213"><net_src comp="540" pin="2"/><net_sink comp="1210" pin=0"/></net>

<net id="1214"><net_src comp="1210" pin="1"/><net_sink comp="599" pin=1"/></net>

<net id="1218"><net_src comp="599" pin="2"/><net_sink comp="1215" pin=0"/></net>

<net id="1219"><net_src comp="1215" pin="1"/><net_sink comp="604" pin=0"/></net>

<net id="1220"><net_src comp="1215" pin="1"/><net_sink comp="607" pin=0"/></net>

<net id="1221"><net_src comp="1215" pin="1"/><net_sink comp="622" pin=0"/></net>

<net id="1222"><net_src comp="1215" pin="1"/><net_sink comp="633" pin=0"/></net>

<net id="1223"><net_src comp="1215" pin="1"/><net_sink comp="644" pin=0"/></net>

<net id="1224"><net_src comp="1215" pin="1"/><net_sink comp="663" pin=1"/></net>

<net id="1225"><net_src comp="1215" pin="1"/><net_sink comp="680" pin=0"/></net>

<net id="1226"><net_src comp="1215" pin="1"/><net_sink comp="699" pin=1"/></net>

<net id="1227"><net_src comp="1215" pin="1"/><net_sink comp="716" pin=0"/></net>

<net id="1228"><net_src comp="1215" pin="1"/><net_sink comp="735" pin=1"/></net>

<net id="1229"><net_src comp="1215" pin="1"/><net_sink comp="752" pin=0"/></net>

<net id="1230"><net_src comp="1215" pin="1"/><net_sink comp="771" pin=1"/></net>

<net id="1231"><net_src comp="1215" pin="1"/><net_sink comp="788" pin=0"/></net>

<net id="1232"><net_src comp="1215" pin="1"/><net_sink comp="807" pin=1"/></net>

<net id="1233"><net_src comp="1215" pin="1"/><net_sink comp="824" pin=0"/></net>

<net id="1234"><net_src comp="1215" pin="1"/><net_sink comp="843" pin=1"/></net>

<net id="1235"><net_src comp="1215" pin="1"/><net_sink comp="860" pin=0"/></net>

<net id="1236"><net_src comp="1215" pin="1"/><net_sink comp="879" pin=1"/></net>

<net id="1237"><net_src comp="1215" pin="1"/><net_sink comp="896" pin=0"/></net>

<net id="1238"><net_src comp="1215" pin="1"/><net_sink comp="915" pin=1"/></net>

<net id="1239"><net_src comp="1215" pin="1"/><net_sink comp="932" pin=0"/></net>

<net id="1240"><net_src comp="1215" pin="1"/><net_sink comp="951" pin=1"/></net>

<net id="1241"><net_src comp="1215" pin="1"/><net_sink comp="968" pin=0"/></net>

<net id="1242"><net_src comp="1215" pin="1"/><net_sink comp="987" pin=1"/></net>

<net id="1243"><net_src comp="1215" pin="1"/><net_sink comp="1004" pin=0"/></net>

<net id="1244"><net_src comp="1215" pin="1"/><net_sink comp="1023" pin=1"/></net>

<net id="1245"><net_src comp="1215" pin="1"/><net_sink comp="1040" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: d_read | {}
	Port: d_read_23 | {}
	Port: d_read_24 | {}
	Port: d_read_25 | {}
	Port: d_read_26 | {}
	Port: d_read_27 | {}
	Port: d_read_28 | {}
	Port: d_read_29 | {}
 - Input state : 
	Port: find_region : d_read | {1 }
	Port: find_region : d_read_23 | {2 }
	Port: find_region : d_read_24 | {3 }
	Port: find_region : d_read_25 | {4 }
	Port: find_region : d_read_26 | {5 }
	Port: find_region : d_read_27 | {7 }
	Port: find_region : d_read_28 | {6 }
	Port: find_region : d_read_29 | {8 }
  - Chain level:
	State 1
		tmp : 1
		trunc_ln65 : 1
		icmp_ln65 : 2
		icmp_ln65_1 : 2
		or_ln65 : 3
	State 2
		tmp_25 : 1
		trunc_ln65_1 : 1
		icmp_ln65_2 : 2
		icmp_ln65_3 : 2
		or_ln65_1 : 3
	State 3
		and_ln65_2 : 1
		tmp_28 : 1
		trunc_ln65_2 : 1
		icmp_ln65_4 : 2
		icmp_ln65_5 : 2
		or_ln65_2 : 3
		or_ln65_13 : 1
	State 4
		and_ln65_4 : 1
		tmp_31 : 1
		trunc_ln65_3 : 1
		icmp_ln65_6 : 2
		icmp_ln65_7 : 2
		or_ln65_3 : 3
		or_ln65_14 : 1
		or_ln65_15 : 1
	State 5
		tmp_34 : 1
		trunc_ln65_4 : 1
		icmp_ln65_8 : 2
		icmp_ln65_9 : 2
		or_ln65_4 : 3
	State 6
		and_ln65_9 : 1
		tmp_38 : 1
		trunc_ln65_6 : 1
		icmp_ln65_12 : 2
		icmp_ln65_13 : 2
		or_ln65_9 : 1
	State 7
		tmp_37 : 1
		trunc_ln65_5 : 1
		icmp_ln65_10 : 2
		icmp_ln65_11 : 2
		xor_ln65 : 1
		xor_ln65 : 1
		and_ln65 : 1
		and_ln65_10 : 1
	State 8
		tmp_39 : 1
		trunc_ln65_7 : 1
		icmp_ln65_14 : 2
		icmp_ln65_15 : 2
		xor_ln65 : 1
		xor_ln65 : 1
		and_ln65 : 1
		and_ln65_11 : 1
		or_ln65_8 : 1
		or_ln65_12 : 1
	State 9
		xor_ln65 : 1
		xor_ln65 : 1
		and_ln65 : 1
		and_ln65_12 : 1
		or_ln65_17 : 1
		or_ln65_18 : 1
		idx : 1
	State 10
		idx_1 : 1
		sext_ln46 : 2
		zext_ln70_1 : 2
		idx_2 : 3
		sext_ln46_1 : 4
		select_ln70 : 3
		zext_ln70_2 : 4
		idx_3 : 5
		trunc_ln46 : 6
		tmp_40 : 6
		or_ln70 : 7
		select_ln70_1 : 7
		zext_ln70_3 : 8
		idx_4 : 9
		trunc_ln46_1 : 10
		tmp_41 : 10
		or_ln70_1 : 11
		select_ln70_2 : 11
		zext_ln70_4 : 12
		idx_5 : 13
		trunc_ln46_2 : 14
		tmp_42 : 14
		or_ln70_2 : 15
		select_ln70_3 : 15
		zext_ln70_5 : 16
		idx_6 : 17
		sext_ln46_2 : 18
		tmp_43 : 18
		or_ln70_3 : 19
		select_ln70_4 : 19
		zext_ln70_6 : 20
		idx_7 : 21
		trunc_ln46_3 : 22
		tmp_44 : 22
		or_ln70_4 : 23
		select_ln70_5 : 23
		zext_ln70_7 : 24
		idx_8 : 25
		trunc_ln46_4 : 26
		tmp_45 : 26
		or_ln70_5 : 27
		select_ln70_6 : 27
		zext_ln70_8 : 28
		idx_9 : 29
		trunc_ln46_5 : 30
		tmp_46 : 30
		or_ln70_6 : 31
		select_ln70_7 : 31
		zext_ln70_9 : 32
		idx_10 : 33
		trunc_ln46_6 : 34
		tmp_47 : 34
		or_ln70_7 : 35
		select_ln70_8 : 35
		zext_ln70_10 : 36
		idx_11 : 37
		trunc_ln46_7 : 38
		tmp_48 : 38
		or_ln70_8 : 39
		select_ln70_9 : 39
		zext_ln70_11 : 40
		idx_12 : 41
		trunc_ln46_8 : 42
		tmp_49 : 42
		or_ln70_9 : 43
		select_ln70_10 : 43
		zext_ln70_12 : 44
		idx_13 : 45
		trunc_ln46_9 : 46
		tmp_50 : 46
		or_ln70_10 : 47
		select_ln70_11 : 47
		zext_ln75 : 48
		select_ln65 : 49
		ret_ln75 : 50


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|
| Operation|     Functional Unit    |    FF   |   LUT   |
|----------|------------------------|---------|---------|
|          |    icmp_ln65_fu_158    |    0    |    11   |
|          |   icmp_ln65_1_fu_164   |    0    |    15   |
|          |   icmp_ln65_2_fu_194   |    0    |    11   |
|          |   icmp_ln65_3_fu_200   |    0    |    15   |
|          |   icmp_ln65_4_fu_239   |    0    |    11   |
|          |   icmp_ln65_5_fu_245   |    0    |    15   |
|          |   icmp_ln65_6_fu_290   |    0    |    11   |
|   icmp   |   icmp_ln65_7_fu_296   |    0    |    15   |
|          |   icmp_ln65_8_fu_337   |    0    |    11   |
|          |   icmp_ln65_9_fu_343   |    0    |    15   |
|          |   icmp_ln65_12_fu_382  |    0    |    11   |
|          |   icmp_ln65_13_fu_388  |    0    |    15   |
|          |   icmp_ln65_10_fu_418  |    0    |    11   |
|          |   icmp_ln65_11_fu_424  |    0    |    15   |
|          |   icmp_ln65_14_fu_488  |    0    |    11   |
|          |   icmp_ln65_15_fu_494  |    0    |    15   |
|----------|------------------------|---------|---------|
|          |      idx_1_fu_607      |    0    |    2    |
|          |      idx_2_fu_622      |    0    |    3    |
|          |   select_ln70_fu_633   |    0    |    3    |
|          |      idx_3_fu_644      |    0    |    4    |
|          |  select_ln70_1_fu_668  |    0    |    3    |
|          |      idx_4_fu_680      |    0    |    4    |
|          |  select_ln70_2_fu_704  |    0    |    3    |
|          |      idx_5_fu_716      |    0    |    4    |
|          |  select_ln70_3_fu_740  |    0    |    3    |
|          |      idx_6_fu_752      |    0    |    4    |
|          |  select_ln70_4_fu_776  |    0    |    4    |
|          |      idx_7_fu_788      |    0    |    5    |
|  select  |  select_ln70_5_fu_812  |    0    |    4    |
|          |      idx_8_fu_824      |    0    |    5    |
|          |  select_ln70_6_fu_848  |    0    |    4    |
|          |      idx_9_fu_860      |    0    |    5    |
|          |  select_ln70_7_fu_884  |    0    |    4    |
|          |      idx_10_fu_896     |    0    |    5    |
|          |  select_ln70_8_fu_920  |    0    |    4    |
|          |      idx_11_fu_932     |    0    |    5    |
|          |  select_ln70_9_fu_956  |    0    |    4    |
|          |      idx_12_fu_968     |    0    |    5    |
|          |  select_ln70_10_fu_992 |    0    |    4    |
|          |     idx_13_fu_1004     |    0    |    5    |
|          | select_ln70_11_fu_1028 |    0    |    4    |
|          |   select_ln65_fu_1040  |    0    |    5    |
|----------|------------------------|---------|---------|
|          |     or_ln65_fu_170     |    0    |    2    |
|          |    or_ln65_1_fu_206    |    0    |    2    |
|          |    or_ln65_2_fu_251    |    0    |    2    |
|          |    or_ln65_13_fu_257   |    0    |    2    |
|          |    or_ln65_3_fu_302    |    0    |    2    |
|          |    or_ln65_14_fu_308   |    0    |    2    |
|          |    or_ln65_15_fu_314   |    0    |    2    |
|          |    or_ln65_4_fu_349    |    0    |    2    |
|          |    or_ln65_9_fu_394    |    0    |    2    |
|          |    or_ln65_6_fu_430    |    0    |    2    |
|          |    or_ln65_5_fu_466    |    0    |    2    |
|          |    or_ln65_8_fu_524    |    0    |    2    |
|          |    or_ln65_10_fu_529   |    0    |    2    |
|          |    or_ln65_11_fu_535   |    0    |    2    |
|          |    or_ln65_12_fu_540   |    0    |    2    |
|    or    |    or_ln65_7_fu_554    |    0    |    2    |
|          |    or_ln65_16_fu_558   |    0    |    2    |
|          |    or_ln65_17_fu_588   |    0    |    2    |
|          |    or_ln65_18_fu_594   |    0    |    2    |
|          |       idx_fu_599       |    0    |    2    |
|          |     or_ln70_fu_663     |    0    |    2    |
|          |    or_ln70_1_fu_699    |    0    |    2    |
|          |    or_ln70_2_fu_735    |    0    |    2    |
|          |    or_ln70_3_fu_771    |    0    |    2    |
|          |    or_ln70_4_fu_807    |    0    |    2    |
|          |    or_ln70_5_fu_843    |    0    |    2    |
|          |    or_ln70_6_fu_879    |    0    |    2    |
|          |    or_ln70_7_fu_915    |    0    |    2    |
|          |    or_ln70_8_fu_951    |    0    |    2    |
|          |    or_ln70_9_fu_987    |    0    |    2    |
|          |   or_ln70_10_fu_1023   |    0    |    2    |
|----------|------------------------|---------|---------|
|          |     and_ln65_fu_212    |    0    |    2    |
|          |    and_ln65_2_fu_216   |    0    |    2    |
|          |    and_ln65_3_fu_263   |    0    |    2    |
|          |    and_ln65_4_fu_267   |    0    |    2    |
|          |    and_ln65_7_fu_355   |    0    |    2    |
|          |    and_ln65_9_fu_359   |    0    |    2    |
|          |     and_ln65_fu_446    |    0    |    2    |
|    and   |   and_ln65_10_fu_452   |    0    |    2    |
|          |    and_ln65_1_fu_458   |    0    |    2    |
|          |    and_ln65_8_fu_462   |    0    |    2    |
|          |     and_ln65_fu_512    |    0    |    2    |
|          |   and_ln65_11_fu_518   |    0    |    2    |
|          |    and_ln65_5_fu_546   |    0    |    2    |
|          |    and_ln65_6_fu_550   |    0    |    2    |
|          |     and_ln65_fu_576    |    0    |    2    |
|          |   and_ln65_12_fu_582   |    0    |    2    |
|----------|------------------------|---------|---------|
|          |     xor_ln65_fu_434    |    0    |    2    |
|          |     xor_ln65_fu_440    |    0    |    2    |
|    xor   |     xor_ln65_fu_500    |    0    |    2    |
|          |     xor_ln65_fu_506    |    0    |    2    |
|          |     xor_ln65_fu_564    |    0    |    2    |
|          |     xor_ln65_fu_570    |    0    |    2    |
|----------|------------------------|---------|---------|
|          |  d_read_15_read_fu_66  |    0    |    0    |
|          |   d_read_7_read_fu_72  |    0    |    0    |
|          |   d_read_6_read_fu_78  |    0    |    0    |
|   read   |   d_read_5_read_fu_84  |    0    |    0    |
|          |   d_read_4_read_fu_90  |    0    |    0    |
|          |   d_read_2_read_fu_96  |    0    |    0    |
|          |  d_read_3_read_fu_102  |    0    |    0    |
|          |  d_read_1_read_fu_108  |    0    |    0    |
|----------|------------------------|---------|---------|
|   fcmp   |       grp_fu_114       |    0    |    0    |
|          |       grp_fu_120       |    0    |    0    |
|----------|------------------------|---------|---------|
|          |       tmp_fu_144       |    0    |    0    |
|          |      tmp_25_fu_180     |    0    |    0    |
|          |      tmp_28_fu_225     |    0    |    0    |
|partselect|      tmp_31_fu_276     |    0    |    0    |
|          |      tmp_34_fu_323     |    0    |    0    |
|          |      tmp_38_fu_368     |    0    |    0    |
|          |      tmp_37_fu_404     |    0    |    0    |
|          |      tmp_39_fu_474     |    0    |    0    |
|----------|------------------------|---------|---------|
|          |    trunc_ln65_fu_154   |    0    |    0    |
|          |   trunc_ln65_1_fu_190  |    0    |    0    |
|          |   trunc_ln65_2_fu_235  |    0    |    0    |
|          |   trunc_ln65_3_fu_286  |    0    |    0    |
|          |   trunc_ln65_4_fu_333  |    0    |    0    |
|          |   trunc_ln65_6_fu_378  |    0    |    0    |
|          |   trunc_ln65_5_fu_414  |    0    |    0    |
|          |   trunc_ln65_7_fu_484  |    0    |    0    |
|   trunc  |    trunc_ln46_fu_651   |    0    |    0    |
|          |   trunc_ln46_1_fu_687  |    0    |    0    |
|          |   trunc_ln46_2_fu_723  |    0    |    0    |
|          |   trunc_ln46_3_fu_795  |    0    |    0    |
|          |   trunc_ln46_4_fu_831  |    0    |    0    |
|          |   trunc_ln46_5_fu_867  |    0    |    0    |
|          |   trunc_ln46_6_fu_903  |    0    |    0    |
|          |   trunc_ln46_7_fu_939  |    0    |    0    |
|          |   trunc_ln46_8_fu_975  |    0    |    0    |
|          |  trunc_ln46_9_fu_1011  |    0    |    0    |
|----------|------------------------|---------|---------|
|          |    zext_ln70_fu_604    |    0    |    0    |
|          |   zext_ln70_1_fu_618   |    0    |    0    |
|          |   zext_ln70_2_fu_640   |    0    |    0    |
|          |   zext_ln70_3_fu_676   |    0    |    0    |
|          |   zext_ln70_4_fu_712   |    0    |    0    |
|          |   zext_ln70_5_fu_748   |    0    |    0    |
|   zext   |   zext_ln70_6_fu_784   |    0    |    0    |
|          |   zext_ln70_7_fu_820   |    0    |    0    |
|          |   zext_ln70_8_fu_856   |    0    |    0    |
|          |   zext_ln70_9_fu_892   |    0    |    0    |
|          |   zext_ln70_10_fu_928  |    0    |    0    |
|          |   zext_ln70_11_fu_964  |    0    |    0    |
|          |  zext_ln70_12_fu_1000  |    0    |    0    |
|          |    zext_ln75_fu_1036   |    0    |    0    |
|----------|------------------------|---------|---------|
|          |    sext_ln46_fu_614    |    0    |    0    |
|   sext   |   sext_ln46_1_fu_629   |    0    |    0    |
|          |   sext_ln46_2_fu_759   |    0    |    0    |
|----------|------------------------|---------|---------|
|          |      tmp_40_fu_655     |    0    |    0    |
|          |      tmp_41_fu_691     |    0    |    0    |
|          |      tmp_42_fu_727     |    0    |    0    |
|          |      tmp_43_fu_763     |    0    |    0    |
|          |      tmp_44_fu_799     |    0    |    0    |
| bitselect|      tmp_45_fu_835     |    0    |    0    |
|          |      tmp_46_fu_871     |    0    |    0    |
|          |      tmp_47_fu_907     |    0    |    0    |
|          |      tmp_48_fu_943     |    0    |    0    |
|          |      tmp_49_fu_979     |    0    |    0    |
|          |     tmp_50_fu_1015     |    0    |    0    |
|----------|------------------------|---------|---------|
|   Total  |                        |    0    |   419   |
|----------|------------------------|---------|---------|

Memories:
N/A

* Register list:
+---------------------+--------+
|                     |   FF   |
+---------------------+--------+
| and_ln65_10_reg_1189|    1   |
|  d_read_15_reg_1047 |   32   |
|  d_read_1_reg_1194  |   32   |
|  d_read_2_reg_1147  |   32   |
|  d_read_3_reg_1173  |   32   |
|  d_read_4_reg_1125  |   32   |
|  d_read_5_reg_1103  |   32   |
|  d_read_6_reg_1081  |   32   |
|  d_read_7_reg_1059  |   32   |
|icmp_ln65_10_reg_1179|    1   |
|icmp_ln65_11_reg_1184|    1   |
|icmp_ln65_12_reg_1158|    1   |
|icmp_ln65_13_reg_1163|    1   |
|icmp_ln65_14_reg_1200|    1   |
|icmp_ln65_15_reg_1205|    1   |
|     idx_reg_1215    |    1   |
| or_ln65_12_reg_1210 |    1   |
| or_ln65_13_reg_1098 |    1   |
| or_ln65_15_reg_1120 |    1   |
|  or_ln65_1_reg_1075 |    1   |
|  or_ln65_2_reg_1092 |    1   |
|  or_ln65_3_reg_1114 |    1   |
|  or_ln65_4_reg_1141 |    1   |
|  or_ln65_9_reg_1168 |    1   |
|   or_ln65_reg_1053  |    1   |
|   tmp_24_reg_1070   |    1   |
|   tmp_27_reg_1087   |    1   |
|   tmp_30_reg_1109   |    1   |
|   tmp_32_reg_1131   |    1   |
|   tmp_33_reg_1136   |    1   |
|   tmp_35_reg_1153   |    1   |
|    tmp_s_reg_1065   |    1   |
+---------------------+--------+
|        Total        |   280  |
+---------------------+--------+

* Multiplexer (MUX) list: 
|------------|------|------|------|--------||---------||---------|
|    Comp    |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------|------|------|------|--------||---------||---------|
| grp_fu_114 |  p0  |  16  |  32  |   512  ||    65   |
| grp_fu_120 |  p0  |  16  |  32  |   512  ||    65   |
|------------|------|------|------|--------||---------||---------|
|    Total   |      |      |      |  1024  ||  4.128  ||   130   |
|------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   419  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    4   |    -   |   130  |
|  Register |    -   |   280  |    -   |
+-----------+--------+--------+--------+
|   Total   |    4   |   280  |   549  |
+-----------+--------+--------+--------+
