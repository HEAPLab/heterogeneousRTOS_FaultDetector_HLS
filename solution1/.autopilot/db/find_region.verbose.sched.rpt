

================================================================
== Vitis HLS Report for 'find_region'
================================================================
* Date:           Wed Sep 21 00:46:49 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        detector_solid
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  20.00 ns|  14.098 ns|     5.40 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        9|        9|  0.180 us|  0.180 us|    8|    8|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 8, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.43>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%d_read_15 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 11 'read' 'd_read_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%bitcast_ln65 = bitcast i32 %d_read_15" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 12 'bitcast' 'bitcast_ln65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 13 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i32 %bitcast_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 14 'trunc' 'trunc_ln65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.55ns)   --->   "%icmp_ln65 = icmp_ne  i8 %tmp, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 15 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (2.44ns)   --->   "%icmp_ln65_1 = icmp_eq  i23 %trunc_ln65, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 16 'icmp' 'icmp_ln65_1' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.97ns)   --->   "%or_ln65 = or i1 %icmp_ln65_1, i1 %icmp_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 17 'or' 'or_ln65' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [2/2] (5.43ns)   --->   "%tmp_s = fcmp_olt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 18 'fcmp' 'tmp_s' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [2/2] (5.43ns)   --->   "%tmp_24 = fcmp_ogt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 19 'fcmp' 'tmp_24' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.43>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%d_read_7 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_23" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 20 'read' 'd_read_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/2] (5.43ns)   --->   "%tmp_s = fcmp_olt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 21 'fcmp' 'tmp_s' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/2] (5.43ns)   --->   "%tmp_24 = fcmp_ogt  i32 %d_read_15, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 22 'fcmp' 'tmp_24' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%bitcast_ln65_1 = bitcast i32 %d_read_7" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 23 'bitcast' 'bitcast_ln65_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_1, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 24 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln65_1 = trunc i32 %bitcast_ln65_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 25 'trunc' 'trunc_ln65_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.55ns)   --->   "%icmp_ln65_2 = icmp_ne  i8 %tmp_25, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 26 'icmp' 'icmp_ln65_2' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (2.44ns)   --->   "%icmp_ln65_3 = icmp_eq  i23 %trunc_ln65_1, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 27 'icmp' 'icmp_ln65_3' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.97ns)   --->   "%or_ln65_1 = or i1 %icmp_ln65_3, i1 %icmp_ln65_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 28 'or' 'or_ln65_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [2/2] (5.43ns)   --->   "%tmp_26 = fcmp_olt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 29 'fcmp' 'tmp_26' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [2/2] (5.43ns)   --->   "%tmp_27 = fcmp_ogt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 30 'fcmp' 'tmp_27' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.40>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%d_read_6 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_24" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 31 'read' 'd_read_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_13)   --->   "%and_ln65 = and i1 %or_ln65, i1 %tmp_s" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 32 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/2] (5.43ns)   --->   "%tmp_26 = fcmp_olt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 33 'fcmp' 'tmp_26' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_13)   --->   "%and_ln65_2 = and i1 %or_ln65_1, i1 %tmp_26" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 34 'and' 'and_ln65_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/2] (5.43ns)   --->   "%tmp_27 = fcmp_ogt  i32 %d_read_7, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 35 'fcmp' 'tmp_27' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%bitcast_ln65_2 = bitcast i32 %d_read_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 36 'bitcast' 'bitcast_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_28 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_2, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 37 'partselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln65_2 = trunc i32 %bitcast_ln65_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 38 'trunc' 'trunc_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.55ns)   --->   "%icmp_ln65_4 = icmp_ne  i8 %tmp_28, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 39 'icmp' 'icmp_ln65_4' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (2.44ns)   --->   "%icmp_ln65_5 = icmp_eq  i23 %trunc_ln65_2, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 40 'icmp' 'icmp_ln65_5' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.97ns)   --->   "%or_ln65_2 = or i1 %icmp_ln65_5, i1 %icmp_ln65_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 41 'or' 'or_ln65_2' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [2/2] (5.43ns)   --->   "%tmp_29 = fcmp_olt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 42 'fcmp' 'tmp_29' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [2/2] (5.43ns)   --->   "%tmp_30 = fcmp_ogt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 43 'fcmp' 'tmp_30' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_13 = or i1 %and_ln65_2, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 44 'or' 'or_ln65_13' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.40>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%d_read_5 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_25" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 45 'read' 'd_read_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_15)   --->   "%and_ln65_3 = and i1 %or_ln65_1, i1 %tmp_27" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 46 'and' 'and_ln65_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/2] (5.43ns)   --->   "%tmp_29 = fcmp_olt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 47 'fcmp' 'tmp_29' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_15)   --->   "%and_ln65_4 = and i1 %or_ln65_2, i1 %tmp_29" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 48 'and' 'and_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/2] (5.43ns)   --->   "%tmp_30 = fcmp_ogt  i32 %d_read_6, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 49 'fcmp' 'tmp_30' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%bitcast_ln65_3 = bitcast i32 %d_read_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 50 'bitcast' 'bitcast_ln65_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_31 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_3, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 51 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln65_3 = trunc i32 %bitcast_ln65_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 52 'trunc' 'trunc_ln65_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (1.55ns)   --->   "%icmp_ln65_6 = icmp_ne  i8 %tmp_31, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 53 'icmp' 'icmp_ln65_6' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (2.44ns)   --->   "%icmp_ln65_7 = icmp_eq  i23 %trunc_ln65_3, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 54 'icmp' 'icmp_ln65_7' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.97ns)   --->   "%or_ln65_3 = or i1 %icmp_ln65_7, i1 %icmp_ln65_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 55 'or' 'or_ln65_3' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [2/2] (5.43ns)   --->   "%tmp_32 = fcmp_olt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 56 'fcmp' 'tmp_32' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [2/2] (5.43ns)   --->   "%tmp_33 = fcmp_ogt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 57 'fcmp' 'tmp_33' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_15)   --->   "%or_ln65_14 = or i1 %and_ln65_4, i1 %and_ln65_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 58 'or' 'or_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_15 = or i1 %or_ln65_14, i1 %or_ln65_13" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 59 'or' 'or_ln65_15' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.43>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%d_read_4 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_26" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 60 'read' 'd_read_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/2] (5.43ns)   --->   "%tmp_32 = fcmp_olt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 61 'fcmp' 'tmp_32' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/2] (5.43ns)   --->   "%tmp_33 = fcmp_ogt  i32 %d_read_5, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 62 'fcmp' 'tmp_33' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%bitcast_ln65_4 = bitcast i32 %d_read_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 63 'bitcast' 'bitcast_ln65_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_34 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_4, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 64 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln65_4 = trunc i32 %bitcast_ln65_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 65 'trunc' 'trunc_ln65_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (1.55ns)   --->   "%icmp_ln65_8 = icmp_ne  i8 %tmp_34, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 66 'icmp' 'icmp_ln65_8' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (2.44ns)   --->   "%icmp_ln65_9 = icmp_eq  i23 %trunc_ln65_4, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 67 'icmp' 'icmp_ln65_9' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.97ns)   --->   "%or_ln65_4 = or i1 %icmp_ln65_9, i1 %icmp_ln65_8" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 68 'or' 'or_ln65_4' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [2/2] (5.43ns)   --->   "%tmp_35 = fcmp_olt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 69 'fcmp' 'tmp_35' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [2/2] (5.43ns)   --->   "%tmp_36 = fcmp_ogt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 70 'fcmp' 'tmp_36' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.40>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%d_read_2 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_28" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 71 'read' 'd_read_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_9)   --->   "%and_ln65_7 = and i1 %or_ln65_3, i1 %tmp_33" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 72 'and' 'and_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/2] (5.43ns)   --->   "%tmp_35 = fcmp_olt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 73 'fcmp' 'tmp_35' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/2] (5.43ns)   --->   "%tmp_36 = fcmp_ogt  i32 %d_read_4, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 74 'fcmp' 'tmp_36' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_9)   --->   "%and_ln65_9 = and i1 %or_ln65_4, i1 %tmp_36" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 75 'and' 'and_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%bitcast_ln65_6 = bitcast i32 %d_read_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 76 'bitcast' 'bitcast_ln65_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_38 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_6, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 77 'partselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln65_6 = trunc i32 %bitcast_ln65_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 78 'trunc' 'trunc_ln65_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (1.55ns)   --->   "%icmp_ln65_12 = icmp_ne  i8 %tmp_38, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 79 'icmp' 'icmp_ln65_12' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (2.44ns)   --->   "%icmp_ln65_13 = icmp_eq  i23 %trunc_ln65_6, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 80 'icmp' 'icmp_ln65_13' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 81 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 82 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_9 = or i1 %and_ln65_7, i1 %and_ln65_9" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 83 'or' 'or_ln65_9' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.40>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%d_read_3 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_27" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 84 'read' 'd_read_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%bitcast_ln65_5 = bitcast i32 %d_read_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 85 'bitcast' 'bitcast_ln65_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_37 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_5, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 86 'partselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln65_5 = trunc i32 %bitcast_ln65_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 87 'trunc' 'trunc_ln65_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (1.55ns)   --->   "%icmp_ln65_10 = icmp_ne  i8 %tmp_37, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 88 'icmp' 'icmp_ln65_10' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 89 [1/1] (2.44ns)   --->   "%icmp_ln65_11 = icmp_eq  i23 %trunc_ln65_5, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 89 'icmp' 'icmp_ln65_11' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%or_ln65_6 = or i1 %icmp_ln65_13, i1 %icmp_ln65_12" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 90 'or' 'or_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 91 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_2, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 92 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 93 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 94 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_10)   --->   "%and_ln65 = and i1 %xor_ln65, i1 %xor_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 95 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 96 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln65_10 = and i1 %or_ln65_6, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 96 'and' 'and_ln65_10' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 97 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 98 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 98 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.38>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%d_read_1 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %d_read_29" [detector_solid/abs_solid_detector.cpp:45]   --->   Operation 99 'read' 'd_read_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%and_ln65_1 = and i1 %or_ln65, i1 %tmp_24" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 100 'and' 'and_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%and_ln65_8 = and i1 %or_ln65_4, i1 %tmp_35" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 101 'and' 'and_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%or_ln65_5 = or i1 %icmp_ln65_11, i1 %icmp_ln65_10" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 102 'or' 'or_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%bitcast_ln65_7 = bitcast i32 %d_read_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 103 'bitcast' 'bitcast_ln65_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_39 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_7, i32 23, i32 30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 104 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln65_7 = trunc i32 %bitcast_ln65_7" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 105 'trunc' 'trunc_ln65_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (1.55ns)   --->   "%icmp_ln65_14 = icmp_ne  i8 %tmp_39, i8 255" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 106 'icmp' 'icmp_ln65_14' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 107 [1/1] (2.44ns)   --->   "%icmp_ln65_15 = icmp_eq  i23 %trunc_ln65_7, i23 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 107 'icmp' 'icmp_ln65_15' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 108 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 108 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 109 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_3, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 109 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 110 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 111 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%and_ln65 = and i1 %xor_ln65, i1 %xor_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 112 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_8)   --->   "%and_ln65_11 = and i1 %or_ln65_5, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 113 'and' 'and_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_8 = or i1 %and_ln65_11, i1 %and_ln65_10" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 114 'or' 'or_ln65_8' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%or_ln65_10 = or i1 %and_ln65_8, i1 %and_ln65_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 115 'or' 'or_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_12)   --->   "%or_ln65_11 = or i1 %or_ln65_10, i1 %or_ln65_9" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 116 'or' 'or_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 117 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_12 = or i1 %or_ln65_11, i1 %or_ln65_8" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 117 'or' 'or_ln65_12' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 118 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 118 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 119 [2/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 119 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 8.36>
ST_9 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%and_ln65_5 = and i1 %or_ln65_2, i1 %tmp_30" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 120 'and' 'and_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%and_ln65_6 = and i1 %or_ln65_3, i1 %tmp_32" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 121 'and' 'and_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%or_ln65_7 = or i1 %icmp_ln65_15, i1 %icmp_ln65_14" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 122 'or' 'or_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%or_ln65_16 = or i1 %and_ln65_6, i1 %and_ln65_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 123 'or' 'or_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 124 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_uno  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 124 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/2] (5.43ns)   --->   "%fcmp_ln65 = fcmp_oeq  i32 %d_read_1, i32 0" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 125 'fcmp' 'fcmp_ln65' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 126 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%xor_ln65 = xor i1 %fcmp_ln65, i1 1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 127 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node and_ln65_12)   --->   "%and_ln65 = and i1 %xor_ln65, i1 %xor_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 128 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 129 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln65_12 = and i1 %or_ln65_7, i1 %and_ln65" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 129 'and' 'and_ln65_12' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node or_ln65_18)   --->   "%or_ln65_17 = or i1 %and_ln65_12, i1 %or_ln65_16" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 130 'or' 'or_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 131 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln65_18 = or i1 %or_ln65_17, i1 %or_ln65_15" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 131 'or' 'or_ln65_18' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 132 [1/1] (0.97ns) (out node of the LUT)   --->   "%idx = or i1 %or_ln65_18, i1 %or_ln65_12" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 132 'or' 'idx' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 14.0>
ST_10 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 133 'zext' 'zext_ln70' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 134 [1/1] (0.99ns)   --->   "%idx_1 = select i1 %idx, i2 3, i2 %zext_ln70" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 134 'select' 'idx_1' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%sext_ln46 = sext i2 %idx_1" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 135 'sext' 'sext_ln46' <Predicate = (idx)> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln70_1 = zext i2 %idx_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 136 'zext' 'zext_ln70_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.99ns)   --->   "%idx_2 = select i1 %idx, i3 %sext_ln46, i3 %zext_ln70_1" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 137 'select' 'idx_2' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%sext_ln46_1 = sext i3 %idx_2" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 138 'sext' 'sext_ln46_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node idx_3)   --->   "%select_ln70 = select i1 %idx, i3 4, i3 %zext_ln70_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 139 'select' 'select_ln70' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node idx_3)   --->   "%zext_ln70_2 = zext i3 %select_ln70" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 140 'zext' 'zext_ln70_2' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_3 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_2" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 141 'select' 'idx_3' <Predicate = (!idx)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%trunc_ln46 = trunc i4 %idx_3" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 142 'trunc' 'trunc_ln46' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%tmp_40 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_3, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 143 'bitselect' 'tmp_40' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%or_ln70 = or i1 %tmp_40, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 144 'or' 'or_ln70' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%select_ln70_1 = select i1 %or_ln70, i3 5, i3 %trunc_ln46" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 145 'select' 'select_ln70_1' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node idx_4)   --->   "%zext_ln70_3 = zext i3 %select_ln70_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 146 'zext' 'zext_ln70_3' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 147 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_4 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_3" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 147 'select' 'idx_4' <Predicate = (!idx)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%trunc_ln46_1 = trunc i4 %idx_4" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 148 'trunc' 'trunc_ln46_1' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%tmp_41 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_4, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 149 'bitselect' 'tmp_41' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%or_ln70_1 = or i1 %tmp_41, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 150 'or' 'or_ln70_1' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%select_ln70_2 = select i1 %or_ln70_1, i3 6, i3 %trunc_ln46_1" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 151 'select' 'select_ln70_2' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node idx_5)   --->   "%zext_ln70_4 = zext i3 %select_ln70_2" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 152 'zext' 'zext_ln70_4' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 153 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_5 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_4" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 153 'select' 'idx_5' <Predicate = (!idx)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%trunc_ln46_2 = trunc i4 %idx_5" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 154 'trunc' 'trunc_ln46_2' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%tmp_42 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_5, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 155 'bitselect' 'tmp_42' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%or_ln70_2 = or i1 %tmp_42, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 156 'or' 'or_ln70_2' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%select_ln70_3 = select i1 %or_ln70_2, i3 7, i3 %trunc_ln46_2" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 157 'select' 'select_ln70_3' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node idx_6)   --->   "%zext_ln70_5 = zext i3 %select_ln70_3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 158 'zext' 'zext_ln70_5' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 159 [1/1] (0.98ns) (out node of the LUT)   --->   "%idx_6 = select i1 %idx, i4 %sext_ln46_1, i4 %zext_ln70_5" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 159 'select' 'idx_6' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "%sext_ln46_2 = sext i4 %idx_6" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 160 'sext' 'sext_ln46_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%tmp_43 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %idx_6, i32 3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 161 'bitselect' 'tmp_43' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%or_ln70_3 = or i1 %tmp_43, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 162 'or' 'or_ln70_3' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%select_ln70_4 = select i1 %or_ln70_3, i4 8, i4 %idx_6" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 163 'select' 'select_ln70_4' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node idx_7)   --->   "%zext_ln70_6 = zext i4 %select_ln70_4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 164 'zext' 'zext_ln70_6' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 165 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_7 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_6" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 165 'select' 'idx_7' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%trunc_ln46_3 = trunc i5 %idx_7" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 166 'trunc' 'trunc_ln46_3' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%tmp_44 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_7, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 167 'bitselect' 'tmp_44' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%or_ln70_4 = or i1 %tmp_44, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 168 'or' 'or_ln70_4' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%select_ln70_5 = select i1 %or_ln70_4, i4 9, i4 %trunc_ln46_3" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 169 'select' 'select_ln70_5' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node idx_8)   --->   "%zext_ln70_7 = zext i4 %select_ln70_5" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 170 'zext' 'zext_ln70_7' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 171 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_8 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_7" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 171 'select' 'idx_8' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%trunc_ln46_4 = trunc i5 %idx_8" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 172 'trunc' 'trunc_ln46_4' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%tmp_45 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_8, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 173 'bitselect' 'tmp_45' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%or_ln70_5 = or i1 %tmp_45, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 174 'or' 'or_ln70_5' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%select_ln70_6 = select i1 %or_ln70_5, i4 10, i4 %trunc_ln46_4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 175 'select' 'select_ln70_6' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node idx_9)   --->   "%zext_ln70_8 = zext i4 %select_ln70_6" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 176 'zext' 'zext_ln70_8' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 177 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_9 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_8" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 177 'select' 'idx_9' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%trunc_ln46_5 = trunc i5 %idx_9" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 178 'trunc' 'trunc_ln46_5' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%tmp_46 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_9, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 179 'bitselect' 'tmp_46' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%or_ln70_6 = or i1 %tmp_46, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 180 'or' 'or_ln70_6' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%select_ln70_7 = select i1 %or_ln70_6, i4 11, i4 %trunc_ln46_5" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 181 'select' 'select_ln70_7' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node idx_10)   --->   "%zext_ln70_9 = zext i4 %select_ln70_7" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 182 'zext' 'zext_ln70_9' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_10 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_9" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 183 'select' 'idx_10' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%trunc_ln46_6 = trunc i5 %idx_10" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 184 'trunc' 'trunc_ln46_6' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%tmp_47 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_10, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 185 'bitselect' 'tmp_47' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%or_ln70_7 = or i1 %tmp_47, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 186 'or' 'or_ln70_7' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%select_ln70_8 = select i1 %or_ln70_7, i4 12, i4 %trunc_ln46_6" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 187 'select' 'select_ln70_8' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node idx_11)   --->   "%zext_ln70_10 = zext i4 %select_ln70_8" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 188 'zext' 'zext_ln70_10' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 189 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_11 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_10" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 189 'select' 'idx_11' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%trunc_ln46_7 = trunc i5 %idx_11" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 190 'trunc' 'trunc_ln46_7' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%tmp_48 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_11, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 191 'bitselect' 'tmp_48' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%or_ln70_8 = or i1 %tmp_48, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 192 'or' 'or_ln70_8' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%select_ln70_9 = select i1 %or_ln70_8, i4 13, i4 %trunc_ln46_7" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 193 'select' 'select_ln70_9' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node idx_12)   --->   "%zext_ln70_11 = zext i4 %select_ln70_9" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 194 'zext' 'zext_ln70_11' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 195 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_12 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_11" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 195 'select' 'idx_12' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%trunc_ln46_8 = trunc i5 %idx_12" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 196 'trunc' 'trunc_ln46_8' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%tmp_49 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_12, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 197 'bitselect' 'tmp_49' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%or_ln70_9 = or i1 %tmp_49, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 198 'or' 'or_ln70_9' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%select_ln70_10 = select i1 %or_ln70_9, i4 14, i4 %trunc_ln46_8" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 199 'select' 'select_ln70_10' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node idx_13)   --->   "%zext_ln70_12 = zext i4 %select_ln70_10" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 200 'zext' 'zext_ln70_12' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 201 [1/1] (1.02ns) (out node of the LUT)   --->   "%idx_13 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln70_12" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 201 'select' 'idx_13' <Predicate = (!idx)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%trunc_ln46_9 = trunc i5 %idx_13" [detector_solid/abs_solid_detector.cpp:46]   --->   Operation 202 'trunc' 'trunc_ln46_9' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%tmp_50 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %idx_13, i32 4" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 203 'bitselect' 'tmp_50' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%or_ln70_10 = or i1 %tmp_50, i1 %idx" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 204 'or' 'or_ln70_10' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%select_ln70_11 = select i1 %or_ln70_10, i4 15, i4 %trunc_ln46_9" [detector_solid/abs_solid_detector.cpp:70]   --->   Operation 205 'select' 'select_ln70_11' <Predicate = (!idx)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%zext_ln75 = zext i4 %select_ln70_11" [detector_solid/abs_solid_detector.cpp:75]   --->   Operation 206 'zext' 'zext_ln75' <Predicate = (!idx)> <Delay = 0.00>
ST_10 : Operation 207 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln65 = select i1 %idx, i5 %sext_ln46_2, i5 %zext_ln75" [detector_solid/abs_solid_detector.cpp:65]   --->   Operation 207 'select' 'select_ln65' <Predicate = true> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 208 [1/1] (0.00ns)   --->   "%ret_ln75 = ret i5 %select_ln65" [detector_solid/abs_solid_detector.cpp:75]   --->   Operation 208 'ret' 'ret_ln75' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 5.4ns.

 <State 1>: 5.43ns
The critical path consists of the following:
	wire read operation ('d', detector_solid/abs_solid_detector.cpp:45) on port 'd_read' (detector_solid/abs_solid_detector.cpp:45) [16]  (0 ns)
	'fcmp' operation ('tmp_s', detector_solid/abs_solid_detector.cpp:65) [23]  (5.43 ns)

 <State 2>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', detector_solid/abs_solid_detector.cpp:65) [23]  (5.43 ns)

 <State 3>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_26', detector_solid/abs_solid_detector.cpp:65) [33]  (5.43 ns)
	'and' operation ('and_ln65_2', detector_solid/abs_solid_detector.cpp:65) [34]  (0 ns)
	'or' operation ('or_ln65_13', detector_solid/abs_solid_detector.cpp:65) [102]  (0.978 ns)

 <State 4>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_29', detector_solid/abs_solid_detector.cpp:65) [43]  (5.43 ns)
	'and' operation ('and_ln65_4', detector_solid/abs_solid_detector.cpp:65) [44]  (0 ns)
	'or' operation ('or_ln65_14', detector_solid/abs_solid_detector.cpp:65) [103]  (0 ns)
	'or' operation ('or_ln65_15', detector_solid/abs_solid_detector.cpp:65) [104]  (0.978 ns)

 <State 5>: 5.43ns
The critical path consists of the following:
	'fcmp' operation ('tmp_32', detector_solid/abs_solid_detector.cpp:65) [53]  (5.43 ns)

 <State 6>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_36', detector_solid/abs_solid_detector.cpp:65) [65]  (5.43 ns)
	'and' operation ('and_ln65_9', detector_solid/abs_solid_detector.cpp:65) [66]  (0 ns)
	'or' operation ('or_ln65_9', detector_solid/abs_solid_detector.cpp:65) [98]  (0.978 ns)

 <State 7>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('fcmp_ln65', detector_solid/abs_solid_detector.cpp:65) [85]  (5.43 ns)
	'xor' operation ('xor_ln65', detector_solid/abs_solid_detector.cpp:65) [87]  (0 ns)
	'and' operation ('and_ln65', detector_solid/abs_solid_detector.cpp:65) [89]  (0 ns)
	'and' operation ('and_ln65_10', detector_solid/abs_solid_detector.cpp:65) [90]  (0.978 ns)

 <State 8>: 7.39ns
The critical path consists of the following:
	'fcmp' operation ('fcmp_ln65', detector_solid/abs_solid_detector.cpp:65) [91]  (5.43 ns)
	'xor' operation ('xor_ln65', detector_solid/abs_solid_detector.cpp:65) [93]  (0 ns)
	'and' operation ('and_ln65', detector_solid/abs_solid_detector.cpp:65) [95]  (0 ns)
	'and' operation ('and_ln65_11', detector_solid/abs_solid_detector.cpp:65) [96]  (0 ns)
	'or' operation ('or_ln65_8', detector_solid/abs_solid_detector.cpp:65) [97]  (0.978 ns)
	'or' operation ('or_ln65_12', detector_solid/abs_solid_detector.cpp:65) [101]  (0.978 ns)

 <State 9>: 8.37ns
The critical path consists of the following:
	'fcmp' operation ('fcmp_ln65', detector_solid/abs_solid_detector.cpp:65) [106]  (5.43 ns)
	'xor' operation ('xor_ln65', detector_solid/abs_solid_detector.cpp:65) [108]  (0 ns)
	'and' operation ('and_ln65', detector_solid/abs_solid_detector.cpp:65) [110]  (0 ns)
	'and' operation ('and_ln65_12', detector_solid/abs_solid_detector.cpp:65) [111]  (0.978 ns)
	'or' operation ('or_ln65_17', detector_solid/abs_solid_detector.cpp:65) [112]  (0 ns)
	'or' operation ('or_ln65_18', detector_solid/abs_solid_detector.cpp:65) [113]  (0.978 ns)
	'or' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [114]  (0.978 ns)

 <State 10>: 14.1ns
The critical path consists of the following:
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [116]  (0.993 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [119]  (0.993 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [123]  (0.98 ns)
	'select' operation ('select_ln70_1', detector_solid/abs_solid_detector.cpp:70) [127]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [129]  (0.98 ns)
	'select' operation ('select_ln70_2', detector_solid/abs_solid_detector.cpp:70) [133]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [135]  (0.98 ns)
	'select' operation ('select_ln70_3', detector_solid/abs_solid_detector.cpp:70) [139]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [141]  (0.98 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [147]  (1.02 ns)
	'select' operation ('select_ln70_5', detector_solid/abs_solid_detector.cpp:70) [151]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [153]  (1.02 ns)
	'select' operation ('select_ln70_6', detector_solid/abs_solid_detector.cpp:70) [157]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [159]  (1.02 ns)
	'select' operation ('select_ln70_7', detector_solid/abs_solid_detector.cpp:70) [163]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [165]  (1.02 ns)
	'select' operation ('select_ln70_8', detector_solid/abs_solid_detector.cpp:70) [169]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [171]  (1.02 ns)
	'select' operation ('select_ln70_9', detector_solid/abs_solid_detector.cpp:70) [175]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [177]  (1.02 ns)
	'select' operation ('select_ln70_10', detector_solid/abs_solid_detector.cpp:70) [181]  (0 ns)
	'select' operation ('idx', detector_solid/abs_solid_detector.cpp:65) [183]  (1.02 ns)
	'select' operation ('select_ln70_11', detector_solid/abs_solid_detector.cpp:70) [187]  (0 ns)
	'select' operation ('select_ln65', detector_solid/abs_solid_detector.cpp:65) [189]  (1.02 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
