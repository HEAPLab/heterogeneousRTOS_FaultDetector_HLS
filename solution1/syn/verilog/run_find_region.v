// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_find_region (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_read,
        d_read_23,
        d_read_24,
        d_read_25,
        d_read_26,
        d_read_27,
        d_read_28,
        d_read_29,
        ap_return
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] d_read;
input  [31:0] d_read_23;
input  [31:0] d_read_24;
input  [31:0] d_read_25;
input  [31:0] d_read_26;
input  [31:0] d_read_27;
input  [31:0] d_read_28;
input  [31:0] d_read_29;
output  [4:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] or_ln83_fu_240_p2;
reg   [0:0] or_ln83_reg_1177;
wire   [0:0] or_ln83_1_fu_276_p2;
reg   [0:0] or_ln83_1_reg_1183;
wire   [0:0] or_ln83_2_fu_312_p2;
reg   [0:0] or_ln83_2_reg_1189;
wire   [0:0] or_ln83_3_fu_348_p2;
reg   [0:0] or_ln83_3_reg_1195;
wire   [0:0] or_ln83_4_fu_384_p2;
reg   [0:0] or_ln83_4_reg_1201;
wire   [0:0] icmp_ln83_10_fu_408_p2;
reg   [0:0] icmp_ln83_10_reg_1207;
wire   [0:0] icmp_ln83_11_fu_414_p2;
reg   [0:0] icmp_ln83_11_reg_1212;
wire   [0:0] icmp_ln83_12_fu_438_p2;
reg   [0:0] icmp_ln83_12_reg_1217;
wire   [0:0] icmp_ln83_13_fu_444_p2;
reg   [0:0] icmp_ln83_13_reg_1222;
wire   [0:0] icmp_ln83_14_fu_468_p2;
reg   [0:0] icmp_ln83_14_reg_1227;
wire   [0:0] icmp_ln83_15_fu_474_p2;
reg   [0:0] icmp_ln83_15_reg_1232;
wire   [0:0] idx_fu_680_p2;
reg   [0:0] idx_reg_1237;
wire    ap_CS_fsm_state2;
wire   [31:0] bitcast_ln83_fu_210_p1;
wire   [7:0] tmp_fu_214_p4;
wire   [22:0] trunc_ln83_fu_224_p1;
wire   [0:0] icmp_ln83_1_fu_234_p2;
wire   [0:0] icmp_ln83_fu_228_p2;
wire   [31:0] bitcast_ln83_1_fu_246_p1;
wire   [7:0] tmp_24_fu_250_p4;
wire   [22:0] trunc_ln83_1_fu_260_p1;
wire   [0:0] icmp_ln83_3_fu_270_p2;
wire   [0:0] icmp_ln83_2_fu_264_p2;
wire   [31:0] bitcast_ln83_2_fu_282_p1;
wire   [7:0] tmp_27_fu_286_p4;
wire   [22:0] trunc_ln83_2_fu_296_p1;
wire   [0:0] icmp_ln83_5_fu_306_p2;
wire   [0:0] icmp_ln83_4_fu_300_p2;
wire   [31:0] bitcast_ln83_3_fu_318_p1;
wire   [7:0] tmp_30_fu_322_p4;
wire   [22:0] trunc_ln83_3_fu_332_p1;
wire   [0:0] icmp_ln83_7_fu_342_p2;
wire   [0:0] icmp_ln83_6_fu_336_p2;
wire   [31:0] bitcast_ln83_4_fu_354_p1;
wire   [7:0] tmp_33_fu_358_p4;
wire   [22:0] trunc_ln83_4_fu_368_p1;
wire   [0:0] icmp_ln83_9_fu_378_p2;
wire   [0:0] icmp_ln83_8_fu_372_p2;
wire   [31:0] bitcast_ln83_5_fu_390_p1;
wire   [7:0] tmp_36_fu_394_p4;
wire   [22:0] trunc_ln83_5_fu_404_p1;
wire   [31:0] bitcast_ln83_6_fu_420_p1;
wire   [7:0] tmp_37_fu_424_p4;
wire   [22:0] trunc_ln83_6_fu_434_p1;
wire   [31:0] bitcast_ln83_7_fu_450_p1;
wire   [7:0] tmp_38_fu_454_p4;
wire   [22:0] trunc_ln83_7_fu_464_p1;
wire   [0:0] grp_fu_114_p2;
wire   [0:0] grp_fu_120_p2;
wire   [0:0] grp_fu_126_p2;
wire   [0:0] grp_fu_132_p2;
wire   [0:0] grp_fu_138_p2;
wire   [0:0] grp_fu_144_p2;
wire   [0:0] grp_fu_150_p2;
wire   [0:0] grp_fu_156_p2;
wire   [0:0] grp_fu_162_p2;
wire   [0:0] grp_fu_168_p2;
wire   [0:0] grp_fu_174_p2;
wire   [0:0] grp_fu_180_p2;
wire   [0:0] xor_ln83_fu_542_p2;
wire   [0:0] xor_ln83_fu_548_p2;
wire   [0:0] or_ln83_6_fu_534_p2;
wire   [0:0] and_ln83_fu_554_p2;
wire   [0:0] grp_fu_186_p2;
wire   [0:0] grp_fu_192_p2;
wire   [0:0] xor_ln83_fu_566_p2;
wire   [0:0] xor_ln83_fu_572_p2;
wire   [0:0] or_ln83_5_fu_530_p2;
wire   [0:0] and_ln83_fu_578_p2;
wire   [0:0] and_ln83_11_fu_584_p2;
wire   [0:0] and_ln83_10_fu_560_p2;
wire   [0:0] and_ln83_7_fu_515_p2;
wire   [0:0] and_ln83_9_fu_525_p2;
wire   [0:0] and_ln83_8_fu_520_p2;
wire   [0:0] and_ln83_1_fu_485_p2;
wire   [0:0] or_ln83_10_fu_602_p2;
wire   [0:0] or_ln83_9_fu_596_p2;
wire   [0:0] or_ln83_11_fu_608_p2;
wire   [0:0] or_ln83_8_fu_590_p2;
wire   [0:0] and_ln83_2_fu_490_p2;
wire   [0:0] and_ln83_fu_480_p2;
wire   [0:0] and_ln83_4_fu_500_p2;
wire   [0:0] and_ln83_3_fu_495_p2;
wire   [0:0] or_ln83_14_fu_626_p2;
wire   [0:0] or_ln83_13_fu_620_p2;
wire   [0:0] and_ln83_6_fu_510_p2;
wire   [0:0] and_ln83_5_fu_505_p2;
wire   [0:0] grp_fu_198_p2;
wire   [0:0] grp_fu_204_p2;
wire   [0:0] xor_ln83_fu_644_p2;
wire   [0:0] xor_ln83_fu_650_p2;
wire   [0:0] or_ln83_7_fu_538_p2;
wire   [0:0] and_ln83_fu_656_p2;
wire   [0:0] and_ln83_12_fu_662_p2;
wire   [0:0] or_ln83_16_fu_638_p2;
wire   [0:0] or_ln83_17_fu_668_p2;
wire   [0:0] or_ln83_15_fu_632_p2;
wire   [0:0] or_ln83_18_fu_674_p2;
wire   [0:0] or_ln83_12_fu_614_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] zext_ln88_fu_686_p1;
wire  signed [1:0] idx_1_fu_689_p3;
wire  signed [2:0] sext_ln63_fu_696_p1;
wire   [2:0] zext_ln88_1_fu_700_p1;
wire   [2:0] idx_2_fu_704_p3;
wire   [2:0] select_ln88_fu_715_p3;
wire  signed [3:0] sext_ln63_1_fu_711_p1;
wire   [3:0] zext_ln88_2_fu_722_p1;
wire   [3:0] idx_3_fu_726_p3;
wire   [0:0] tmp_39_fu_737_p3;
wire   [0:0] or_ln88_fu_745_p2;
wire   [2:0] trunc_ln63_fu_733_p1;
wire   [2:0] select_ln88_1_fu_750_p3;
wire   [3:0] zext_ln88_3_fu_758_p1;
wire   [3:0] idx_4_fu_762_p3;
wire   [0:0] tmp_40_fu_773_p3;
wire   [0:0] or_ln88_1_fu_781_p2;
wire   [2:0] trunc_ln63_1_fu_769_p1;
wire   [2:0] select_ln88_2_fu_786_p3;
wire   [3:0] zext_ln88_4_fu_794_p1;
wire   [3:0] idx_5_fu_798_p3;
wire   [0:0] tmp_41_fu_809_p3;
wire   [0:0] or_ln88_2_fu_817_p2;
wire   [2:0] trunc_ln63_2_fu_805_p1;
wire   [2:0] select_ln88_3_fu_822_p3;
wire   [3:0] zext_ln88_5_fu_830_p1;
wire  signed [3:0] idx_6_fu_834_p3;
wire   [0:0] tmp_42_fu_845_p3;
wire   [0:0] or_ln88_3_fu_853_p2;
wire   [3:0] select_ln88_4_fu_858_p3;
wire  signed [4:0] sext_ln63_2_fu_841_p1;
wire   [4:0] zext_ln88_6_fu_866_p1;
wire   [4:0] idx_7_fu_870_p3;
wire   [0:0] tmp_43_fu_881_p3;
wire   [0:0] or_ln88_4_fu_889_p2;
wire   [3:0] trunc_ln63_3_fu_877_p1;
wire   [3:0] select_ln88_5_fu_894_p3;
wire   [4:0] zext_ln88_7_fu_902_p1;
wire   [4:0] idx_8_fu_906_p3;
wire   [0:0] tmp_44_fu_917_p3;
wire   [0:0] or_ln88_5_fu_925_p2;
wire   [3:0] trunc_ln63_4_fu_913_p1;
wire   [3:0] select_ln88_6_fu_930_p3;
wire   [4:0] zext_ln88_8_fu_938_p1;
wire   [4:0] idx_9_fu_942_p3;
wire   [0:0] tmp_45_fu_953_p3;
wire   [0:0] or_ln88_6_fu_961_p2;
wire   [3:0] trunc_ln63_5_fu_949_p1;
wire   [3:0] select_ln88_7_fu_966_p3;
wire   [4:0] zext_ln88_9_fu_974_p1;
wire   [4:0] idx_10_fu_978_p3;
wire   [0:0] tmp_46_fu_989_p3;
wire   [0:0] or_ln88_7_fu_997_p2;
wire   [3:0] trunc_ln63_6_fu_985_p1;
wire   [3:0] select_ln88_8_fu_1002_p3;
wire   [4:0] zext_ln88_10_fu_1010_p1;
wire   [4:0] idx_11_fu_1014_p3;
wire   [0:0] tmp_47_fu_1025_p3;
wire   [0:0] or_ln88_8_fu_1033_p2;
wire   [3:0] trunc_ln63_7_fu_1021_p1;
wire   [3:0] select_ln88_9_fu_1038_p3;
wire   [4:0] zext_ln88_11_fu_1046_p1;
wire   [4:0] idx_12_fu_1050_p3;
wire   [0:0] tmp_48_fu_1061_p3;
wire   [0:0] or_ln88_9_fu_1069_p2;
wire   [3:0] trunc_ln63_8_fu_1057_p1;
wire   [3:0] select_ln88_10_fu_1074_p3;
wire   [4:0] zext_ln88_12_fu_1082_p1;
wire   [4:0] idx_13_fu_1086_p3;
wire   [0:0] tmp_49_fu_1097_p3;
wire   [0:0] or_ln88_10_fu_1105_p2;
wire   [3:0] trunc_ln63_9_fu_1093_p1;
wire   [3:0] select_ln88_11_fu_1110_p3;
wire   [4:0] zext_ln93_fu_1118_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
end

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_114_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_120_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_23),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_126_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_23),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_132_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_24),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_138_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_24),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_144_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_25),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_150_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_25),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_156_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_26),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_162_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_26),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_168_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_28),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd8),
    .dout(grp_fu_174_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_28),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_180_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_27),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd8),
    .dout(grp_fu_186_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_27),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_192_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_29),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd8),
    .dout(grp_fu_198_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_read_29),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_204_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln83_10_reg_1207 <= icmp_ln83_10_fu_408_p2;
        icmp_ln83_11_reg_1212 <= icmp_ln83_11_fu_414_p2;
        icmp_ln83_12_reg_1217 <= icmp_ln83_12_fu_438_p2;
        icmp_ln83_13_reg_1222 <= icmp_ln83_13_fu_444_p2;
        icmp_ln83_14_reg_1227 <= icmp_ln83_14_fu_468_p2;
        icmp_ln83_15_reg_1232 <= icmp_ln83_15_fu_474_p2;
        or_ln83_1_reg_1183 <= or_ln83_1_fu_276_p2;
        or_ln83_2_reg_1189 <= or_ln83_2_fu_312_p2;
        or_ln83_3_reg_1195 <= or_ln83_3_fu_348_p2;
        or_ln83_4_reg_1201 <= or_ln83_4_fu_384_p2;
        or_ln83_reg_1177 <= or_ln83_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        idx_reg_1237 <= idx_fu_680_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln83_10_fu_560_p2 = (or_ln83_6_fu_534_p2 & and_ln83_fu_554_p2);

assign and_ln83_11_fu_584_p2 = (or_ln83_5_fu_530_p2 & and_ln83_fu_578_p2);

assign and_ln83_12_fu_662_p2 = (or_ln83_7_fu_538_p2 & and_ln83_fu_656_p2);

assign and_ln83_1_fu_485_p2 = (or_ln83_reg_1177 & grp_fu_120_p2);

assign and_ln83_2_fu_490_p2 = (or_ln83_1_reg_1183 & grp_fu_126_p2);

assign and_ln83_3_fu_495_p2 = (or_ln83_1_reg_1183 & grp_fu_132_p2);

assign and_ln83_4_fu_500_p2 = (or_ln83_2_reg_1189 & grp_fu_138_p2);

assign and_ln83_5_fu_505_p2 = (or_ln83_2_reg_1189 & grp_fu_144_p2);

assign and_ln83_6_fu_510_p2 = (or_ln83_3_reg_1195 & grp_fu_150_p2);

assign and_ln83_7_fu_515_p2 = (or_ln83_3_reg_1195 & grp_fu_156_p2);

assign and_ln83_8_fu_520_p2 = (or_ln83_4_reg_1201 & grp_fu_162_p2);

assign and_ln83_9_fu_525_p2 = (or_ln83_4_reg_1201 & grp_fu_168_p2);

assign and_ln83_fu_480_p2 = (or_ln83_reg_1177 & grp_fu_114_p2);

assign and_ln83_fu_554_p2 = (xor_ln83_fu_548_p2 & xor_ln83_fu_542_p2);

assign and_ln83_fu_578_p2 = (xor_ln83_fu_572_p2 & xor_ln83_fu_566_p2);

assign and_ln83_fu_656_p2 = (xor_ln83_fu_650_p2 & xor_ln83_fu_644_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_return = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln93_fu_1118_p1);

assign bitcast_ln83_1_fu_246_p1 = d_read_23;

assign bitcast_ln83_2_fu_282_p1 = d_read_24;

assign bitcast_ln83_3_fu_318_p1 = d_read_25;

assign bitcast_ln83_4_fu_354_p1 = d_read_26;

assign bitcast_ln83_5_fu_390_p1 = d_read_27;

assign bitcast_ln83_6_fu_420_p1 = d_read_28;

assign bitcast_ln83_7_fu_450_p1 = d_read_29;

assign bitcast_ln83_fu_210_p1 = d_read;

assign icmp_ln83_10_fu_408_p2 = ((tmp_36_fu_394_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_11_fu_414_p2 = ((trunc_ln83_5_fu_404_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_12_fu_438_p2 = ((tmp_37_fu_424_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_13_fu_444_p2 = ((trunc_ln83_6_fu_434_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_14_fu_468_p2 = ((tmp_38_fu_454_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_15_fu_474_p2 = ((trunc_ln83_7_fu_464_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_234_p2 = ((trunc_ln83_fu_224_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_2_fu_264_p2 = ((tmp_24_fu_250_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_3_fu_270_p2 = ((trunc_ln83_1_fu_260_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_4_fu_300_p2 = ((tmp_27_fu_286_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_5_fu_306_p2 = ((trunc_ln83_2_fu_296_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_6_fu_336_p2 = ((tmp_30_fu_322_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_7_fu_342_p2 = ((trunc_ln83_3_fu_332_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_8_fu_372_p2 = ((tmp_33_fu_358_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_9_fu_378_p2 = ((trunc_ln83_4_fu_368_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_228_p2 = ((tmp_fu_214_p4 != 8'd255) ? 1'b1 : 1'b0);

assign idx_10_fu_978_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln88_9_fu_974_p1);

assign idx_11_fu_1014_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln88_10_fu_1010_p1);

assign idx_12_fu_1050_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln88_11_fu_1046_p1);

assign idx_13_fu_1086_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln88_12_fu_1082_p1);

assign idx_1_fu_689_p3 = ((idx_reg_1237[0:0] == 1'b1) ? 2'd3 : zext_ln88_fu_686_p1);

assign idx_2_fu_704_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_fu_696_p1 : zext_ln88_1_fu_700_p1);

assign idx_3_fu_726_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_1_fu_711_p1 : zext_ln88_2_fu_722_p1);

assign idx_4_fu_762_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_1_fu_711_p1 : zext_ln88_3_fu_758_p1);

assign idx_5_fu_798_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_1_fu_711_p1 : zext_ln88_4_fu_794_p1);

assign idx_6_fu_834_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_1_fu_711_p1 : zext_ln88_5_fu_830_p1);

assign idx_7_fu_870_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln88_6_fu_866_p1);

assign idx_8_fu_906_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln88_7_fu_902_p1);

assign idx_9_fu_942_p3 = ((idx_reg_1237[0:0] == 1'b1) ? sext_ln63_2_fu_841_p1 : zext_ln88_8_fu_938_p1);

assign idx_fu_680_p2 = (or_ln83_18_fu_674_p2 | or_ln83_12_fu_614_p2);

assign or_ln83_10_fu_602_p2 = (and_ln83_8_fu_520_p2 | and_ln83_1_fu_485_p2);

assign or_ln83_11_fu_608_p2 = (or_ln83_9_fu_596_p2 | or_ln83_10_fu_602_p2);

assign or_ln83_12_fu_614_p2 = (or_ln83_8_fu_590_p2 | or_ln83_11_fu_608_p2);

assign or_ln83_13_fu_620_p2 = (and_ln83_fu_480_p2 | and_ln83_2_fu_490_p2);

assign or_ln83_14_fu_626_p2 = (and_ln83_4_fu_500_p2 | and_ln83_3_fu_495_p2);

assign or_ln83_15_fu_632_p2 = (or_ln83_14_fu_626_p2 | or_ln83_13_fu_620_p2);

assign or_ln83_16_fu_638_p2 = (and_ln83_6_fu_510_p2 | and_ln83_5_fu_505_p2);

assign or_ln83_17_fu_668_p2 = (or_ln83_16_fu_638_p2 | and_ln83_12_fu_662_p2);

assign or_ln83_18_fu_674_p2 = (or_ln83_17_fu_668_p2 | or_ln83_15_fu_632_p2);

assign or_ln83_1_fu_276_p2 = (icmp_ln83_3_fu_270_p2 | icmp_ln83_2_fu_264_p2);

assign or_ln83_2_fu_312_p2 = (icmp_ln83_5_fu_306_p2 | icmp_ln83_4_fu_300_p2);

assign or_ln83_3_fu_348_p2 = (icmp_ln83_7_fu_342_p2 | icmp_ln83_6_fu_336_p2);

assign or_ln83_4_fu_384_p2 = (icmp_ln83_9_fu_378_p2 | icmp_ln83_8_fu_372_p2);

assign or_ln83_5_fu_530_p2 = (icmp_ln83_11_reg_1212 | icmp_ln83_10_reg_1207);

assign or_ln83_6_fu_534_p2 = (icmp_ln83_13_reg_1222 | icmp_ln83_12_reg_1217);

assign or_ln83_7_fu_538_p2 = (icmp_ln83_15_reg_1232 | icmp_ln83_14_reg_1227);

assign or_ln83_8_fu_590_p2 = (and_ln83_11_fu_584_p2 | and_ln83_10_fu_560_p2);

assign or_ln83_9_fu_596_p2 = (and_ln83_9_fu_525_p2 | and_ln83_7_fu_515_p2);

assign or_ln83_fu_240_p2 = (icmp_ln83_fu_228_p2 | icmp_ln83_1_fu_234_p2);

assign or_ln88_10_fu_1105_p2 = (tmp_49_fu_1097_p3 | idx_reg_1237);

assign or_ln88_1_fu_781_p2 = (tmp_40_fu_773_p3 | idx_reg_1237);

assign or_ln88_2_fu_817_p2 = (tmp_41_fu_809_p3 | idx_reg_1237);

assign or_ln88_3_fu_853_p2 = (tmp_42_fu_845_p3 | idx_reg_1237);

assign or_ln88_4_fu_889_p2 = (tmp_43_fu_881_p3 | idx_reg_1237);

assign or_ln88_5_fu_925_p2 = (tmp_44_fu_917_p3 | idx_reg_1237);

assign or_ln88_6_fu_961_p2 = (tmp_45_fu_953_p3 | idx_reg_1237);

assign or_ln88_7_fu_997_p2 = (tmp_46_fu_989_p3 | idx_reg_1237);

assign or_ln88_8_fu_1033_p2 = (tmp_47_fu_1025_p3 | idx_reg_1237);

assign or_ln88_9_fu_1069_p2 = (tmp_48_fu_1061_p3 | idx_reg_1237);

assign or_ln88_fu_745_p2 = (tmp_39_fu_737_p3 | idx_reg_1237);

assign select_ln88_10_fu_1074_p3 = ((or_ln88_9_fu_1069_p2[0:0] == 1'b1) ? 4'd14 : trunc_ln63_8_fu_1057_p1);

assign select_ln88_11_fu_1110_p3 = ((or_ln88_10_fu_1105_p2[0:0] == 1'b1) ? 4'd15 : trunc_ln63_9_fu_1093_p1);

assign select_ln88_1_fu_750_p3 = ((or_ln88_fu_745_p2[0:0] == 1'b1) ? 3'd5 : trunc_ln63_fu_733_p1);

assign select_ln88_2_fu_786_p3 = ((or_ln88_1_fu_781_p2[0:0] == 1'b1) ? 3'd6 : trunc_ln63_1_fu_769_p1);

assign select_ln88_3_fu_822_p3 = ((or_ln88_2_fu_817_p2[0:0] == 1'b1) ? 3'd7 : trunc_ln63_2_fu_805_p1);

assign select_ln88_4_fu_858_p3 = ((or_ln88_3_fu_853_p2[0:0] == 1'b1) ? 4'd8 : idx_6_fu_834_p3);

assign select_ln88_5_fu_894_p3 = ((or_ln88_4_fu_889_p2[0:0] == 1'b1) ? 4'd9 : trunc_ln63_3_fu_877_p1);

assign select_ln88_6_fu_930_p3 = ((or_ln88_5_fu_925_p2[0:0] == 1'b1) ? 4'd10 : trunc_ln63_4_fu_913_p1);

assign select_ln88_7_fu_966_p3 = ((or_ln88_6_fu_961_p2[0:0] == 1'b1) ? 4'd11 : trunc_ln63_5_fu_949_p1);

assign select_ln88_8_fu_1002_p3 = ((or_ln88_7_fu_997_p2[0:0] == 1'b1) ? 4'd12 : trunc_ln63_6_fu_985_p1);

assign select_ln88_9_fu_1038_p3 = ((or_ln88_8_fu_1033_p2[0:0] == 1'b1) ? 4'd13 : trunc_ln63_7_fu_1021_p1);

assign select_ln88_fu_715_p3 = ((idx_reg_1237[0:0] == 1'b1) ? 3'd4 : zext_ln88_1_fu_700_p1);

assign sext_ln63_1_fu_711_p1 = $signed(idx_2_fu_704_p3);

assign sext_ln63_2_fu_841_p1 = idx_6_fu_834_p3;

assign sext_ln63_fu_696_p1 = idx_1_fu_689_p3;

assign tmp_24_fu_250_p4 = {{bitcast_ln83_1_fu_246_p1[30:23]}};

assign tmp_27_fu_286_p4 = {{bitcast_ln83_2_fu_282_p1[30:23]}};

assign tmp_30_fu_322_p4 = {{bitcast_ln83_3_fu_318_p1[30:23]}};

assign tmp_33_fu_358_p4 = {{bitcast_ln83_4_fu_354_p1[30:23]}};

assign tmp_36_fu_394_p4 = {{bitcast_ln83_5_fu_390_p1[30:23]}};

assign tmp_37_fu_424_p4 = {{bitcast_ln83_6_fu_420_p1[30:23]}};

assign tmp_38_fu_454_p4 = {{bitcast_ln83_7_fu_450_p1[30:23]}};

assign tmp_39_fu_737_p3 = idx_3_fu_726_p3[32'd3];

assign tmp_40_fu_773_p3 = idx_4_fu_762_p3[32'd3];

assign tmp_41_fu_809_p3 = idx_5_fu_798_p3[32'd3];

assign tmp_42_fu_845_p3 = idx_6_fu_834_p3[32'd3];

assign tmp_43_fu_881_p3 = idx_7_fu_870_p3[32'd4];

assign tmp_44_fu_917_p3 = idx_8_fu_906_p3[32'd4];

assign tmp_45_fu_953_p3 = idx_9_fu_942_p3[32'd4];

assign tmp_46_fu_989_p3 = idx_10_fu_978_p3[32'd4];

assign tmp_47_fu_1025_p3 = idx_11_fu_1014_p3[32'd4];

assign tmp_48_fu_1061_p3 = idx_12_fu_1050_p3[32'd4];

assign tmp_49_fu_1097_p3 = idx_13_fu_1086_p3[32'd4];

assign tmp_fu_214_p4 = {{bitcast_ln83_fu_210_p1[30:23]}};

assign trunc_ln63_1_fu_769_p1 = idx_4_fu_762_p3[2:0];

assign trunc_ln63_2_fu_805_p1 = idx_5_fu_798_p3[2:0];

assign trunc_ln63_3_fu_877_p1 = idx_7_fu_870_p3[3:0];

assign trunc_ln63_4_fu_913_p1 = idx_8_fu_906_p3[3:0];

assign trunc_ln63_5_fu_949_p1 = idx_9_fu_942_p3[3:0];

assign trunc_ln63_6_fu_985_p1 = idx_10_fu_978_p3[3:0];

assign trunc_ln63_7_fu_1021_p1 = idx_11_fu_1014_p3[3:0];

assign trunc_ln63_8_fu_1057_p1 = idx_12_fu_1050_p3[3:0];

assign trunc_ln63_9_fu_1093_p1 = idx_13_fu_1086_p3[3:0];

assign trunc_ln63_fu_733_p1 = idx_3_fu_726_p3[2:0];

assign trunc_ln83_1_fu_260_p1 = bitcast_ln83_1_fu_246_p1[22:0];

assign trunc_ln83_2_fu_296_p1 = bitcast_ln83_2_fu_282_p1[22:0];

assign trunc_ln83_3_fu_332_p1 = bitcast_ln83_3_fu_318_p1[22:0];

assign trunc_ln83_4_fu_368_p1 = bitcast_ln83_4_fu_354_p1[22:0];

assign trunc_ln83_5_fu_404_p1 = bitcast_ln83_5_fu_390_p1[22:0];

assign trunc_ln83_6_fu_434_p1 = bitcast_ln83_6_fu_420_p1[22:0];

assign trunc_ln83_7_fu_464_p1 = bitcast_ln83_7_fu_450_p1[22:0];

assign trunc_ln83_fu_224_p1 = bitcast_ln83_fu_210_p1[22:0];

assign xor_ln83_fu_542_p2 = (grp_fu_174_p2 ^ 1'd1);

assign xor_ln83_fu_548_p2 = (grp_fu_180_p2 ^ 1'd1);

assign xor_ln83_fu_566_p2 = (grp_fu_186_p2 ^ 1'd1);

assign xor_ln83_fu_572_p2 = (grp_fu_192_p2 ^ 1'd1);

assign xor_ln83_fu_644_p2 = (grp_fu_198_p2 ^ 1'd1);

assign xor_ln83_fu_650_p2 = (grp_fu_204_p2 ^ 1'd1);

assign zext_ln88_10_fu_1010_p1 = select_ln88_8_fu_1002_p3;

assign zext_ln88_11_fu_1046_p1 = select_ln88_9_fu_1038_p3;

assign zext_ln88_12_fu_1082_p1 = select_ln88_10_fu_1074_p3;

assign zext_ln88_1_fu_700_p1 = $unsigned(idx_1_fu_689_p3);

assign zext_ln88_2_fu_722_p1 = select_ln88_fu_715_p3;

assign zext_ln88_3_fu_758_p1 = select_ln88_1_fu_750_p3;

assign zext_ln88_4_fu_794_p1 = select_ln88_2_fu_786_p3;

assign zext_ln88_5_fu_830_p1 = select_ln88_3_fu_822_p3;

assign zext_ln88_6_fu_866_p1 = select_ln88_4_fu_858_p3;

assign zext_ln88_7_fu_902_p1 = select_ln88_5_fu_894_p3;

assign zext_ln88_8_fu_938_p1 = select_ln88_6_fu_930_p3;

assign zext_ln88_9_fu_974_p1 = select_ln88_7_fu_966_p3;

assign zext_ln88_fu_686_p1 = idx_reg_1237;

assign zext_ln93_fu_1118_p1 = select_ln88_11_fu_1110_p3;

endmodule //run_find_region
