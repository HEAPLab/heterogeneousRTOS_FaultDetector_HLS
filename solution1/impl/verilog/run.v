// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="run_run,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.020700,HLS_SYN_LAT=608,HLS_SYN_TPT=none,HLS_SYN_MEM=96,HLS_SYN_DSP=0,HLS_SYN_FF=82276,HLS_SYN_LUT=94312,HLS_VERSION=2022_1}" *)

module run (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        toScheduler_TDATA,
        toScheduler_TVALID,
        toScheduler_TREADY,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 18;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 256;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (256 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input  [7:0] toScheduler_TDATA;
input   toScheduler_TVALID;
output   toScheduler_TREADY;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [47:0] contr;
wire   [5:0] n_regions_in_address0;
reg    n_regions_in_ce0;
wire   [7:0] n_regions_in_q0;
wire   [63:0] sharedMem;
reg   [0:0] fsmstate;
reg   [5:0] n_regions_V_address0;
reg    n_regions_V_ce0;
reg    n_regions_V_we0;
reg   [7:0] n_regions_V_d0;
wire   [7:0] n_regions_V_q0;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_1;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_2;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_3;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_4;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_5;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_6;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_7;
reg   [63:0] sharedMem_read_reg_549;
reg   [5:0] trunc_ln3_reg_602;
wire   [0:0] fsmstate_load_load_fu_437_p1;
reg   [0:0] fsmstate_load_reg_607;
wire   [63:0] zext_ln451_fu_449_p1;
reg   [63:0] zext_ln451_reg_618;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln451_fu_454_p2;
wire    grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWVALID;
wire   [63:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWADDR;
wire   [0:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWID;
wire   [31:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWLEN;
wire   [2:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWSIZE;
wire   [1:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWBURST;
wire   [1:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWLOCK;
wire   [3:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWCACHE;
wire   [2:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWPROT;
wire   [3:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWQOS;
wire   [3:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWREGION;
wire   [0:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWUSER;
wire    grp_runTrainAfterInit_fu_297_m_axi_empty_20_WVALID;
wire   [255:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_WDATA;
wire   [31:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_WSTRB;
wire    grp_runTrainAfterInit_fu_297_m_axi_empty_20_WLAST;
wire   [0:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_WID;
wire   [0:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_WUSER;
wire    grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARVALID;
wire   [63:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARADDR;
wire   [0:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARID;
wire   [31:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARLEN;
wire   [2:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARSIZE;
wire   [1:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARBURST;
wire   [1:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARLOCK;
wire   [3:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARCACHE;
wire   [2:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARPROT;
wire   [3:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARQOS;
wire   [3:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARREGION;
wire   [0:0] grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARUSER;
wire    grp_runTrainAfterInit_fu_297_m_axi_empty_20_RREADY;
wire    grp_runTrainAfterInit_fu_297_m_axi_empty_20_BREADY;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out;
wire   [31:0] grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out;
wire   [5:0] grp_runTrainAfterInit_fu_297_n_regions_V_address0;
wire    grp_runTrainAfterInit_fu_297_n_regions_V_ce0;
wire   [7:0] grp_runTrainAfterInit_fu_297_n_regions_V_d0;
wire    grp_runTrainAfterInit_fu_297_n_regions_V_we0;
wire   [5:0] grp_runTrainAfterInit_fu_297_n_regions_V_address1;
wire    grp_runTrainAfterInit_fu_297_n_regions_V_ce1;
wire   [7:0] grp_runTrainAfterInit_fu_297_n_regions_V_d1;
wire    grp_runTrainAfterInit_fu_297_n_regions_V_we1;
wire    grp_runTrainAfterInit_fu_297_ap_start;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out_ap_vld;
wire    grp_runTrainAfterInit_fu_297_ap_done;
wire    grp_runTrainAfterInit_fu_297_ap_ready;
wire    grp_runTrainAfterInit_fu_297_ap_idle;
reg    grp_runTrainAfterInit_fu_297_ap_continue;
wire    gmem_AWREADY;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [255:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    grp_runTrainAfterInit_fu_297_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_sync_grp_runTrainAfterInit_fu_297_ap_ready;
wire    ap_sync_grp_runTrainAfterInit_fu_297_ap_done;
reg    ap_block_state5_on_subcall_done;
reg    ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_ready;
reg    ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_done;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_copyout_fu_250;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_33_copy_fu_246;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_34_copy_fu_242;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_35_copy_fu_238;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_36_copy_fu_234;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_37_copy_fu_230;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_38_copy_fu_226;
reg   [31:0] run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_39_copy_fu_222;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
reg   [6:0] i_fu_254;
wire   [6:0] i_2_fu_460_p2;
reg    ap_block_state1;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    regslice_both_toScheduler_U_apdone_blk;
wire   [7:0] toScheduler_TDATA_int_regslice;
wire    toScheduler_TVALID_int_regslice;
wire    regslice_both_toScheduler_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 fsmstate = 1'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key = 32'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_1 = 32'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_2 = 32'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_3 = 32'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_4 = 32'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_5 = 32'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_6 = 32'd0;
#0 run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_7 = 32'd0;
#0 grp_runTrainAfterInit_fu_297_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_ready = 1'b0;
#0 ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_done = 1'b0;
end

run_n_regions_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
n_regions_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(n_regions_V_address0),
    .ce0(n_regions_V_ce0),
    .we0(n_regions_V_we0),
    .d0(n_regions_V_d0),
    .q0(n_regions_V_q0)
);

run_runTrainAfterInit grp_runTrainAfterInit_fu_297(
    .m_axi_empty_20_AWVALID(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWVALID),
    .m_axi_empty_20_AWREADY(1'b0),
    .m_axi_empty_20_AWADDR(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWADDR),
    .m_axi_empty_20_AWID(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWID),
    .m_axi_empty_20_AWLEN(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWLEN),
    .m_axi_empty_20_AWSIZE(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWSIZE),
    .m_axi_empty_20_AWBURST(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWBURST),
    .m_axi_empty_20_AWLOCK(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWLOCK),
    .m_axi_empty_20_AWCACHE(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWCACHE),
    .m_axi_empty_20_AWPROT(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWPROT),
    .m_axi_empty_20_AWQOS(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWQOS),
    .m_axi_empty_20_AWREGION(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWREGION),
    .m_axi_empty_20_AWUSER(grp_runTrainAfterInit_fu_297_m_axi_empty_20_AWUSER),
    .m_axi_empty_20_WVALID(grp_runTrainAfterInit_fu_297_m_axi_empty_20_WVALID),
    .m_axi_empty_20_WREADY(1'b0),
    .m_axi_empty_20_WDATA(grp_runTrainAfterInit_fu_297_m_axi_empty_20_WDATA),
    .m_axi_empty_20_WSTRB(grp_runTrainAfterInit_fu_297_m_axi_empty_20_WSTRB),
    .m_axi_empty_20_WLAST(grp_runTrainAfterInit_fu_297_m_axi_empty_20_WLAST),
    .m_axi_empty_20_WID(grp_runTrainAfterInit_fu_297_m_axi_empty_20_WID),
    .m_axi_empty_20_WUSER(grp_runTrainAfterInit_fu_297_m_axi_empty_20_WUSER),
    .m_axi_empty_20_ARVALID(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARVALID),
    .m_axi_empty_20_ARREADY(gmem_ARREADY),
    .m_axi_empty_20_ARADDR(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARADDR),
    .m_axi_empty_20_ARID(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARID),
    .m_axi_empty_20_ARLEN(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARLEN),
    .m_axi_empty_20_ARSIZE(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARSIZE),
    .m_axi_empty_20_ARBURST(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARBURST),
    .m_axi_empty_20_ARLOCK(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARLOCK),
    .m_axi_empty_20_ARCACHE(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARCACHE),
    .m_axi_empty_20_ARPROT(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARPROT),
    .m_axi_empty_20_ARQOS(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARQOS),
    .m_axi_empty_20_ARREGION(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARREGION),
    .m_axi_empty_20_ARUSER(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARUSER),
    .m_axi_empty_20_RVALID(gmem_RVALID),
    .m_axi_empty_20_RREADY(grp_runTrainAfterInit_fu_297_m_axi_empty_20_RREADY),
    .m_axi_empty_20_RDATA(gmem_RDATA),
    .m_axi_empty_20_RLAST(1'b0),
    .m_axi_empty_20_RID(1'd0),
    .m_axi_empty_20_RFIFONUM(gmem_RFIFONUM),
    .m_axi_empty_20_RUSER(1'd0),
    .m_axi_empty_20_RRESP(2'd0),
    .m_axi_empty_20_BVALID(1'b0),
    .m_axi_empty_20_BREADY(grp_runTrainAfterInit_fu_297_m_axi_empty_20_BREADY),
    .m_axi_empty_20_BRESP(2'd0),
    .m_axi_empty_20_BID(1'd0),
    .m_axi_empty_20_BUSER(1'd0),
    .empty_21(sharedMem_read_reg_549),
    .empty(trunc_ln3_reg_602),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_1(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_2(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_2),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_3(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_3),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_4(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_4),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_5(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_5),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_6(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_6),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_7(run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_7),
    .n_regions_V_address0(grp_runTrainAfterInit_fu_297_n_regions_V_address0),
    .n_regions_V_ce0(grp_runTrainAfterInit_fu_297_n_regions_V_ce0),
    .n_regions_V_d0(grp_runTrainAfterInit_fu_297_n_regions_V_d0),
    .n_regions_V_q0(n_regions_V_q0),
    .n_regions_V_we0(grp_runTrainAfterInit_fu_297_n_regions_V_we0),
    .n_regions_V_address1(grp_runTrainAfterInit_fu_297_n_regions_V_address1),
    .n_regions_V_ce1(grp_runTrainAfterInit_fu_297_n_regions_V_ce1),
    .n_regions_V_d1(grp_runTrainAfterInit_fu_297_n_regions_V_d1),
    .n_regions_V_q1(8'd0),
    .n_regions_V_we1(grp_runTrainAfterInit_fu_297_n_regions_V_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .empty_ap_vld(1'b1),
    .ap_start(grp_runTrainAfterInit_fu_297_ap_start),
    .empty_21_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out_ap_vld(grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out_ap_vld),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_1_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_2_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_3_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_4_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_5_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_6_ap_vld(1'b1),
    .run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_7_ap_vld(1'b1),
    .ap_done(grp_runTrainAfterInit_fu_297_ap_done),
    .ap_ready(grp_runTrainAfterInit_fu_297_ap_ready),
    .ap_idle(grp_runTrainAfterInit_fu_297_ap_idle),
    .ap_continue(grp_runTrainAfterInit_fu_297_ap_continue)
);

run_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .contr(contr),
    .sharedMem(sharedMem),
    .n_regions_in_address0(n_regions_in_address0),
    .n_regions_in_ce0(n_regions_in_ce0),
    .n_regions_in_q0(n_regions_in_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

run_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_DW( 256 ),
    .USER_AW( 64 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARADDR),
    .I_ARLEN(grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(256'd0),
    .I_WSTRB(32'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

run_regslice_both #(
    .DataWidth( 8 ))
regslice_both_toScheduler_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(toScheduler_TDATA),
    .vld_in(toScheduler_TVALID),
    .ack_in(regslice_both_toScheduler_U_ack_in),
    .data_out(toScheduler_TDATA_int_regslice),
    .vld_out(toScheduler_TVALID_int_regslice),
    .ack_out(1'b0),
    .apdone_blk(regslice_both_toScheduler_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_done <= 1'b0;
        end else if ((grp_runTrainAfterInit_fu_297_ap_done == 1'b1)) begin
            ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_ready <= 1'b0;
        end else if ((grp_runTrainAfterInit_fu_297_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runTrainAfterInit_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) | ((ap_sync_grp_runTrainAfterInit_fu_297_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state5)))) begin
            grp_runTrainAfterInit_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_runTrainAfterInit_fu_297_ap_ready == 1'b1)) begin
            grp_runTrainAfterInit_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (fsmstate_load_load_fu_437_p1 == 1'd0))) begin
        i_fu_254 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln451_fu_454_p2 == 1'd0))) begin
        i_fu_254 <= i_2_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln451_fu_454_p2 == 1'd1))) begin
        fsmstate <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        fsmstate_load_reg_607 <= fsmstate;
        sharedMem_read_reg_549 <= sharedMem;
        trunc_ln3_reg_602 <= {{contr[21:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (fsmstate_load_reg_607 == 1'd1))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_39_copy_fu_222;
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_1 <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_38_copy_fu_226;
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_2 <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_37_copy_fu_230;
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_3 <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_36_copy_fu_234;
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_4 <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_35_copy_fu_238;
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_5 <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_34_copy_fu_242;
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_6 <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_33_copy_fu_246;
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_7 <= run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_copyout_fu_250;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_33_copy_fu_246 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_33_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_34_copy_fu_242 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_34_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_35_copy_fu_238 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_35_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_36_copy_fu_234 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_36_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_37_copy_fu_230 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_37_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_38_copy_fu_226 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_38_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_39_copy_fu_222 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_39_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        run_controlStr_REGION_T_16_ap_int_ap_int_ap_int_stream_data_key_copyout_fu_250 <= grp_runTrainAfterInit_fu_297_run_controlStr_REGION_T_16_ap_int_8_ap_int_8_ap_int_32_stream_ap_int_8_0_data_key_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln451_reg_618[6 : 0] <= zext_ln451_fu_449_p1[6 : 0];
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state5_on_subcall_done)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARVALID = grp_runTrainAfterInit_fu_297_m_axi_empty_20_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_RREADY = grp_runTrainAfterInit_fu_297_m_axi_empty_20_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_runTrainAfterInit_fu_297_ap_continue = 1'b1;
    end else begin
        grp_runTrainAfterInit_fu_297_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        n_regions_V_address0 = zext_ln451_reg_618;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        n_regions_V_address0 = grp_runTrainAfterInit_fu_297_n_regions_V_address0;
    end else begin
        n_regions_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        n_regions_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        n_regions_V_ce0 = grp_runTrainAfterInit_fu_297_n_regions_V_ce0;
    end else begin
        n_regions_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        n_regions_V_d0 = n_regions_in_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        n_regions_V_d0 = grp_runTrainAfterInit_fu_297_n_regions_V_d0;
    end else begin
        n_regions_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        n_regions_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        n_regions_V_we0 = grp_runTrainAfterInit_fu_297_n_regions_V_we0;
    end else begin
        n_regions_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_regions_in_ce0 = 1'b1;
    end else begin
        n_regions_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (fsmstate_load_load_fu_437_p1 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (fsmstate_load_load_fu_437_p1 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln451_fu_454_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state5_on_subcall_done = ((ap_sync_grp_runTrainAfterInit_fu_297_ap_ready & ap_sync_grp_runTrainAfterInit_fu_297_ap_done) == 1'b0);
end

assign ap_sync_grp_runTrainAfterInit_fu_297_ap_done = (grp_runTrainAfterInit_fu_297_ap_done | ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_done);

assign ap_sync_grp_runTrainAfterInit_fu_297_ap_ready = (grp_runTrainAfterInit_fu_297_ap_ready | ap_sync_reg_grp_runTrainAfterInit_fu_297_ap_ready);

assign fsmstate_load_load_fu_437_p1 = fsmstate;

assign grp_runTrainAfterInit_fu_297_ap_start = grp_runTrainAfterInit_fu_297_ap_start_reg;

assign i_2_fu_460_p2 = (i_fu_254 + 7'd1);

assign icmp_ln451_fu_454_p2 = ((i_fu_254 == 7'd64) ? 1'b1 : 1'b0);

assign n_regions_in_address0 = zext_ln451_fu_449_p1;

assign toScheduler_TREADY = regslice_both_toScheduler_U_ack_in;

assign zext_ln451_fu_449_p1 = i_fu_254;

always @ (posedge ap_clk) begin
    zext_ln451_reg_618[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //run
