// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_run_test (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read1,
        data_0_address0,
        data_0_ce0,
        data_0_q0,
        data_1_address0,
        data_1_ce0,
        data_1_q0,
        data_2_address0,
        data_2_ce0,
        data_2_q0,
        data_3_address0,
        data_3_ce0,
        data_3_q0,
        data_4_address0,
        data_4_ce0,
        data_4_q0,
        data_5_address0,
        data_5_ce0,
        data_5_q0,
        data_6_address0,
        data_6_ce0,
        data_6_q0,
        data_7_address0,
        data_7_ce0,
        data_7_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read1;
output  [6:0] data_0_address0;
output   data_0_ce0;
input  [31:0] data_0_q0;
output  [6:0] data_1_address0;
output   data_1_ce0;
input  [31:0] data_1_q0;
output  [6:0] data_2_address0;
output   data_2_ce0;
input  [31:0] data_2_q0;
output  [6:0] data_3_address0;
output   data_3_ce0;
input  [31:0] data_3_q0;
output  [6:0] data_4_address0;
output   data_4_ce0;
input  [31:0] data_4_q0;
output  [6:0] data_5_address0;
output   data_5_ce0;
input  [31:0] data_5_q0;
output  [6:0] data_6_address0;
output   data_6_ce0;
input  [31:0] data_6_q0;
output  [6:0] data_7_address0;
output   data_7_ce0;
input  [31:0] data_7_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_0_ce0;
reg data_1_ce0;
reg data_2_ce0;
reg data_3_ce0;
reg data_4_ce0;
reg data_5_ce0;
reg data_6_ce0;
reg data_7_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] data_7_addr_reg_593;
reg   [6:0] data_6_addr_reg_598;
reg   [6:0] data_5_addr_reg_603;
reg   [6:0] data_4_addr_reg_608;
reg   [6:0] data_3_addr_reg_613;
reg   [6:0] data_2_addr_reg_618;
reg   [6:0] data_1_addr_reg_623;
reg   [31:0] data_0_load_reg_633;
wire    ap_CS_fsm_state2;
wire   [0:0] grp_fu_178_p2;
reg   [0:0] cmp_i_i_i_reg_641;
wire    ap_CS_fsm_state3;
wire   [0:0] and_ln35_fu_250_p2;
reg   [0:0] and_ln35_reg_645;
wire    ap_CS_fsm_state4;
reg   [31:0] data_1_load_reg_649;
wire    ap_CS_fsm_state5;
reg   [0:0] cmp_i9_i_i_reg_657;
wire    ap_CS_fsm_state6;
wire   [0:0] and_ln35_1_fu_297_p2;
reg   [0:0] and_ln35_1_reg_661;
wire    ap_CS_fsm_state7;
reg   [31:0] data_2_load_reg_665;
wire    ap_CS_fsm_state8;
reg   [0:0] cmp_i10_i_i_reg_673;
wire    ap_CS_fsm_state9;
wire   [0:0] and_ln35_2_fu_344_p2;
reg   [0:0] and_ln35_2_reg_677;
wire    ap_CS_fsm_state10;
reg   [31:0] data_3_load_reg_681;
wire    ap_CS_fsm_state11;
reg   [0:0] cmp_i11_i_i_reg_689;
wire    ap_CS_fsm_state12;
wire   [0:0] and_ln35_3_fu_391_p2;
reg   [0:0] and_ln35_3_reg_693;
wire    ap_CS_fsm_state13;
reg   [31:0] data_4_load_reg_697;
wire    ap_CS_fsm_state14;
reg   [0:0] cmp_i12_i_i_reg_705;
wire    ap_CS_fsm_state15;
wire   [0:0] and_ln35_4_fu_438_p2;
reg   [0:0] and_ln35_4_reg_709;
wire    ap_CS_fsm_state16;
reg   [31:0] data_5_load_reg_713;
wire    ap_CS_fsm_state17;
reg   [0:0] cmp_i13_i_i_reg_721;
wire    ap_CS_fsm_state18;
wire   [0:0] and_ln35_5_fu_485_p2;
reg   [0:0] and_ln35_5_reg_725;
wire    ap_CS_fsm_state19;
reg   [31:0] data_6_load_reg_729;
wire    ap_CS_fsm_state20;
reg   [0:0] cmp_i14_i_i_reg_737;
wire    ap_CS_fsm_state21;
wire   [0:0] and_ln35_6_fu_532_p2;
reg   [0:0] and_ln35_6_reg_741;
wire    ap_CS_fsm_state22;
reg   [31:0] data_7_load_reg_745;
wire    ap_CS_fsm_state23;
reg   [0:0] cmp_i15_i_i_reg_753;
wire    ap_CS_fsm_state24;
wire   [0:0] and_ln35_7_fu_579_p2;
reg   [0:0] and_ln35_7_reg_757;
wire    ap_CS_fsm_state25;
reg   [0:0] tmp_23_reg_761;
wire    ap_CS_fsm_state26;
wire    grp_find_region_fu_166_ap_start;
wire    grp_find_region_fu_166_ap_done;
wire    grp_find_region_fu_166_ap_idle;
wire    grp_find_region_fu_166_ap_ready;
wire   [4:0] grp_find_region_fu_166_ap_return;
reg   [0:0] ap_phi_mux_error_write_assign_phi_fu_159_p4;
reg   [0:0] error_write_assign_reg_155;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
reg    grp_find_region_fu_166_ap_start_reg;
wire   [63:0] zext_ln29_fu_197_p1;
reg    ap_block_state1;
reg   [31:0] grp_fu_178_p0;
reg   [31:0] grp_fu_178_p1;
reg   [31:0] grp_fu_185_p0;
wire   [31:0] bitcast_ln35_fu_209_p1;
wire   [7:0] tmp_fu_212_p4;
wire   [22:0] trunc_ln35_fu_222_p1;
wire   [0:0] icmp_ln35_1_fu_232_p2;
wire   [0:0] icmp_ln35_fu_226_p2;
wire   [0:0] grp_fu_185_p2;
wire   [0:0] or_ln35_1_fu_238_p2;
wire   [0:0] or_ln35_2_fu_244_p2;
wire   [31:0] bitcast_ln35_1_fu_256_p1;
wire   [7:0] tmp_4_fu_259_p4;
wire   [22:0] trunc_ln35_1_fu_269_p1;
wire   [0:0] icmp_ln35_3_fu_279_p2;
wire   [0:0] icmp_ln35_2_fu_273_p2;
wire   [0:0] or_ln35_fu_285_p2;
wire   [0:0] or_ln35_3_fu_291_p2;
wire   [31:0] bitcast_ln35_2_fu_303_p1;
wire   [7:0] tmp_8_fu_306_p4;
wire   [22:0] trunc_ln35_2_fu_316_p1;
wire   [0:0] icmp_ln35_5_fu_326_p2;
wire   [0:0] icmp_ln35_4_fu_320_p2;
wire   [0:0] or_ln35_4_fu_332_p2;
wire   [0:0] or_ln35_5_fu_338_p2;
wire   [31:0] bitcast_ln35_3_fu_350_p1;
wire   [7:0] tmp_2_fu_353_p4;
wire   [22:0] trunc_ln35_3_fu_363_p1;
wire   [0:0] icmp_ln35_7_fu_373_p2;
wire   [0:0] icmp_ln35_6_fu_367_p2;
wire   [0:0] or_ln35_6_fu_379_p2;
wire   [0:0] or_ln35_7_fu_385_p2;
wire   [31:0] bitcast_ln35_4_fu_397_p1;
wire   [7:0] tmp_11_fu_400_p4;
wire   [22:0] trunc_ln35_4_fu_410_p1;
wire   [0:0] icmp_ln35_9_fu_420_p2;
wire   [0:0] icmp_ln35_8_fu_414_p2;
wire   [0:0] or_ln35_8_fu_426_p2;
wire   [0:0] or_ln35_9_fu_432_p2;
wire   [31:0] bitcast_ln35_5_fu_444_p1;
wire   [7:0] tmp_14_fu_447_p4;
wire   [22:0] trunc_ln35_5_fu_457_p1;
wire   [0:0] icmp_ln35_11_fu_467_p2;
wire   [0:0] icmp_ln35_10_fu_461_p2;
wire   [0:0] or_ln35_10_fu_473_p2;
wire   [0:0] or_ln35_11_fu_479_p2;
wire   [31:0] bitcast_ln35_6_fu_491_p1;
wire   [7:0] tmp_17_fu_494_p4;
wire   [22:0] trunc_ln35_6_fu_504_p1;
wire   [0:0] icmp_ln35_13_fu_514_p2;
wire   [0:0] icmp_ln35_12_fu_508_p2;
wire   [0:0] or_ln35_12_fu_520_p2;
wire   [0:0] or_ln35_13_fu_526_p2;
wire   [31:0] bitcast_ln35_7_fu_538_p1;
wire   [7:0] tmp_20_fu_541_p4;
wire   [22:0] trunc_ln35_7_fu_551_p1;
wire   [0:0] icmp_ln35_15_fu_561_p2;
wire   [0:0] icmp_ln35_14_fu_555_p2;
wire   [0:0] or_ln35_14_fu_567_p2;
wire   [0:0] or_ln35_15_fu_573_p2;
reg   [4:0] grp_fu_178_opcode;
reg   [27:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 28'd1;
#0 grp_find_region_fu_166_ap_start_reg = 1'b0;
end

run_find_region grp_find_region_fu_166(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_find_region_fu_166_ap_start),
    .ap_done(grp_find_region_fu_166_ap_done),
    .ap_idle(grp_find_region_fu_166_ap_idle),
    .ap_ready(grp_find_region_fu_166_ap_ready),
    .d_read(data_0_load_reg_633),
    .d_read_23(data_1_load_reg_649),
    .d_read_24(data_2_load_reg_665),
    .d_read_25(data_3_load_reg_681),
    .d_read_26(data_4_load_reg_697),
    .d_read_27(data_5_load_reg_713),
    .d_read_28(data_6_load_reg_729),
    .d_read_29(data_7_load_reg_745),
    .ap_return(grp_find_region_fu_166_ap_return)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .din1(grp_fu_178_p1),
    .ce(1'b1),
    .opcode(grp_fu_178_opcode),
    .dout(grp_fu_178_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_185_p0),
    .din1(32'd4286578688),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_185_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_find_region_fu_166_ap_start_reg <= 1'b0;
    end else begin
        if (((1'd0 == and_ln35_7_fu_579_p2) & (1'b1 == ap_CS_fsm_state25))) begin
            grp_find_region_fu_166_ap_start_reg <= 1'b1;
        end else if ((grp_find_region_fu_166_ap_ready == 1'b1)) begin
            grp_find_region_fu_166_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        error_write_assign_reg_155 <= 1'd1;
    end else if (((1'd0 == and_ln35_7_reg_757) & (1'd0 == and_ln35_6_reg_741) & (1'd0 == and_ln35_5_reg_725) & (1'd0 == and_ln35_4_reg_709) & (1'd0 == and_ln35_3_reg_693) & (1'd0 == and_ln35_2_reg_677) & (1'd0 == and_ln35_1_reg_661) & (1'd0 == and_ln35_reg_645) & (cmp_i15_i_i_reg_753 == 1'd0) & (cmp_i14_i_i_reg_737 == 1'd0) & (cmp_i13_i_i_reg_721 == 1'd0) & (1'b1 == ap_CS_fsm_state27) & (cmp_i12_i_i_reg_705 == 1'd0) & (cmp_i11_i_i_reg_689 == 1'd0) & (cmp_i10_i_i_reg_673 == 1'd0) & (cmp_i9_i_i_reg_657 == 1'd0) & (cmp_i_i_i_reg_641 == 1'd0))) begin
        error_write_assign_reg_155 <= tmp_23_reg_761;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        and_ln35_1_reg_661 <= and_ln35_1_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        and_ln35_2_reg_677 <= and_ln35_2_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        and_ln35_3_reg_693 <= and_ln35_3_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        and_ln35_4_reg_709 <= and_ln35_4_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        and_ln35_5_reg_725 <= and_ln35_5_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        and_ln35_6_reg_741 <= and_ln35_6_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        and_ln35_7_reg_757 <= and_ln35_7_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln35_reg_645 <= and_ln35_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cmp_i10_i_i_reg_673 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        cmp_i11_i_i_reg_689 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        cmp_i12_i_i_reg_705 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        cmp_i13_i_i_reg_721 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        cmp_i14_i_i_reg_737 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        cmp_i15_i_i_reg_753 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        cmp_i9_i_i_reg_657 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cmp_i_i_i_reg_641 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_0_load_reg_633 <= data_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_1_addr_reg_623 <= zext_ln29_fu_197_p1;
        data_2_addr_reg_618 <= zext_ln29_fu_197_p1;
        data_3_addr_reg_613 <= zext_ln29_fu_197_p1;
        data_4_addr_reg_608 <= zext_ln29_fu_197_p1;
        data_5_addr_reg_603 <= zext_ln29_fu_197_p1;
        data_6_addr_reg_598 <= zext_ln29_fu_197_p1;
        data_7_addr_reg_593 <= zext_ln29_fu_197_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_1_load_reg_649 <= data_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        data_2_load_reg_665 <= data_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_3_load_reg_681 <= data_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data_4_load_reg_697 <= data_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        data_5_load_reg_713 <= data_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        data_6_load_reg_729 <= data_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        data_7_load_reg_745 <= data_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_23_reg_761 <= grp_find_region_fu_166_ap_return[32'd4];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

always @ (*) begin
    if ((grp_find_region_fu_166_ap_done == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln35_7_reg_757) & (1'd0 == and_ln35_6_reg_741) & (1'd0 == and_ln35_5_reg_725) & (1'd0 == and_ln35_4_reg_709) & (1'd0 == and_ln35_3_reg_693) & (1'd0 == and_ln35_2_reg_677) & (1'd0 == and_ln35_1_reg_661) & (1'd0 == and_ln35_reg_645) & (cmp_i15_i_i_reg_753 == 1'd0) & (cmp_i14_i_i_reg_737 == 1'd0) & (cmp_i13_i_i_reg_721 == 1'd0) & (1'b1 == ap_CS_fsm_state27) & (cmp_i12_i_i_reg_705 == 1'd0) & (cmp_i11_i_i_reg_689 == 1'd0) & (cmp_i10_i_i_reg_673 == 1'd0) & (cmp_i9_i_i_reg_657 == 1'd0) & (cmp_i_i_i_reg_641 == 1'd0))) begin
        ap_phi_mux_error_write_assign_phi_fu_159_p4 = tmp_23_reg_761;
    end else begin
        ap_phi_mux_error_write_assign_phi_fu_159_p4 = error_write_assign_reg_155;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_0_ce0 = 1'b1;
    end else begin
        data_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        data_1_ce0 = 1'b1;
    end else begin
        data_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_2_ce0 = 1'b1;
    end else begin
        data_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        data_3_ce0 = 1'b1;
    end else begin
        data_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        data_4_ce0 = 1'b1;
    end else begin
        data_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        data_5_ce0 = 1'b1;
    end else begin
        data_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        data_6_ce0 = 1'b1;
    end else begin
        data_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        data_7_ce0 = 1'b1;
    end else begin
        data_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (grp_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state21) & (grp_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state18) & (grp_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (grp_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (grp_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (grp_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (grp_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (grp_fu_178_p2 == 1'd0)))) begin
        grp_fu_178_opcode = 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_178_opcode = 5'd8;
    end else begin
        grp_fu_178_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_178_p0 = data_7_load_reg_745;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_178_p0 = data_7_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_178_p0 = data_6_load_reg_729;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_178_p0 = data_6_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_178_p0 = data_5_load_reg_713;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_178_p0 = data_5_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_178_p0 = data_4_load_reg_697;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_178_p0 = data_4_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_178_p0 = data_3_load_reg_681;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_178_p0 = data_3_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_178_p0 = data_2_load_reg_665;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_178_p0 = data_2_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_178_p0 = data_1_load_reg_649;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_178_p0 = data_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_178_p0 = data_0_load_reg_633;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_178_p0 = data_0_q0;
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_178_p1 = 32'd2139095040;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_178_p1 = 32'd0;
    end else begin
        grp_fu_178_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_185_p0 = data_7_load_reg_745;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_185_p0 = data_6_load_reg_729;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_185_p0 = data_5_load_reg_713;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_185_p0 = data_4_load_reg_697;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_185_p0 = data_3_load_reg_681;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_185_p0 = data_2_load_reg_665;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_185_p0 = data_1_load_reg_649;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_185_p0 = data_0_load_reg_633;
    end else begin
        grp_fu_185_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln35_fu_250_p2) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'd1 == and_ln35_1_fu_297_p2) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'd1 == and_ln35_2_fu_344_p2) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'd1 == and_ln35_3_fu_391_p2) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'd1 == and_ln35_4_fu_438_p2) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'd1 == and_ln35_5_fu_485_p2) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'd1 == and_ln35_6_fu_532_p2) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'd1 == and_ln35_7_fu_579_p2) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((grp_find_region_fu_166_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln35_1_fu_297_p2 = (or_ln35_fu_285_p2 & or_ln35_3_fu_291_p2);

assign and_ln35_2_fu_344_p2 = (or_ln35_5_fu_338_p2 & or_ln35_4_fu_332_p2);

assign and_ln35_3_fu_391_p2 = (or_ln35_7_fu_385_p2 & or_ln35_6_fu_379_p2);

assign and_ln35_4_fu_438_p2 = (or_ln35_9_fu_432_p2 & or_ln35_8_fu_426_p2);

assign and_ln35_5_fu_485_p2 = (or_ln35_11_fu_479_p2 & or_ln35_10_fu_473_p2);

assign and_ln35_6_fu_532_p2 = (or_ln35_13_fu_526_p2 & or_ln35_12_fu_520_p2);

assign and_ln35_7_fu_579_p2 = (or_ln35_15_fu_573_p2 & or_ln35_14_fu_567_p2);

assign and_ln35_fu_250_p2 = (or_ln35_2_fu_244_p2 & or_ln35_1_fu_238_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_return = ap_phi_mux_error_write_assign_phi_fu_159_p4;

assign bitcast_ln35_1_fu_256_p1 = data_1_load_reg_649;

assign bitcast_ln35_2_fu_303_p1 = data_2_load_reg_665;

assign bitcast_ln35_3_fu_350_p1 = data_3_load_reg_681;

assign bitcast_ln35_4_fu_397_p1 = data_4_load_reg_697;

assign bitcast_ln35_5_fu_444_p1 = data_5_load_reg_713;

assign bitcast_ln35_6_fu_491_p1 = data_6_load_reg_729;

assign bitcast_ln35_7_fu_538_p1 = data_7_load_reg_745;

assign bitcast_ln35_fu_209_p1 = data_0_load_reg_633;

assign data_0_address0 = zext_ln29_fu_197_p1;

assign data_1_address0 = data_1_addr_reg_623;

assign data_2_address0 = data_2_addr_reg_618;

assign data_3_address0 = data_3_addr_reg_613;

assign data_4_address0 = data_4_addr_reg_608;

assign data_5_address0 = data_5_addr_reg_603;

assign data_6_address0 = data_6_addr_reg_598;

assign data_7_address0 = data_7_addr_reg_593;

assign grp_find_region_fu_166_ap_start = grp_find_region_fu_166_ap_start_reg;

assign icmp_ln35_10_fu_461_p2 = ((tmp_14_fu_447_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_11_fu_467_p2 = ((trunc_ln35_5_fu_457_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_12_fu_508_p2 = ((tmp_17_fu_494_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_13_fu_514_p2 = ((trunc_ln35_6_fu_504_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_14_fu_555_p2 = ((tmp_20_fu_541_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_15_fu_561_p2 = ((trunc_ln35_7_fu_551_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_1_fu_232_p2 = ((trunc_ln35_fu_222_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_2_fu_273_p2 = ((tmp_4_fu_259_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_3_fu_279_p2 = ((trunc_ln35_1_fu_269_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_4_fu_320_p2 = ((tmp_8_fu_306_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_5_fu_326_p2 = ((trunc_ln35_2_fu_316_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_6_fu_367_p2 = ((tmp_2_fu_353_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_7_fu_373_p2 = ((trunc_ln35_3_fu_363_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_8_fu_414_p2 = ((tmp_11_fu_400_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_9_fu_420_p2 = ((trunc_ln35_4_fu_410_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_226_p2 = ((tmp_fu_212_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln35_10_fu_473_p2 = (icmp_ln35_11_fu_467_p2 | icmp_ln35_10_fu_461_p2);

assign or_ln35_11_fu_479_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_12_fu_520_p2 = (icmp_ln35_13_fu_514_p2 | icmp_ln35_12_fu_508_p2);

assign or_ln35_13_fu_526_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_14_fu_567_p2 = (icmp_ln35_15_fu_561_p2 | icmp_ln35_14_fu_555_p2);

assign or_ln35_15_fu_573_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_1_fu_238_p2 = (icmp_ln35_fu_226_p2 | icmp_ln35_1_fu_232_p2);

assign or_ln35_2_fu_244_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_3_fu_291_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_4_fu_332_p2 = (icmp_ln35_5_fu_326_p2 | icmp_ln35_4_fu_320_p2);

assign or_ln35_5_fu_338_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_6_fu_379_p2 = (icmp_ln35_7_fu_373_p2 | icmp_ln35_6_fu_367_p2);

assign or_ln35_7_fu_385_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_8_fu_426_p2 = (icmp_ln35_9_fu_420_p2 | icmp_ln35_8_fu_414_p2);

assign or_ln35_9_fu_432_p2 = (grp_fu_185_p2 | grp_fu_178_p2);

assign or_ln35_fu_285_p2 = (icmp_ln35_3_fu_279_p2 | icmp_ln35_2_fu_273_p2);

assign tmp_11_fu_400_p4 = {{bitcast_ln35_4_fu_397_p1[30:23]}};

assign tmp_14_fu_447_p4 = {{bitcast_ln35_5_fu_444_p1[30:23]}};

assign tmp_17_fu_494_p4 = {{bitcast_ln35_6_fu_491_p1[30:23]}};

assign tmp_20_fu_541_p4 = {{bitcast_ln35_7_fu_538_p1[30:23]}};

assign tmp_2_fu_353_p4 = {{bitcast_ln35_3_fu_350_p1[30:23]}};

assign tmp_4_fu_259_p4 = {{bitcast_ln35_1_fu_256_p1[30:23]}};

assign tmp_8_fu_306_p4 = {{bitcast_ln35_2_fu_303_p1[30:23]}};

assign tmp_fu_212_p4 = {{bitcast_ln35_fu_209_p1[30:23]}};

assign trunc_ln35_1_fu_269_p1 = bitcast_ln35_1_fu_256_p1[22:0];

assign trunc_ln35_2_fu_316_p1 = bitcast_ln35_2_fu_303_p1[22:0];

assign trunc_ln35_3_fu_363_p1 = bitcast_ln35_3_fu_350_p1[22:0];

assign trunc_ln35_4_fu_410_p1 = bitcast_ln35_4_fu_397_p1[22:0];

assign trunc_ln35_5_fu_457_p1 = bitcast_ln35_5_fu_444_p1[22:0];

assign trunc_ln35_6_fu_504_p1 = bitcast_ln35_6_fu_491_p1[22:0];

assign trunc_ln35_7_fu_551_p1 = bitcast_ln35_7_fu_538_p1[22:0];

assign trunc_ln35_fu_222_p1 = bitcast_ln35_fu_209_p1[22:0];

assign zext_ln29_fu_197_p1 = p_read1;

endmodule //run_run_test
